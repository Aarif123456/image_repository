{"version":3,"sources":["common/dataRetrieval/AjaxComponent.tsx","common/dataRetrieval/apiConstants.ts","common/dataRetrieval/ProgressCircle.tsx","common/internationalizedComponents/TextField.tsx","common/internationalizedComponents/Link.tsx","common/internationalizedComponents/InternationalizedMessageBox.tsx","common/internationalizedComponents/Thumbs.tsx","common/internationalizedComponents/Dropzone.tsx","common/dataRetrieval/RetrieveErrorBox.tsx","common/dataRetrieval/SimpleErrorMessage.tsx","common/dataRetrieval/useAjax.tsx","common/MessageBox.tsx","common/errorHandling/ErrorFallback.tsx","common/errorHandling/NotFound.tsx","components/home/Home.tsx","components/home/HomeView.tsx","resources/space.jpg","components/home/HomeStyle.tsx","components/home/SignupButton.tsx","components/home/LoginButton.tsx","components/login/Login.tsx","components/login/FormStructure.ts","components/login/LoginStyle.tsx","components/login/LoginHeader.tsx","components/login/LoginMessage.tsx","components/login/LoginSubmitButton.tsx","components/login/LoginView.tsx","components/register/SignUp.tsx","components/register/FormStructure.ts","components/register/SignUpStyle.tsx","components/register/SignUpHeader.tsx","components/register/SignupMessage.tsx","components/register/SignUpSubmitButton.tsx","components/register/SignUpView.tsx","components/galleryTable/FileManagementButtonGroup.tsx","components/galleryTable/GalleryTable.tsx","components/galleryTable/GalleryTableHead.tsx","components/galleryTable/GalleryTableRow.tsx","components/galleryTable/GalleryTableStyle.tsx","components/galleryTable/GalleryTableToolbar.tsx","components/galleryTable/TableSorter.ts","components/galleryUpload/GalleryUpload.tsx","components/gallery/GallerySnackbar.tsx","components/galleryUpload/GalleryResetButton.tsx","components/galleryUpload/GallerySubmitButton.tsx","components/galleryUpload/GalleryUploadStyle.tsx","components/gallery/Gallery.tsx","common/dataRetrieval/swrFetch.tsx","components/gallery/GalleryStyle.tsx","components/gallery/GalleryView.tsx","components/gallery/updateFileMutator.ts","components/App.tsx","index.tsx"],"names":["useAjaxComponent","props","SuccessComponent","ErrorComponent","RetrieveErrorBox","LoadingComponent","ProgressCircle","data","isLoading","error","intl","useIntl","AjaxComponent","undefined","errorMessage","val","message","formatMessage","id","AXIOS_ENDPOINT","axios","create","withCredentials","baseURL","useStyles","makeStyles","progress","display","inline","margin","size","classes","CircularProgress","className","TextField","name","autoCompleteName","labelTranslatorId","inputProps","autoFocus","type","helperText","autoComplete","variant","required","fullWidth","label","InputProps","Link","to","linkProps","component","RouterLink","bolder","chunks","emphasizer","InternationalizedMessageBox","defaultMessage","description","values","breakingLine","b","em","i","Thumbs","index","imageFile","imageTitle","useState","imageUrl","setImageUrl","reader","FileReader","addEventListener","result","readAsDataURL","src","alt","height","width","dropzoneStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","acceptStyle","rejectStyle","Dropzone","onDropHandler","files","useDropzone","accept","onDrop","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","length","map","file","SimpleErrorMessage","useAjax","endpoint","setError","setLoading","setData","ajax","args","post","then","response","catch","e","ajaxCall","default","padding","backgroundColor","color","warning","getStylesForType","MessageBox","children","Paper","clsx","FallbackComponent","myErrorHandler","_error","info","console","componentStack","ErrorFallback","onError","NotFound","Typography","Home","useHomeStyles","backgroundContainer","Grid","container","spacing","direction","alignItems","justify","mainGrid","item","xs","ButtonGroup","orientation","aria-label","mainButtons","HomeView","createStyles","minHeight","minWidth","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","SignUpButton","history","useHistory","Button","onClick","push","LoginButton","Login","useLoginStyles","validationSchema","yup","email","password","remember","defined","getValidationSchema","formik","useFormik","initialValues","cast","onSubmit","loggedIn","Backdrop","backdrop","open","paper","form","handleSubmit","noValidate","touched","errors","value","onChange","handleChange","Boolean","FormControlLabel","control","Checkbox","theme","marginTop","flexDirection","zIndex","drawer","useLoginHeaderStyles","avatar","palette","secondary","main","useLoginButtonStyles","submit","LoginHeader","Avatar","LoginMessage","SubmitButton","LoginView","Container","maxWidth","SignUp","useSignUpStyles","min","confirmPassword","oneOf","firstName","lastName","isSubmitting","SignupMessage","sm","useSignUpHeaderStyles","useSignUpButtonStyles","SignUpHeader","SignUpView","FileManagementButtonGroup","fileName","IconButton","alert","headCells","numeric","GalleryTable","useGalleryTableStyle","order","setOrder","orderBy","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","fd","fileID","fileSize","uploadedDtString","uploaded","filePath","mime","accessID","DateTime","fromSQL","log","emptyRows","Math","handleClick","_event","selectedIndex","indexOf","newSelected","concat","slice","root","TableContainer","Table","table","aria-labelledby","numSelected","onSelectAllClick","event","target","checked","n","onRequestSort","property","rowCount","TableBody","stableSort","getComparator","row","isItemSelected","labelId","TableRow","TableCell","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Switch","createSortHandler","GalleryTableHead","useTableHeadStyle","TableHead","indeterminate","headCell","align","sortDirection","TableSortLabel","active","visuallyHidden","formatBytes","bytes","decimals","k","dm","sizes","floor","parseFloat","pow","toFixed","GalleryTableRow","dt","hover","role","aria-checked","tabIndex","toLocaleString","DATETIME_FULL","border","clip","overflow","position","top","overflowY","overflowX","marginBottom","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","text","primary","dark","title","flex","GalleryTableToolbar","Toolbar","Tooltip","descendingComparator","a","array","comparator","stabilizedThis","el","sort","GalleryControlButton","useGalleryButtonStyle","setOpen","handleClose","reason","GalleryInformation","useGallerySnackbar","Object","entries","Map","has","set","validateFiles","formData","FormData","key","append","resetForm","updateTable","acceptedFiles","formikValues","setFieldValue","ResetButton","input","Gallery","useGalleryRootStyle","useSWR","url","get","params","swrError","mutate","useEffect","useSwrAjax","Alert","elevation","GallerySnackbar","errorData","setErrorData","successCount","setSuccessCount","filter","success","severity","filename","operationInfo","Snackbar","autoHideDuration","onClose","GalleryView","swrMutate","darkTheme","createMuiTheme","pink","green","App","ThemeProvider","CssBaseline","hashType","path","exact","language","navigator","languages","messagesEn","WrappedApp","locale","messages","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a5bb8d0.chunk.js","sourcesContent":["import { FunctionComponent, ReactNode } from 'react';\nimport { useIntl } from 'react-intl';\nimport { RetrieveErrorBox, ProgressCircle, AjaxType } from '../dataRetrieval';\n\nexport type ErrorMessageType = { errorMessage?: string };\nexport type FetchComponentProps<T> = {\n    data: T;\n};\n\ninterface Props<T> extends Omit<AjaxType<T, unknown>, 'ajax'> {\n    SuccessComponent: FunctionComponent<FetchComponentProps<T>>;\n    LoadingComponent?: FunctionComponent;\n    ErrorComponent?: FunctionComponent<ErrorMessageType>;\n}\n\ninterface AjaxComponentReturn {\n    AjaxComponent: FunctionComponent;\n}\n\nexport function useAjaxComponent<T>(props: Props<T> & { children?: ReactNode }): AjaxComponentReturn {\n    const { SuccessComponent, ErrorComponent = RetrieveErrorBox, LoadingComponent = ProgressCircle, data, isLoading, error } = props;\n    const intl = useIntl();\n    const AjaxComponent: FunctionComponent = () => {\n        /*If component is not ready to call then we just return a placeholder */\n        if (error !== undefined && error.error !== undefined) {\n            return <ErrorComponent errorMessage={error?.error} />;\n        }\n        if (isLoading) {\n            return <LoadingComponent />;\n        }\n        if (data === undefined) {\n            return <div />;\n        }\n\n        /* After going through all the possible reasons we can have an error, '\n         * we finally try to render the component with the information we\n         * retrieved from our end point\n         */\n        try {\n            return <SuccessComponent data={data} />;\n        } catch (error) {\n            let errorMessage = 'Unknown error';\n            if ((error as Error) !== undefined) {\n                const val: ErrorMessageType = { errorMessage: (error as Error).message ?? '' };\n                errorMessage = intl.formatMessage({ id: 'Error.processingError' }, val);\n            }\n            return <ErrorComponent errorMessage={errorMessage} />;\n        }\n    };\n\n    return {\n        AjaxComponent\n    };\n}\n","import axios, { AxiosInstance } from 'axios';\n\nexport const API = 'https://arif115.myweb.cs.uwindsor.ca/imagerepository/api/';\n\nexport const AXIOS_ENDPOINT: AxiosInstance = axios.create({\n    withCredentials: true,\n    baseURL: API\n});\n","import { FunctionComponent } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { Theme, makeStyles } from '@material-ui/core/styles';\n\ninterface Props {\n    inline?: boolean;\n    size?: number;\n}\n\nconst useStyles = makeStyles<Theme, { inline?: boolean }>({\n    progress: {\n        display: ({ inline }): string => (inline ? 'default' : 'block'),\n        margin: ({ inline }): string => (inline ? '0' : 'auto')\n    }\n});\n\nexport const ProgressCircle: FunctionComponent<Props> = ({ inline, size }) => {\n    const classes = useStyles({ inline });\n\n    return <CircularProgress className={classes.progress} size={size ? size : 40} />;\n};\n","import { FunctionComponent } from 'react';\nimport { TextField as MaterialTextField, InputBaseProps as InputProps } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\n\nexport type TextInputFieldProps = {\n    id: string;\n    name: string;\n    autoCompleteName: string;\n    labelTranslatorId: string;\n    autoFocus?: boolean;\n    type?: string;\n    helperText?: string | false;\n    inputProps?: InputProps;\n};\n\nexport const TextField: FunctionComponent<TextInputFieldProps> = ({\n    id,\n    name,\n    autoCompleteName,\n    labelTranslatorId,\n    inputProps,\n    autoFocus,\n    type,\n    helperText\n}) => {\n    const intl = useIntl();\n    return (\n        <>\n            <MaterialTextField\n                id={id}\n                autoComplete={autoCompleteName}\n                name={name}\n                variant='outlined'\n                required\n                fullWidth\n                label={intl.formatMessage({ id: labelTranslatorId })}\n                autoFocus={autoFocus}\n                type={type !== undefined ? type : 'text'}\n                helperText={helperText}\n                InputProps={{\n                    ...inputProps\n                }}\n            />\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link as MaterialLink, LinkProps as MaterialLinkProps } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport type LinkProps = {\n    to: string;\n    labelTranslatorId: string;\n    linkProps?: MaterialLinkProps;\n};\nexport const Link: FunctionComponent<LinkProps> = ({ to, labelTranslatorId, linkProps }) => (\n    <>\n        {to && (\n            <MaterialLink {...linkProps} component={RouterLink} to={to}>\n                <FormattedMessage id={labelTranslatorId} />\n            </MaterialLink>\n        )}\n    </>\n);\n","import { FunctionComponent } from 'react';\nimport { MessageBox, MessageBoxTypes } from '..';\nimport { MessageDescriptor, FormattedMessage } from 'react-intl';\n\nexport interface InternationalizedMessageBoxProp extends MessageDescriptor {\n    errorMessage?: string;\n    className?: string;\n    type: MessageBoxTypes;\n}\n\n/* Used to italicize and bold */\nexport const bolder: FunctionComponent = (chunks) => <b>{chunks}</b>;\nexport const emphasizer: FunctionComponent = (chunks) => <em>{chunks}</em>;\n\nexport const InternationalizedMessageBox: FunctionComponent<InternationalizedMessageBoxProp> = ({\n    type,\n    className,\n    errorMessage,\n    id,\n    defaultMessage,\n    description\n}) => (\n    <MessageBox type={type} className={className}>\n        <FormattedMessage\n            id={id}\n            defaultMessage={defaultMessage}\n            description={description}\n            values={{\n                breakingLine: <br />,\n                b: bolder,\n                em: emphasizer,\n                i: emphasizer,\n                errorMessage: errorMessage ?? 'Something went wrong :('\n            }}\n        />\n    </MessageBox>\n);\n","import { FunctionComponent, useState } from 'react';\nexport type ThumbProps = {\n    index: number;\n    imageFile: File;\n    imageTitle: string;\n};\nexport const Thumbs: FunctionComponent<ThumbProps> = ({ index, imageFile, imageTitle }) => {\n    const [imageUrl, setImageUrl] = useState<string>('');\n    const reader = new FileReader();\n    reader.addEventListener(\n        'load',\n        () => {\n            // convert image file to base64 string\n            setImageUrl(reader.result as string);\n        },\n        false\n    );\n    reader.readAsDataURL(imageFile);\n    return <img src={imageUrl} key={`image.${index}`} alt={imageTitle} className='img-thumbnail mt-2' height={200} width={200} />;\n};\n","import { FunctionComponent, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Thumbs } from './Thumbs';\nimport { FormattedMessage } from 'react-intl';\n\nconst dropzoneStyle = {\n    width: '100%',\n    height: 'auto',\n    borderWidth: 2,\n    borderColor: 'rgb(102, 102, 102)',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\n\nexport type DropzoneProps = {\n    onDropHandler: (acceptedFiles: File[]) => void;\n    files?: File[];\n};\nexport const Dropzone: FunctionComponent<DropzoneProps> = ({ onDropHandler, files }) => {\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n        accept: 'image/*',\n        onDrop: onDropHandler\n    });\n    const style = useMemo(\n        () => ({\n            ...dropzoneStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {})\n        }),\n        [isDragActive, isDragReject, isDragAccept]\n    );\n\n    return (\n        <div {...getRootProps({ className: 'dropzone', style })}>\n            <input {...getInputProps()} />\n            <p>\n                <FormattedMessage id='DragZone.dragPrompt' />\n            </p>\n            {isDragActive && (\n                <p>\n                    <FormattedMessage id='DragZone.acceptedPrompt' />\n                </p>\n            )}\n            {isDragReject && (\n                <p>\n                    <FormattedMessage id='DragZone.rejectedPrompt' />\n                </p>\n            )}\n            {(files ?? []).length === 0 && <p>Try dragging a file here!</p>}\n            {(files ?? []).map((file: File, i: number) => (\n                <Thumbs index={i} imageFile={file} imageTitle={`Title.${i}`} />\n            ))}\n            <em>\n                <FormattedMessage id='DragZone.fileTypePrompt' />\n            </em>\n        </div>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { InternationalizedMessageBox, InternationalizedMessageBoxProp } from '../internationalizedComponents';\n\nexport type RetrieveErrorBoxProps = Omit<InternationalizedMessageBoxProp, 'type' | 'id'>;\nexport const RetrieveErrorBox: FunctionComponent<RetrieveErrorBoxProps> = ({ className, errorMessage, defaultMessage, description }) => (\n    <InternationalizedMessageBox\n        type='error'\n        id='Error.retrieveError'\n        className={className}\n        errorMessage={errorMessage}\n        defaultMessage={defaultMessage}\n        description={description}\n    />\n);\n","import { FunctionComponent } from 'react';\nimport { ErrorMessageType } from './AjaxComponent';\n\nexport const SimpleErrorMessage: FunctionComponent<ErrorMessageType> = ({ errorMessage }) => {\n    if (errorMessage !== undefined) {\n        return <div> {errorMessage} </div>;\n    }\n    return <div />;\n};\n","import { useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport { AXIOS_ENDPOINT } from './apiConstants';\n\nexport type ErrorType = { error: string } | undefined;\nexport type AjaxType<T, Y> = {\n    error: ErrorType;\n    isLoading: boolean;\n    data: T | undefined;\n    ajax: (args?: Y) => void;\n};\nexport type Setters<T> = (x: T) => void;\nexport type ReturnType<T> = T | ErrorType;\n\nexport function ajaxCall<T, Y>(\n    endpoint: string,\n    setLoading: Setters<boolean>,\n    setData: Setters<T>,\n    setError: Setters<ErrorType>,\n    args?: Y\n): void {\n    setLoading(true);\n    AXIOS_ENDPOINT.post(endpoint, args)\n        .then((response: AxiosResponse<ReturnType<T>>) => {\n            const result: ReturnType<T> = response.data;\n            setLoading(false);\n            setData(result as T);\n            if (result !== undefined && 'error' in result) {\n                setError({ error: result.error });\n            }\n        })\n        .catch((error): void => {\n            if ((error as Error) !== undefined) {\n                const e: ErrorType = { error: (error as Error).message ?? 'Unknown error' };\n                setError(e);\n                setLoading(false);\n            }\n        });\n}\n\nexport function useAjax<T, Y>(endpoint: string): AjaxType<T, Y> {\n    const [error, setError] = useState<ErrorType>(undefined as ErrorType);\n    const [isLoading, setLoading] = useState(false);\n    const [data, setData] = useState<T>();\n    const ajax = (args?: Y) => ajaxCall<T, Y>(endpoint, setLoading, setData, setError, args);\n\n    return {\n        error,\n        isLoading,\n        data,\n        ajax\n    };\n}\n","import { FunctionComponent } from 'react';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nexport type MessageBoxTypes = 'warning' | 'error';\n\ninterface Props {\n    className?: string;\n    type: MessageBoxTypes;\n}\n\nconst useStyles = makeStyles({\n    default: {\n        padding: '15px'\n    },\n    error: {\n        backgroundColor: '#f2dede',\n        color: '#a94442'\n    },\n    warning: {\n        backgroundColor: '#fcf8e3',\n        color: '#8a6d3b'\n    }\n});\n\nconst getStylesForType = (classes: ReturnType<typeof useStyles>, type: MessageBoxTypes): string => {\n    switch (type) {\n        case 'error':\n            return classes.error;\n        case 'warning':\n            return classes.warning;\n    }\n};\n\nexport const MessageBox: FunctionComponent<Props> = ({ children, className, type }) => {\n    const classes = useStyles();\n    return <Paper className={clsx(classes.default, getStylesForType(classes, type), className)}>{children}</Paper>;\n};\n","import { FunctionComponent } from 'react';\n\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary';\n\nimport { MessageBox } from '..';\n\nconst FallbackComponent: FunctionComponent<FallbackProps> = ({ error }) => (\n    <MessageBox type='error'>\n        <b>Error</b>: An error occurred while rendering a component: <i>{error.message}</i>\n        <br />\n        <br />\n        Try refreshing the page, and please contact our team if this issue persists.\n    </MessageBox>\n);\n\nconst myErrorHandler = (_error: Error, info: { componentStack: string }) => {\n    console.error(`ComponentStack:${info.componentStack}`);\n};\n\nexport const ErrorFallback: FunctionComponent = ({ children }) => (\n    <ErrorBoundary FallbackComponent={FallbackComponent} onError={myErrorHandler}>\n        {children}\n    </ErrorBoundary>\n);\n","import { FunctionComponent } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { ErrorFallback } from './ErrorFallback';\nimport { MessageBox } from '..';\nimport { FormattedMessage } from 'react-intl';\n\nexport const NotFound: FunctionComponent = () => (\n    <ErrorFallback>\n        <MessageBox type='error'>\n            <Typography variant='h5'>\n                <FormattedMessage id='Error.404.greeting' />\n            </Typography>\n            <Typography variant='h6'>\n                <FormattedMessage id='Error.404.message' />\n            </Typography>\n            <Typography variant='body2'>\n                <FormattedMessage id='Error.404.errorBody' />\n            </Typography>\n        </MessageBox>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\nimport { useHomeStyles, LoginButton, SignUpButton } from '../home';\nimport { Grid, ButtonGroup } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const Home: FunctionComponent = () => {\n    const classes: ClassNameMap = useHomeStyles();\n    return (\n        <div className={classes.backgroundContainer}>\n            <Grid container spacing={0} direction='row' alignItems='center' justify='center' className={classes.mainGrid}>\n                <Grid item xs={3}>\n                    <ButtonGroup\n                        orientation='vertical'\n                        color='primary'\n                        variant='contained'\n                        fullWidth\n                        aria-label='vertical landing page button group'\n                        className={classes.mainButtons}>\n                        <LoginButton />\n                        <SignUpButton />\n                    </ButtonGroup>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common/errorHandling';\nimport { Home } from './Home';\n\nexport const HomeView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Home />\n    </ErrorFallback>\n);\n","export default __webpack_public_path__ + \"static/media/space.32812815.jpg\";","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\nimport backgroundImage from '../../resources/space.jpg';\n\nexport const useHomeStyles = makeStyles(\n    (): StyleRules =>\n        createStyles({\n            mainGrid: {\n                minHeight: '100vh'\n            },\n            mainButtons: {\n                minWidth: '30%'\n            },\n            backgroundContainer: {\n                backgroundImage: `url(${backgroundImage})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n                width: '100vw',\n                height: '100vh'\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport const SignUpButton: FunctionComponent = (props) => {\n    const history = useHistory();\n    const goToSignupPage = (): void => {\n        history.push('/signup');\n    };\n    return (\n        <Button onClick={goToSignupPage} {...props}>\n            {' '}\n            <FormattedMessage id='UserManagement.signup' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport const LoginButton: FunctionComponent = (props) => {\n    const history = useHistory();\n    const goToLoginPage = (): void => {\n        history.push('/login');\n    };\n    return (\n        <Button onClick={goToLoginPage} {...props}>\n            <FormattedMessage id='UserManagement.login' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { Link, TextField, useAjax, ProgressCircle } from '../../common';\nimport { FormValues, getValidationSchema, useLoginStyles, SubmitButton, LoginHeader, LoginApiReturn, LoginMessage } from '../login';\nimport { Backdrop, Checkbox, FormControlLabel, Grid } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n/* Modified from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in */\n\nexport const Login: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const validationSchema = getValidationSchema(intl);\n\n    const formik = useFormik({\n        initialValues: validationSchema.cast({\n            email: '',\n            password: '',\n            remember: false\n        }),\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            ajax(values as FormValues);\n        }\n    });\n    const { data, isLoading, error, ajax } = useAjax<LoginApiReturn, FormValues>('/userManagement/loginUser');\n\n    if (data !== undefined) {\n        const { loggedIn } = data;\n        if (loggedIn) {\n            history.push('/gallery');\n        }\n    }\n\n    if (isLoading) {\n        return (\n            <Backdrop className={classes.backdrop} open={true}>\n                {' '}\n                <ProgressCircle />{' '}\n            </Backdrop>\n        );\n    }\n\n    /* Manage form data then pass it to the submit button */\n    return (\n        <div className={classes.paper}>\n            <LoginHeader />\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                <TextField\n                    id='email'\n                    labelTranslatorId='UserManagement.email'\n                    name='email'\n                    type='email'\n                    autoCompleteName='email'\n                    helperText={formik.touched.email && formik.errors.email}\n                    inputProps={{\n                        value: formik.values.email,\n                        onChange: formik.handleChange,\n                        error: formik.touched.email && Boolean(formik.errors.email)\n                    }}\n                />\n                <TextField\n                    name='password'\n                    labelTranslatorId='UserManagement.password'\n                    type='password'\n                    id='password'\n                    autoCompleteName='password'\n                    helperText={formik.touched.password && formik.errors.password}\n                    inputProps={{\n                        value: formik.values.password,\n                        onChange: formik.handleChange,\n                        error: formik.touched.password && Boolean(formik.errors.password)\n                    }}\n                />\n                <FormControlLabel\n                    control={<Checkbox value={formik.values.remember} color='primary' onChange={formik.handleChange} />}\n                    name='remember'\n                    label={intl.formatMessage({ id: 'UserManagement.rememberMe' })}\n                />\n                <SubmitButton />\n                <Grid container justify='flex-end'>\n                    <Grid item xs>\n                        <Link to='/forgotPassword' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.forgotPassword' />\n                    </Grid>\n                    <Grid item>\n                        <Link to='/signUp' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.notRegistered' />\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <LoginMessage message={data !== undefined ? data.message : error !== undefined ? error.error : ''} />\n                </Grid>\n            </form>\n        </div>\n    );\n};\n","import * as yup from 'yup';\nimport { IntlShape } from 'react-intl';\n\nexport interface FormValues {\n    email: string;\n    password: string;\n    remember?: boolean;\n}\n\nexport function getValidationSchema(intl: IntlShape): yup.SchemaOf<FormValues> {\n    return yup\n        .object({\n            email: yup\n                .string()\n                .email(intl.formatMessage({ id: 'UserManagement.validEmail' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredEmail' })),\n            password: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredPassword' })),\n            remember: yup.boolean()\n        })\n        .defined();\n}\n","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\n\nexport const useLoginStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            paper: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            },\n            form: {\n                width: '100%', // Fix IE 11 issue.\n                marginTop: theme.spacing(3)\n            },\n            backdrop: {\n                zIndex: theme.zIndex.drawer + 1,\n                color: '#fff'\n            }\n        })\n);\n\nexport const useLoginHeaderStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            avatar: {\n                margin: theme.spacing(1),\n                backgroundColor: theme.palette.secondary.main\n            }\n        })\n);\n\nexport const useLoginButtonStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            submit: {\n                margin: theme.spacing(3, 0, 2)\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useLoginHeaderStyles } from './LoginStyle';\nimport { Avatar, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { FormattedMessage } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const LoginHeader: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginHeaderStyles();\n    return (\n        <>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n                <FormattedMessage id='UserManagement.login' />\n            </Typography>\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\n\nexport type LoginApiReturn = {\n    loggedIn: boolean;\n    message: string;\n};\n\ntype Props = {\n    message?: string;\n};\nexport const LoginMessage: FunctionComponent<Props> = ({ message }) => {\n    return <div> {message} </div>;\n};\n","import { FunctionComponent } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { useLoginButtonStyles } from './LoginStyle';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SubmitButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginButtonStyles();\n    return (\n        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n            <FormattedMessage id='UserManagement.login' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common';\nimport { Container } from '@material-ui/core';\nimport { Login } from './Login';\n\nexport const LoginView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Container component='main' maxWidth='xs'>\n            <Login />\n        </Container>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\nimport { useAjax, useAjaxComponent, SimpleErrorMessage, Link, TextField } from '../../common';\nimport { FormValues, getValidationSchema, useSignUpStyles, SignUpHeader, SignupApiReturn, SignupMessage, SubmitButton } from '../register';\nimport { Grid } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n\n/* Modified from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-up */\n\nexport const SignUp: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const validationSchema = getValidationSchema(intl);\n    const formik = useFormik({\n        initialValues: validationSchema.cast({\n            email: '',\n            password: '',\n            confirmPassword: '',\n            firstName: '',\n            lastName: ''\n        }),\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            if (isLoading && formik.isSubmitting) return;\n            ajax(values as FormValues);\n        }\n    });\n\n    const { data, isLoading, error, ajax } = useAjax<SignupApiReturn, FormValues>('/userManagement/addUser');\n    const { AjaxComponent } = useAjaxComponent<SignupApiReturn>({\n        SuccessComponent: SignupMessage,\n        ErrorComponent: SimpleErrorMessage,\n        data,\n        isLoading,\n        error\n    });\n\n    if (data !== undefined) {\n        const { id } = data;\n        if (id > 0) {\n            history.push('gallery');\n        }\n    }\n\n    /* Manage form data then pass it to the submit button */\n    return (\n        <div className={classes.paper}>\n            <SignUpHeader />\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoCompleteName='firstName'\n                            name='firstName'\n                            id='firstName'\n                            labelTranslatorId='UserManagement.firstName'\n                            autoFocus\n                            helperText={formik.touched.firstName && formik.errors.firstName}\n                            inputProps={{\n                                value: formik.values.firstName,\n                                onChange: formik.handleChange,\n                                error: formik.touched.firstName && Boolean(formik.errors.firstName)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id='lastName'\n                            labelTranslatorId='UserManagement.lastName'\n                            name='lastName'\n                            autoCompleteName='lname'\n                            helperText={formik.touched.lastName && formik.errors.lastName}\n                            inputProps={{\n                                value: formik.values.lastName,\n                                onChange: formik.handleChange,\n                                error: formik.touched.lastName && Boolean(formik.errors.lastName)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            id='email'\n                            labelTranslatorId='UserManagement.email'\n                            name='email'\n                            type='email'\n                            autoCompleteName='email'\n                            helperText={formik.touched.email && formik.errors.email}\n                            inputProps={{\n                                value: formik.values.email,\n                                onChange: formik.handleChange,\n                                error: formik.touched.email && Boolean(formik.errors.email)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            name='password'\n                            labelTranslatorId='UserManagement.password'\n                            type='password'\n                            id='password'\n                            autoCompleteName='password'\n                            helperText={formik.touched.password && formik.errors.password}\n                            inputProps={{\n                                value: formik.values.password,\n                                onChange: formik.handleChange,\n                                error: formik.touched.password && Boolean(formik.errors.password)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            name='confirmPassword'\n                            labelTranslatorId='UserManagement.confirmPassword'\n                            type='password'\n                            id='confirmPassword'\n                            autoCompleteName='confirmPassword'\n                            helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n                            inputProps={{\n                                value: formik.values.confirmPassword,\n                                onChange: formik.handleChange,\n                                error: formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <SubmitButton />\n                <Grid container justify='flex-end'>\n                    <Grid item>\n                        <Link to='/login' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.alreadyRegistered' />\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <AjaxComponent />\n                </Grid>\n            </form>\n        </div>\n    );\n};\n","import * as yup from 'yup';\nimport { IntlShape } from 'react-intl';\n\nexport interface FormValues {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n}\n\nexport function getValidationSchema(intl: IntlShape): yup.SchemaOf<FormValues> {\n    return yup\n        .object({\n            email: yup\n                .string()\n                .email(intl.formatMessage({ id: 'UserManagement.validEmail' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredEmail' })),\n            password: yup\n                .string()\n                .min(8, intl.formatMessage({ id: 'UserManagement.validPassword' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredPassword' })),\n            confirmPassword: yup\n                .string()\n                .oneOf([yup.ref('password'), null], intl.formatMessage({ id: 'UserManagement.validConfirmPassword' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredConfirmPassword' })),\n            firstName: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredFirstName' })),\n            lastName: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredLastName' }))\n        })\n        .defined();\n}\n","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\n\nexport const useSignUpStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            paper: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            },\n            form: {\n                width: '100%', // Fix IE 11 issue.\n                marginTop: theme.spacing(3)\n            }\n        })\n);\n\nexport const useSignUpHeaderStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            avatar: {\n                margin: theme.spacing(1),\n                backgroundColor: theme.palette.secondary.main\n            }\n        })\n);\n\nexport const useSignUpButtonStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            submit: {\n                margin: theme.spacing(3, 0, 2)\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useSignUpHeaderStyles } from './SignUpStyle';\nimport { Avatar, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { FormattedMessage } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SignUpHeader: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpHeaderStyles();\n    return (\n        <>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n                <FormattedMessage id='UserManagement.signup' />\n            </Typography>\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { FetchComponentProps } from '../../common';\nimport { FormattedMessage } from 'react-intl';\nexport type SignupApiReturn = {\n    id: string | number;\n    message?: string;\n};\nexport type SuccessProps = FetchComponentProps<SignupApiReturn>;\n\nexport const SignupMessage: FunctionComponent<SuccessProps> = ({ data }) => {\n    if (data !== undefined) {\n        if ('id' in data && data.id !== undefined) {\n            return <FormattedMessage id='UserManagement.signupSuccess' />;\n        } else if ('message' in data && data.message !== undefined) {\n            return <div> {data.message} </div>;\n        }\n    }\n    return <div />;\n};\n","import { FunctionComponent } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { useSignUpButtonStyles } from './SignUpStyle';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SubmitButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpButtonStyles();\n    return (\n        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n            <FormattedMessage id='UserManagement.signup' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common';\nimport { Container } from '@material-ui/core';\nimport { SignUp } from './SignUp';\n\nexport const SignUpView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Container component='main' maxWidth='xs'>\n            <SignUp />\n        </Container>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\nimport { TableData } from '.';\nimport { useIntl } from 'react-intl';\nimport { IconButton, ButtonGroup } from '@material-ui/core';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const FileManagementButtonGroup: FunctionComponent<TableData> = ({ fileName }) => {\n    /* TODO: make button call endpoint that triggers a download*/\n    const intl = useIntl();\n    return (\n        <ButtonGroup>\n            <IconButton\n                onClick={() => {\n                    alert(`Will trigger a download of the ${fileName} file`);\n                }}\n                aria-label={intl.formatMessage({\n                    id: 'FileManagement.download'\n                })}>\n                <CloudDownloadIcon />\n            </IconButton>\n            <IconButton\n                onClick={() => {\n                    alert(`Will delete the ${fileName} file`);\n                }}\n                aria-label={intl.formatMessage({\n                    id: 'FileManagement.delete'\n                })}>\n                <DeleteIcon />\n            </IconButton>\n        </ButtonGroup>\n    );\n};\n","import { useState, ChangeEvent, MouseEvent, FunctionComponent } from 'react';\nimport { Table, TableBody, TableCell, TableRow, TableContainer, TablePagination, Paper, FormControlLabel, Switch } from '@material-ui/core';\nimport {\n    GalleryTableHead,\n    GalleryTableRow,\n    getComparator,\n    stableSort,\n    Order,\n    HeadCell,\n    GalleryTableToolbar,\n    useGalleryTableStyle\n} from '../galleryTable';\nimport { useIntl } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { DateTime } from 'luxon';\nimport { FetchComponentProps } from '../../common';\nimport { FileApiReturnData, FileData } from '../gallery';\n\n/* TODO: figure out how to incorporate folders as well */\nexport interface TableData {\n    fileID: number;\n    fileName: string;\n    fileSize: number;\n    /* When the file was first uploaded */\n    uploaded: DateTime;\n    /* Folder */\n    filePath: string;\n    /* type of file*/\n    mime: string;\n    accessID: number;\n}\n\nfunction createData(\n    fileID: number,\n    fileName: string,\n    fileSize: number,\n    uploadedDtString: string,\n    filePath: string,\n    mime: string,\n    accessID: number\n): TableData {\n    const uploaded = DateTime.fromSQL(uploadedDtString);\n    return { fileID, fileName, fileSize, filePath, uploaded, mime, accessID };\n}\n\nconst headCells: HeadCell<TableData>[] = [\n    { id: 'fileName', numeric: false },\n    { id: 'fileSize', numeric: true },\n    { id: 'filePath', numeric: false },\n    { id: 'uploaded', numeric: false }\n];\n\nexport const GalleryTable: FunctionComponent<FetchComponentProps<FileApiReturnData>> = ({ data }) => {\n    /******************* Hooks*******************/\n    const classes: ClassNameMap = useGalleryTableStyle();\n    const intl = useIntl();\n\n    /******************* States *******************/\n    const [order, setOrder] = useState<Order>('asc');\n    /* By default sort by image name */\n    const [orderBy, setOrderBy] = useState<keyof TableData>('fileName');\n    const [selected, setSelected] = useState<number[]>([]);\n    const [page, setPage] = useState(0);\n    const [dense, setDense] = useState(false);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    /******************* Variables *******************/\n    const rows: TableData[] = data.map((fd: FileData) => {\n        return createData(fd.fileID, fd.fileName, fd.fileSize, fd.uploaded, fd.filePath, fd.mime, fd.accessID);\n    });\n    console.log(rows);\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const handleRequestSort = (_event: MouseEvent<unknown>, property: keyof TableData) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            const newSelected = rows.map((n) => n.fileID);\n            setSelected(newSelected);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (_event: MouseEvent<unknown>, id: number) => {\n        /* NOTE: using a map over an array might increase performance */\n        const selectedIndex = selected.indexOf(id);\n        let newSelected: number[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (_event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event: ChangeEvent<HTMLInputElement>) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (id: number) => selected.indexOf(id) !== -1;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <GalleryTableToolbar selected={selected} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size={dense ? 'small' : 'medium'}\n                        aria-label={intl.formatMessage({\n                            id: 'Gallery.Table.title'\n                        })}>\n                        <GalleryTableHead\n                            numSelected={selected.length}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            order={order}\n                            orderBy={orderBy}\n                            rowCount={rows.length}\n                            headCells={headCells}\n                            intl={intl}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row: TableData, index: number) => {\n                                    const isItemSelected = isSelected(row.fileID);\n                                    return (\n                                        <GalleryTableRow\n                                            row={row}\n                                            labelId={`gallery-${index}`}\n                                            isItemSelected={isItemSelected}\n                                            handleClick={handleClick}\n                                            key={row.fileID}\n                                        />\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component='div'\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label='Dense padding' />\n        </div>\n    );\n};\n","import { ChangeEvent, FunctionComponent, MouseEvent } from 'react';\nimport { Order, TableData, useTableHeadStyle } from '.';\nimport { Checkbox, TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport { IntlShape } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nexport interface HeadCell<T> {\n    numeric: boolean;\n    id: keyof T;\n}\n\ntype OnRequestSortParameter<T> = (event: MouseEvent<HTMLButtonElement>, property: keyof T) => void;\ntype OnSelectAllClickParameter = (event: ChangeEvent<HTMLInputElement>) => void;\n\nexport interface GalleryTableProps<T> {\n    numSelected: number;\n    onRequestSort: OnRequestSortParameter<T>;\n    onSelectAllClick: OnSelectAllClickParameter;\n    order: Order;\n    orderBy: string;\n    rowCount: number;\n    intl: IntlShape;\n    headCells: HeadCell<T>[];\n}\n\nfunction createSortHandler<T>(property: keyof T, onRequestSort: OnRequestSortParameter<T>) {\n    return (event: MouseEvent<HTMLButtonElement>): void => {\n        onRequestSort(event, property);\n    };\n}\n/* Handle toggling of sort button */\nexport const GalleryTableHead: FunctionComponent<GalleryTableProps<TableData>> = ({\n    numSelected,\n    onRequestSort,\n    onSelectAllClick,\n    order,\n    orderBy,\n    rowCount,\n    headCells,\n    intl\n}) => {\n    const classes: ClassNameMap = useTableHeadStyle();\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding='checkbox'>\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': intl.formatMessage({ id: 'Gallery.Table.checkboxLabel' }) }}\n                    />\n                </TableCell>\n                {headCells.map((headCell: HeadCell<TableData>) => (\n                    <TableCell key={headCell.id} align='left' padding='none' sortDirection={orderBy === headCell.id ? order : false}>\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler<TableData>(headCell.id, onRequestSort)}>\n                            {intl.formatMessage({ id: `Gallery.Table.${headCell.id}` })}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n","import { FunctionComponent, MouseEvent } from 'react';\nimport { FileManagementButtonGroup, TableData } from '.';\nimport { Checkbox, TableCell, TableRow } from '@material-ui/core';\nimport { DateTime } from 'luxon';\n/* Used for the search button Icon used to go to the appropriate session timeline */\n\ninterface GalleryTableRowProps {\n    handleClick: (event: MouseEvent<HTMLTableHeaderCellElement | HTMLTableDataCellElement>, id: number) => void;\n    isItemSelected: boolean;\n    labelId: string;\n    row: TableData;\n}\n\n/* Source https://web.archive.org/web/20120507054320/http://codeaid.net/javascript/convert-size-in-bytes-to-human-readable-format-(javascript)*/\nfunction formatBytes(bytes: number, decimals = 2): string {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nfunction dateToString(dt: DateTime) {\n    return dt.toLocaleString(DateTime.DATETIME_FULL);\n}\n/* Create the table row  */\nexport const GalleryTableRow: FunctionComponent<GalleryTableRowProps> = ({ handleClick, isItemSelected, labelId, row }) => (\n    <TableRow hover role='checkbox' aria-checked={isItemSelected} tabIndex={-1} key={row.fileID} selected={isItemSelected}>\n        <TableCell padding='checkbox' onClick={(event) => handleClick(event, row.fileID)}>\n            <Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} />\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {row.fileName}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {formatBytes(row.fileSize)}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {row.filePath}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {dateToString(row.uploaded)}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            <FileManagementButtonGroup {...row} />\n        </TableCell>\n    </TableRow>\n);\n","import { makeStyles, createStyles, Theme, lighten } from '@material-ui/core/styles';\n\nexport const useTableHeadStyle = makeStyles(() =>\n    createStyles({\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1\n        }\n    })\n);\n\nexport const useGalleryTableStyle = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            overflowY: 'auto',\n            overflowX: 'hidden'\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2)\n        },\n        table: {\n            minWidth: '100%'\n        }\n    })\n);\n\nexport const useToolbarStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1)\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                      color: theme.palette.secondary.main,\n                      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n                  }\n                : {\n                      color: theme.palette.text.primary,\n                      backgroundColor: theme.palette.secondary.dark\n                  },\n        title: {\n            flex: '1 1 100%'\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\nimport { useToolbarStyles } from '.';\nimport { IconButton, Tooltip, Toolbar, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport clsx from 'clsx';\nimport { FormattedMessage } from 'react-intl';\n\ninterface GalleryTableToolbarProps {\n    selected: number[];\n}\n\n/* TODO: Typography should have a formatted message child*/\nexport const GalleryTableToolbar: FunctionComponent<GalleryTableToolbarProps> = ({ selected }) => {\n    const classes: ClassNameMap = useToolbarStyles();\n    const numSelected = selected.length;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0\n            })}>\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color='inherit' variant='subtitle1' component='div'>\n                    <FormattedMessage id='Gallery.Table.selected' values={{ numSelected }} />\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant='h6' id='tableTitle' component='div'>\n                    <FormattedMessage id='Gallery.Table.title' />\n                </Typography>\n            )}\n            {numSelected > 0 && (\n                <Tooltip title='Delete'>\n                    <IconButton aria-label='delete'>\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n","/* From https://github.com/mui-org/material-ui/blob/master/docs/src/pages/components/tables/EnhancedTable.tsx */\nimport { TableData } from './GalleryTable';\nimport { DateTime } from 'luxon';\n\nexport type Order = 'asc' | 'desc';\n/* Function to handle comparison   */\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T): number {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n/* Function used to compare the elements to sort them  */\nexport function getComparator<Key extends keyof TableData>(\n    order: Order,\n    orderBy: Key\n): (a: { [key in Key]: number | string | DateTime }, b: { [key in Key]: number | string | DateTime }) => number {\n    return order === 'desc'\n        ? (a, b): number => descendingComparator(a, b, orderBy)\n        : (a, b): number => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort<T>(array: T[], comparator: (a: T, b: T) => number): T[] {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n","import { FunctionComponent } from 'react';\nimport { useGalleryButtonStyle, SubmitButton, ResetButton } from '.';\nimport { Dropzone, useAjax, useAjaxComponent } from '../../common';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { updateTable, useGallerySnackbar, GalleryExpectedFileInfo, OperationInfo } from '../gallery';\n\nexport type UploadReturnType = Record<string, OperationInfo>;\n\nexport type FormValues = {\n    files: File[];\n};\n\nexport const GalleryControlButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useGalleryButtonStyle();\n    const { GalleryInformation, setOpen } = useGallerySnackbar();\n    const { data, isLoading, error, ajax } = useAjax<UploadReturnType, FormData>('/fileManagement/upload.php');\n    const { AjaxComponent } = useAjaxComponent<GalleryExpectedFileInfo>({\n        SuccessComponent: GalleryInformation,\n        data: data !== undefined ? Object.entries(data) : undefined,\n        isLoading,\n        error\n    });\n\n    const validateFiles = (values: FormValues): File[] => {\n        /* Quick validation here so we don't waste time getting an error in the back-end*/\n        /* We have to make sure file name are unique*/\n        const files: File[] = [];\n        const map = new Map<string, boolean>();\n        for (const file of values.files) {\n            if (!map.has(file.name)) {\n                map.set(file.name, true); // set any value to Map\n                files.push(file);\n            }\n        }\n        return files;\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            files: []\n        },\n        onSubmit: (values: FormValues) => {\n            if (values.files === undefined) return;\n            const files = validateFiles(values);\n            const formData = new FormData();\n            for (let key = 0; key < files.length; key++) {\n                formData.append('images[]', files[key]);\n            }\n            if (files.length > 0) {\n                ajax(formData);\n                formik.resetForm();\n                setOpen(true);\n                updateTable();\n            }\n        }\n    });\n\n    const onDropHandler = (acceptedFiles: File[]) => {\n        // do nothing if no files\n        if (acceptedFiles.length === 0) {\n            return;\n        }\n        const formikValues = formik.values.files as File[];\n        // on drop we add to the existing files\n        void formik.setFieldValue('files', formikValues === undefined ? acceptedFiles : (acceptedFiles ?? []).concat(formikValues));\n    };\n    return (\n        <>\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                {!isLoading && (\n                    <>\n                        <Dropzone onDropHandler={onDropHandler} files={formik.values.files ?? []} />\n                        <SubmitButton />\n                        <ResetButton resetForm={formik.resetForm} />{' '}\n                    </>\n                )}\n                <AjaxComponent />\n            </form>\n        </>\n    );\n};\n","import { SyntheticEvent, useState, FunctionComponent, useEffect } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { FetchComponentProps } from '../../common';\nimport { FormattedMessage } from 'react-intl';\n\nexport type OperationInfo = {\n    success: boolean;\n    error?: string;\n};\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\n/* The format of our end point with information about what files were uploaded*/\nexport type GalleryExpectedFileInfo = Array<[string, OperationInfo]>;\n\ninterface GallerySnackbarProps extends FetchComponentProps<GalleryExpectedFileInfo> {\n    handleClose: (_event?: SyntheticEvent, reason?: string) => void;\n    open: boolean;\n}\n\nexport type GalleryHookReturn = {\n    setOpen: (open: boolean) => void;\n    GalleryInformation: FunctionComponent<FetchComponentProps<GalleryExpectedFileInfo>>;\n};\nexport const GallerySnackbar: FunctionComponent<GallerySnackbarProps> = ({ open, data, handleClose }) => {\n    /*NOTE: this should be used - might be better to just use a defaultFallback from FormattedMessage*/\n    const fallbackError = 'of an internal server error';\n    const [errorData, setErrorData] = useState<GalleryExpectedFileInfo>([]);\n    const [successCount, setSuccessCount] = useState(0);\n\n    /* Whenever our data gets changed we change our info */\n    useEffect(() => {\n        setErrorData(data.filter(([_filename, operationInfo]) => !operationInfo.success));\n        setSuccessCount(data.filter(([_filename, operationInfo]) => operationInfo.success).length);\n    }, [data]);\n\n    /* Don't react to empty requests. NOTE: it might make sense to use an info box to gently\n     * remind the user to upload files\n     */\n    if (data === undefined || data.length === 0) return <div />;\n\n    let alert: JSX.Element;\n\n    /* Shown if all our files are rejected */\n    if (successCount === 0) {\n        alert = (\n            <Alert severity='error'>\n                <FormattedMessage id='FileManagement.uploadedFailed' />{' '}\n            </Alert>\n        );\n    } else if (successCount === data.length) {\n        /* Show if all our files are accepted */\n        alert = (\n            <Alert severity='success'>\n                {' '}\n                <FormattedMessage id='FileManagement.uploadedSuccessfully' />\n            </Alert>\n        );\n    } else {\n        /* Message if we have a mix of upload and delete */\n        alert = (\n            <Alert severity='warning'>\n                <>\n                    <h2 id='gallery-alert-title'>\n                        {' '}\n                        <FormattedMessage id='FileManagement.someFileFailedTitle' />{' '}\n                    </h2>\n                    {errorData.map(([filename, operationInfo], index: number) => {\n                        return (\n                            <p key={`gallery-snackbar-description ${filename} ${index}`}>\n                                <b>\n                                    <FormattedMessage\n                                        id='FileManagement.uploadedFailureInfo'\n                                        values={{ filename, errorMessage: operationInfo.error ?? fallbackError }}\n                                    />{' '}\n                                </b>\n                            </p>\n                        );\n                    })}\n                </>\n            </Alert>\n        );\n    }\n\n    return (\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            {alert}\n        </Snackbar>\n    );\n};\n\nexport function useGallerySnackbar(): GalleryHookReturn {\n    const [open, setOpen] = useState(false);\n    const handleClose = (_event?: SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') return;\n        setOpen(false);\n    };\n    const GalleryInformation: FunctionComponent<FetchComponentProps<GalleryExpectedFileInfo>> = ({ data }) => (\n        <GallerySnackbar handleClose={handleClose} data={data} open={open} />\n    );\n\n    return {\n        setOpen,\n        GalleryInformation\n    };\n}\n","import { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@material-ui/core';\n\nexport type ResetButtonProps = {\n    resetForm: () => void;\n};\nexport const ResetButton: FunctionComponent<ResetButtonProps> = ({ resetForm }) => (\n    <Button variant='contained' color='primary' onClick={resetForm}>\n        <FormattedMessage id='FileManagement.clear' />\n    </Button>\n);\n","import { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@material-ui/core';\n\nexport const SubmitButton: FunctionComponent = () => (\n    <Button variant='contained' type='submit' color='primary'>\n        <FormattedMessage id='FileManagement.upload' />\n    </Button>\n);\n","import { makeStyles, createStyles } from '@material-ui/core/styles';\n\n/* Style for the control button */\nexport const useGalleryButtonStyle = makeStyles(() =>\n    createStyles({\n        input: {\n            display: 'none'\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\nimport { useGalleryRootStyle } from '../gallery';\nimport { GalleryTable } from '../galleryTable';\nimport { GalleryControlButton } from '../galleryUpload';\nimport { useAjaxComponent, useSwrAjax } from '../../common';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\n/* Arguments that the API takes */\ntype FileApiArguments = {\n    filePath?: string;\n};\n\nexport type FileData = {\n    fileID: number;\n    memberID: number;\n    fileName: string;\n    fileSize: number;\n    uploaded: string;\n    filePath: string;\n    mime: string;\n    accessID: number;\n};\nexport type FileApiReturnData = Array<FileData>;\n\nexport const Gallery: FunctionComponent = () => {\n    const classes: ClassNameMap = useGalleryRootStyle();\n    /* Different folder will have different files */\n    const curFolder = '';\n\n    const { data, isLoading, error } = useSwrAjax<FileApiReturnData, FileApiArguments>('fileManagement/getFolderImages', {\n        filePath: curFolder\n    });\n    const { AjaxComponent } = useAjaxComponent<FileApiReturnData>({\n        SuccessComponent: GalleryTable,\n        data,\n        isLoading,\n        error\n    });\n    return (\n        <div className={classes.root}>\n            <AjaxComponent />\n            <GalleryControlButton />\n        </div>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport { AXIOS_ENDPOINT } from './apiConstants';\nimport { AjaxType, ErrorType, ReturnType } from './useAjax';\nimport useSWR from 'swr';\nimport { MutatorCallback } from 'swr/dist/types';\ninterface useAjaxReturn<T, Y> extends Omit<AjaxType<T, Y>, 'ajax'> {\n    mutate: MutatorCallback;\n}\nexport const useSwrAjax = <T, Y>(endpoint: string, args?: Y): useAjaxReturn<T, Y> => {\n    const fetcher = (url: string) =>\n        AXIOS_ENDPOINT.get<T>(url, { params: args }).then((response: AxiosResponse<ReturnType<T>>) => response.data);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { data, error: swrError, mutate } = useSWR(endpoint, fetcher);\n    const [error, setError] = useState<ErrorType>(undefined as ErrorType);\n    useEffect(() => {\n        if (swrError && 'message' in swrError) {\n            setError({ error: (swrError as Error).message });\n        } else if (data !== undefined && 'error' in data) {\n            setError({ error: data.error });\n        }\n    }, [data, swrError]);\n\n    return {\n        data: (data as T) ?? undefined,\n        isLoading: error === undefined && data === undefined,\n        error,\n        mutate\n    };\n};\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport const useGalleryRootStyle = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1)\n            }\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common/errorHandling';\nimport { Gallery } from './Gallery';\n\nexport const GalleryView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Gallery />\n    </ErrorFallback>\n);\n","import { mutate as swrMutate } from 'swr';\n\nexport const updateTable = (): void => void swrMutate('fileManagement/getFolderImages');\n","import { FunctionComponent } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { HomeView } from './home';\nimport { LoginView } from './login';\nimport { SignUpView } from './register';\nimport { GalleryView } from './gallery';\n/* Import the pages of the website */\nimport { NotFound } from '../common';\n/* Import to control the color scheme like dark mode */\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { pink, green } from '@material-ui/core/colors';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: pink[900]\n        },\n        secondary: {\n            main: green[500]\n        },\n        type: 'dark'\n    }\n});\n\nexport const App: FunctionComponent = () => (\n    <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <HashRouter hashType='noslash'>\n            <Switch>\n                {/*\n                <Route exact path='/forgotPassword'>\n                    <ForgotPasswordView />\n                </Route>\n                */}\n                <Route path='/gallery'>\n                    <GalleryView />\n                </Route>\n                <Route exact path='/login'>\n                    <LoginView />\n                </Route>\n                <Route exact path='/signup'>\n                    <SignUpView />\n                </Route>\n                <Route exact path='/'>\n                    <HomeView />\n                </Route>\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </HashRouter>\n    </ThemeProvider>\n);\n","import { FunctionComponent, StrictMode } from 'react';\nimport { App } from './components';\n/* Import for languages */\nimport { IntlProvider } from 'react-intl';\nimport messagesEn from './translations/en.json';\n/* Import website wide css */\nimport './index.css';\nimport ReactDOM from 'react-dom';\n\n/* For getting back data */\nconst language = (navigator.languages && navigator.languages[0]) || navigator.language;\n/* Since we only have English as a language */\nconst message = messagesEn;\n\nconst WrappedApp: FunctionComponent = () => (\n    <StrictMode>\n        <IntlProvider locale={language} messages={message}>\n            <App />\n        </IntlProvider>\n    </StrictMode>\n);\n\n// Renders the application\nReactDOM.render(<WrappedApp />, document.getElementById('root'));\n"],"sourceRoot":""}