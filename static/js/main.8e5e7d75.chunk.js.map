{"version":3,"sources":["common/dataRetrieval/AjaxComponent.tsx","common/dataRetrieval/apiConstants.ts","common/dataRetrieval/ProgressCircle.tsx","common/internationalizedComponents/TextField.tsx","common/internationalizedComponents/Link.tsx","common/internationalizedComponents/InternationalizedMessageBox.tsx","common/internationalizedComponents/Thumbs.tsx","common/internationalizedComponents/Dropzone.tsx","common/dataRetrieval/RetrieveErrorBox.tsx","common/dataRetrieval/SimpleErrorMessage.tsx","common/dataRetrieval/useAjax.tsx","common/MessageBox.tsx","common/errorHandling/ErrorFallback.tsx","common/errorHandling/NotFound.tsx","components/home/HomeView.tsx","components/home/Home.tsx","resources/space.jpg","components/home/HomeStyle.tsx","components/home/SignupButton.tsx","components/home/LoginButton.tsx","components/login/Login.tsx","components/login/FormStructure.ts","components/login/LoginStyle.tsx","components/login/LoginHeader.tsx","components/login/LoginMessage.tsx","components/login/LoginSubmitButton.tsx","components/login/LoginView.tsx","components/register/SignUp.tsx","components/register/FormStructure.ts","components/register/SignUpStyle.tsx","components/register/SignUpHeader.tsx","components/register/SignupMessage.tsx","components/register/SignUpSubmitButton.tsx","components/register/SignUpView.tsx","components/galleryTableRow/FileManagementButtonGroup.tsx","components/galleryTableRow/DeleteButton.tsx","components/galleryTableRow/GalleryTableRow.tsx","components/galleryTable/GalleryTable.tsx","components/galleryTable/GalleryTableHead.tsx","components/galleryTable/GalleryTableStyle.tsx","components/galleryTable/GalleryTableToolbar.tsx","components/galleryTable/TableSorter.ts","components/galleryUpload/GalleryUpload.tsx","components/gallery/GallerySnackbar.tsx","components/galleryUpload/GalleryResetButton.tsx","components/galleryUpload/GallerySubmitButton.tsx","components/galleryUpload/GalleryUploadStyle.tsx","components/gallery/Gallery.tsx","common/dataRetrieval/swrFetch.tsx","components/gallery/GalleryStyle.tsx","components/gallery/GalleryView.tsx","components/gallery/updateFileMutator.ts","components/App.tsx","index.tsx"],"names":["useAjaxComponent","props","SuccessComponent","ErrorComponent","RetrieveErrorBox","LoadingComponent","ProgressCircle","data","isLoading","error","intl","useIntl","AjaxComponent","errorMessage","message","undefined","val","formatMessage","id","AXIOS_ENDPOINT","axios","create","withCredentials","baseURL","useStyles","makeStyles","progress","display","inline","margin","size","classes","CircularProgress","className","TextField","name","autoCompleteName","labelTranslatorId","inputProps","autoFocus","type","helperText","autoComplete","variant","required","fullWidth","label","InputProps","Link","to","linkProps","component","RouterLink","bolder","chunks","emphasizer","InternationalizedMessageBox","defaultMessage","description","values","breakingLine","b","em","i","Thumbs","index","imageFile","imageTitle","useState","imageUrl","setImageUrl","reader","FileReader","addEventListener","result","readAsDataURL","src","alt","height","width","dropzoneStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","acceptStyle","rejectStyle","Dropzone","onDropHandler","files","useDropzone","accept","onDrop","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","length","map","file","SimpleErrorMessage","useAjax","endpoint","setError","setLoading","setData","ajax","args","post","then","response","catch","e","ajaxCall","default","padding","backgroundColor","color","warning","getStylesForType","MessageBox","children","Paper","clsx","FallbackComponent","myErrorHandler","_error","info","console","componentStack","ErrorFallback","onError","NotFound","Typography","HomeView","useBackgroundStyle","backgroundContainer","Home","useHomeStyles","Grid","container","spacing","direction","alignItems","justify","mainGrid","item","xs","ButtonGroup","orientation","aria-label","mainButtons","createStyles","minHeight","minWidth","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","SignUpButton","history","useHistory","Button","onClick","push","LoginButton","Login","useLoginStyles","validationSchema","yup","email","password","remember","defined","getValidationSchema","formik","useFormik","initialValues","cast","onSubmit","Backdrop","backdrop","open","paper","form","handleSubmit","noValidate","touched","errors","value","onChange","handleChange","Boolean","FormControlLabel","control","Checkbox","theme","marginTop","flexDirection","zIndex","drawer","useLoginHeaderStyles","avatar","palette","secondary","main","useLoginButtonStyles","submit","LoginHeader","Avatar","LoginMessage","SubmitButton","LoginView","Container","maxWidth","SignUp","useSignUpStyles","min","confirmPassword","oneOf","firstName","lastName","isSubmitting","SignupMessage","sm","useSignUpHeaderStyles","useSignUpButtonStyles","SignUpHeader","SignUpView","FileManagementButtonGroup","rowData","fileName","fileID","deleteFile","updateTable","deleted","DeleteButton","IconButton","disabled","useDeleteButton","alert","formatBytes","bytes","decimals","k","dm","sizes","Math","floor","log","parseFloat","pow","toFixed","GalleryTableRow","dt","handleClick","isItemSelected","labelId","row","TableRow","hover","role","aria-checked","tabIndex","selected","TableCell","event","checked","align","fileSize","filePath","uploaded","toLocaleString","DateTime","DATETIME_FULL","headCells","numeric","GalleryTable","useGalleryTableStyle","order","setOrder","orderBy","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","fd","uploadedDtString","mime","accessID","fromSQL","emptyRows","_event","selectedIndex","indexOf","newSelected","concat","slice","root","TableContainer","Table","table","aria-labelledby","numSelected","onSelectAllClick","target","n","onRequestSort","property","rowCount","TableBody","stableSort","getComparator","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Switch","createSortHandler","GalleryTableHead","useTableHeadStyle","TableHead","indeterminate","headCell","sortDirection","TableSortLabel","active","visuallyHidden","border","clip","overflow","position","top","overflowY","overflowX","marginBottom","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","text","primary","dark","title","flex","GalleryTableToolbar","Toolbar","Tooltip","descendingComparator","a","array","comparator","stabilizedThis","el","sort","GalleryControlButton","useGalleryButtonStyle","setOpen","handleClose","reason","GallerySnackbar","useGallerySnackbar","Object","entries","Map","has","set","validateFiles","formData","FormData","key","append","resetForm","acceptedFiles","formikValues","setFieldValue","ResetButton","input","Gallery","useGalleryRootStyle","useSWR","url","get","params","swrError","useEffect","useSwrAjax","Alert","elevation","errorData","setErrorData","successCount","setSuccessCount","filter","severity","filename","operationInfo","Snackbar","autoHideDuration","onClose","GalleryView","swrMutate","darkTheme","createMuiTheme","pink","green","App","ThemeProvider","CssBaseline","hashType","path","exact","language","navigator","languages","messagesEn","WrappedApp","locale","messages","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e5e7d75.chunk.js","sourcesContent":["import { FunctionComponent, ReactNode } from 'react';\nimport { useIntl } from 'react-intl';\nimport { RetrieveErrorBox, ProgressCircle, AjaxType } from '../dataRetrieval';\n\nexport type ErrorMessageType = { errorMessage?: string };\nexport type FetchComponentProps<T> = {\n    data: T;\n};\n\ninterface Props<T> extends Omit<AjaxType<T, unknown>, 'ajax'> {\n    SuccessComponent: FunctionComponent<FetchComponentProps<T>>;\n    LoadingComponent?: FunctionComponent;\n    ErrorComponent?: FunctionComponent<ErrorMessageType>;\n}\n\ninterface AjaxComponentReturn {\n    AjaxComponent: FunctionComponent;\n}\n\nexport function useAjaxComponent<T>(props: Props<T> & { children?: ReactNode }): AjaxComponentReturn {\n    const { SuccessComponent, ErrorComponent = RetrieveErrorBox, LoadingComponent = ProgressCircle, data, isLoading, error } = props;\n    const intl = useIntl();\n    const AjaxComponent: FunctionComponent = () => {\n        /*If component is not ready to call then we just return a placeholder */\n        if (error?.error) {\n            return <ErrorComponent errorMessage={error?.message} />;\n        }\n        if (isLoading) {\n            return <LoadingComponent />;\n        }\n        if (data === undefined) {\n            return <div />;\n        }\n\n        /* After going through all the possible reasons we can have an error, '\n         * we finally try to render the component with the information we\n         * retrieved from our end point\n         */\n        try {\n            return <SuccessComponent data={data} />;\n        } catch (error) {\n            let errorMessage = 'Unknown error';\n            if ((error as Error) !== undefined) {\n                const val: ErrorMessageType = { errorMessage: (error as Error).message ?? '' };\n                errorMessage = intl.formatMessage({ id: 'Error.processingError' }, val);\n            }\n            return <ErrorComponent errorMessage={errorMessage} />;\n        }\n    };\n\n    return {\n        AjaxComponent\n    };\n}\n","import axios, { AxiosInstance } from 'axios';\n\nfunction getAPI() {\n    switch (process.env.NODE_ENV) {\n        case 'development':\n            return 'https://arif115.myweb.cs.uwindsor.ca/imagerepository/beta/src/api/';\n        case 'test':\n            return 'http://localhost:4000/src/api/';\n        case 'production':\n            return 'https://arif115.myweb.cs.uwindsor.ca/imagerepository/src/api/';\n    }\n}\nexport const API = getAPI();\n\nexport const AXIOS_ENDPOINT: AxiosInstance = axios.create({\n    withCredentials: true,\n    baseURL: API\n});\n","import { FunctionComponent } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { Theme, makeStyles } from '@material-ui/core/styles';\n\ninterface Props {\n    inline?: boolean;\n    size?: number;\n}\n\nconst useStyles = makeStyles<Theme, { inline?: boolean }>({\n    progress: {\n        display: ({ inline }): string => (inline ? 'default' : 'block'),\n        margin: ({ inline }): string => (inline ? '0' : 'auto')\n    }\n});\n\nexport const ProgressCircle: FunctionComponent<Props> = ({ inline, size }) => {\n    const classes = useStyles({ inline });\n\n    return <CircularProgress className={classes.progress} size={size ? size : 40} />;\n};\n","import { FunctionComponent } from 'react';\nimport { TextField as MaterialTextField, InputBaseProps as InputProps } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\n\nexport type TextInputFieldProps = {\n    id: string;\n    name: string;\n    autoCompleteName: string;\n    labelTranslatorId: string;\n    autoFocus?: boolean;\n    type?: string;\n    helperText?: string | false;\n    inputProps?: InputProps;\n};\n\nexport const TextField: FunctionComponent<TextInputFieldProps> = ({\n    id,\n    name,\n    autoCompleteName,\n    labelTranslatorId,\n    inputProps,\n    autoFocus,\n    type,\n    helperText\n}) => {\n    const intl = useIntl();\n    return (\n        <>\n            <MaterialTextField\n                id={id}\n                autoComplete={autoCompleteName}\n                name={name}\n                variant='outlined'\n                required\n                fullWidth\n                label={intl.formatMessage({ id: labelTranslatorId })}\n                autoFocus={autoFocus}\n                type={type !== undefined ? type : 'text'}\n                helperText={helperText}\n                InputProps={{\n                    ...inputProps\n                }}\n            />\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link as MaterialLink, LinkProps as MaterialLinkProps } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport type LinkProps = {\n    to: string;\n    labelTranslatorId: string;\n    linkProps?: MaterialLinkProps;\n};\nexport const Link: FunctionComponent<LinkProps> = ({ to, labelTranslatorId, linkProps }) => (\n    <>\n        {to && (\n            <MaterialLink {...linkProps} component={RouterLink} to={to}>\n                <FormattedMessage id={labelTranslatorId} />\n            </MaterialLink>\n        )}\n    </>\n);\n","import { FunctionComponent } from 'react';\nimport { MessageBox, MessageBoxTypes } from '..';\nimport { MessageDescriptor, FormattedMessage } from 'react-intl';\n\nexport interface InternationalizedMessageBoxProp extends MessageDescriptor {\n    errorMessage?: string;\n    className?: string;\n    type: MessageBoxTypes;\n}\n\n/* Used to italicize and bold */\nexport const bolder: FunctionComponent = (chunks) => <b>{chunks}</b>;\nexport const emphasizer: FunctionComponent = (chunks) => <em>{chunks}</em>;\n\nexport const InternationalizedMessageBox: FunctionComponent<InternationalizedMessageBoxProp> = ({\n    type,\n    className,\n    errorMessage,\n    id,\n    defaultMessage,\n    description\n}) => (\n    <MessageBox type={type} className={className}>\n        <FormattedMessage\n            id={id}\n            defaultMessage={defaultMessage}\n            description={description}\n            values={{\n                breakingLine: <br />,\n                b: bolder,\n                em: emphasizer,\n                i: emphasizer,\n                errorMessage: errorMessage ?? 'Something went wrong :('\n            }}\n        />\n    </MessageBox>\n);\n","import { FunctionComponent, useState } from 'react';\nexport type ThumbProps = {\n    index: number;\n    imageFile: File;\n    imageTitle: string;\n};\nexport const Thumbs: FunctionComponent<ThumbProps> = ({ index, imageFile, imageTitle }) => {\n    const [imageUrl, setImageUrl] = useState<string>('');\n    const reader = new FileReader();\n    reader.addEventListener(\n        'load',\n        () => {\n            // convert image file to base64 string\n            setImageUrl(reader.result as string);\n        },\n        false\n    );\n    reader.readAsDataURL(imageFile);\n    return <img src={imageUrl} key={`image.${index}`} alt={imageTitle} height={200} width={200} />;\n};\n","import { FunctionComponent, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Thumbs } from './Thumbs';\nimport { FormattedMessage } from 'react-intl';\n\nconst dropzoneStyle = {\n    width: '100%',\n    height: 'auto',\n    borderWidth: 2,\n    borderColor: 'rgb(102, 102, 102)',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\n\nexport type DropzoneProps = {\n    onDropHandler: (acceptedFiles: File[]) => void;\n    files?: File[];\n};\nexport const Dropzone: FunctionComponent<DropzoneProps> = ({ onDropHandler, files }) => {\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n        accept: 'image/*',\n        onDrop: onDropHandler\n    });\n    const style = useMemo(\n        () => ({\n            ...dropzoneStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {})\n        }),\n        [isDragActive, isDragReject, isDragAccept]\n    );\n\n    return (\n        <div {...getRootProps({ className: 'dropzone', style })}>\n            <input {...getInputProps()} />\n            <p>\n                <FormattedMessage id='DragZone.dragPrompt' />\n            </p>\n            {isDragActive && (\n                <p>\n                    <FormattedMessage id='DragZone.acceptedPrompt' />\n                </p>\n            )}\n            {isDragReject && (\n                <p>\n                    <FormattedMessage id='DragZone.rejectedPrompt' />\n                </p>\n            )}\n            {(files ?? []).length === 0 && (\n                <p>\n                    <FormattedMessage id='DragZone.initialDragPrompt' />\n                </p>\n            )}\n            {(files ?? []).map((file: File, i: number) => (\n                <Thumbs key={`Image.${i}`} index={i} imageFile={file} imageTitle={`Title.${i}`} />\n            ))}\n            <em>\n                <FormattedMessage id='DragZone.fileTypePrompt' />\n            </em>\n        </div>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { InternationalizedMessageBox, InternationalizedMessageBoxProp } from '../internationalizedComponents';\n\nexport type RetrieveErrorBoxProps = Omit<InternationalizedMessageBoxProp, 'type' | 'id'>;\nexport const RetrieveErrorBox: FunctionComponent<RetrieveErrorBoxProps> = ({ className, errorMessage, defaultMessage, description }) => (\n    <InternationalizedMessageBox\n        type='error'\n        id='Error.retrieveError'\n        className={className}\n        errorMessage={errorMessage}\n        defaultMessage={defaultMessage}\n        description={description}\n    />\n);\n","import { FunctionComponent } from 'react';\nimport { ErrorMessageType } from './AjaxComponent';\n\nexport const SimpleErrorMessage: FunctionComponent<ErrorMessageType> = ({ errorMessage }) => {\n    if (errorMessage !== undefined) {\n        return <div> {errorMessage} </div>;\n    }\n    return <div />;\n};\n","import { useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport { AXIOS_ENDPOINT } from './apiConstants';\n\nexport type ErrorType = { error: boolean; message?: string } | undefined;\nexport type AjaxType<T, Y> = {\n    error: ErrorType;\n    isLoading: boolean;\n    data: T | undefined;\n    ajax: (args?: Y) => void;\n};\nexport type Setters<T> = (x: T) => void;\nexport type ReturnType<T> = T | ErrorType;\n\nexport function ajaxCall<T, Y>(\n    endpoint: string,\n    setLoading: Setters<boolean>,\n    setData: Setters<T>,\n    setError: Setters<ErrorType>,\n    args?: Y\n): void {\n    setLoading(true);\n    AXIOS_ENDPOINT.post(endpoint, args)\n        .then((response: AxiosResponse<ReturnType<T>>) => {\n            const result: ReturnType<T> = response.data;\n            setLoading(false);\n            setData(result as T);\n            if (result && 'error' in result && result.error) {\n                setError(result as ErrorType);\n            }\n        })\n        .catch((error): void => {\n            if ((error as Error) !== undefined) {\n                const e: ErrorType = { error: true, message: (error as Error)?.message ?? 'Unknown error' };\n                setError(e);\n                setLoading(false);\n            }\n        });\n}\n\nexport function useAjax<T, Y>(endpoint: string): AjaxType<T, Y> {\n    const [error, setError] = useState<ErrorType>(undefined as ErrorType);\n    const [isLoading, setLoading] = useState(false);\n    const [data, setData] = useState<T>();\n    const ajax = (args?: Y) => ajaxCall<T, Y>(endpoint, setLoading, setData, setError, args);\n\n    return {\n        error,\n        isLoading,\n        data,\n        ajax\n    };\n}\n","import { FunctionComponent } from 'react';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nexport type MessageBoxTypes = 'warning' | 'error';\n\ninterface Props {\n    className?: string;\n    type: MessageBoxTypes;\n}\n\nconst useStyles = makeStyles({\n    default: {\n        padding: '15px'\n    },\n    error: {\n        backgroundColor: '#f2dede',\n        color: '#a94442'\n    },\n    warning: {\n        backgroundColor: '#fcf8e3',\n        color: '#8a6d3b'\n    }\n});\n\nconst getStylesForType = (classes: ReturnType<typeof useStyles>, type: MessageBoxTypes): string => {\n    switch (type) {\n        case 'error':\n            return classes.error;\n        case 'warning':\n            return classes.warning;\n    }\n};\n\nexport const MessageBox: FunctionComponent<Props> = ({ children, className, type }) => {\n    const classes = useStyles();\n    return <Paper className={clsx(classes.default, getStylesForType(classes, type), className)}>{children}</Paper>;\n};\n","import { FunctionComponent } from 'react';\n\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary';\n\nimport { MessageBox } from '..';\n\nconst FallbackComponent: FunctionComponent<FallbackProps> = ({ error }) => (\n    <MessageBox type='error'>\n        <b>Error</b>: An error occurred while rendering a component: <i>{error.message}</i>\n        <br />\n        <br />\n        Try refreshing the page, and please contact our team if this issue persists.\n    </MessageBox>\n);\n\nconst myErrorHandler = (_error: Error, info: { componentStack: string }) => {\n    console.error(`ComponentStack:${info.componentStack}`);\n};\n\nexport const ErrorFallback: FunctionComponent = ({ children }) => (\n    <ErrorBoundary FallbackComponent={FallbackComponent} onError={myErrorHandler}>\n        {children}\n    </ErrorBoundary>\n);\n","import { FunctionComponent } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { ErrorFallback } from './ErrorFallback';\nimport { MessageBox } from '..';\nimport { FormattedMessage } from 'react-intl';\n\nexport const NotFound: FunctionComponent = () => (\n    <ErrorFallback>\n        <MessageBox type='error'>\n            <Typography variant='h5'>\n                <FormattedMessage id='Error.404.greeting' />\n            </Typography>\n            <Typography variant='h6'>\n                <FormattedMessage id='Error.404.message' />\n            </Typography>\n            <Typography variant='body2'>\n                <FormattedMessage id='Error.404.errorBody' />\n            </Typography>\n        </MessageBox>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common/errorHandling';\nimport { Home, useBackgroundStyle } from '../home';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const HomeView: FunctionComponent = () => {\n    /* Load main background */\n    const classes: ClassNameMap = useBackgroundStyle();\n    return (\n        <ErrorFallback>\n            <div className={classes.backgroundContainer}>\n                <Home />\n            </div>\n        </ErrorFallback>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { useHomeStyles, LoginButton, SignUpButton } from '../home';\nimport { Grid, ButtonGroup } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const Home: FunctionComponent = () => {\n    const classes: ClassNameMap = useHomeStyles();\n    return (\n        <Grid container spacing={0} direction='row' alignItems='center' justify='center' className={classes.mainGrid}>\n            <Grid item xs={3}>\n                <ButtonGroup\n                    orientation='vertical'\n                    color='primary'\n                    variant='contained'\n                    fullWidth\n                    aria-label='vertical landing page button group'\n                    className={classes.mainButtons}>\n                    <LoginButton />\n                    <SignUpButton />\n                </ButtonGroup>\n            </Grid>\n        </Grid>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/space.32812815.jpg\";","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\nimport backgroundImage from '../../resources/space.jpg';\n\nexport const useHomeStyles = makeStyles(\n    (): StyleRules =>\n        createStyles({\n            mainGrid: {\n                minHeight: '100vh'\n            },\n            mainButtons: {\n                minWidth: '30%'\n            }\n        })\n);\n\nexport const useBackgroundStyle = makeStyles(\n    (): StyleRules =>\n        createStyles({\n            backgroundContainer: {\n                backgroundImage: `url(${backgroundImage})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n                width: '100vw',\n                height: '100vh'\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport const SignUpButton: FunctionComponent = (props) => {\n    const history = useHistory();\n    const goToSignupPage = (): void => {\n        history.push('/signup');\n    };\n    return (\n        <Button onClick={goToSignupPage} {...props}>\n            {' '}\n            <FormattedMessage id='UserManagement.signup' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport const LoginButton: FunctionComponent = (props) => {\n    const history = useHistory();\n    const goToLoginPage = (): void => {\n        history.push('/login');\n    };\n    return (\n        <Button onClick={goToLoginPage} {...props}>\n            <FormattedMessage id='UserManagement.login' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { Link, TextField, useAjax, ProgressCircle } from '../../common';\nimport { FormValues, getValidationSchema, useLoginStyles, SubmitButton, LoginHeader, LoginApiReturn, LoginMessage } from '../login';\nimport { Backdrop, Checkbox, FormControlLabel, Grid } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n/* Modified from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in */\n\nexport const Login: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const validationSchema = getValidationSchema(intl);\n\n    const formik = useFormik({\n        initialValues: validationSchema.cast({\n            email: '',\n            password: '',\n            remember: false\n        }),\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            ajax(values as FormValues);\n        }\n    });\n    const { data, isLoading, ajax } = useAjax<LoginApiReturn, FormValues>('/UserManagement/login');\n\n    if (data !== undefined) {\n        const { error } = data;\n        if (!error) {\n            history.push('/gallery');\n        }\n    }\n\n    if (isLoading) {\n        return (\n            <Backdrop className={classes.backdrop} open={true}>\n                <ProgressCircle />\n            </Backdrop>\n        );\n    }\n\n    /* Manage form data then pass it to the submit button */\n    return (\n        <div className={classes.paper}>\n            <LoginHeader />\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                <TextField\n                    id='email'\n                    labelTranslatorId='UserManagement.email'\n                    name='email'\n                    type='email'\n                    autoCompleteName='email'\n                    helperText={formik.touched.email && formik.errors.email}\n                    inputProps={{\n                        value: formik.values.email,\n                        onChange: formik.handleChange,\n                        error: formik.touched.email && Boolean(formik.errors.email)\n                    }}\n                />\n                <TextField\n                    name='password'\n                    labelTranslatorId='UserManagement.password'\n                    type='password'\n                    id='password'\n                    autoCompleteName='password'\n                    helperText={formik.touched.password && formik.errors.password}\n                    inputProps={{\n                        value: formik.values.password,\n                        onChange: formik.handleChange,\n                        error: formik.touched.password && Boolean(formik.errors.password)\n                    }}\n                />\n                <FormControlLabel\n                    control={<Checkbox value={formik.values.remember} color='primary' onChange={formik.handleChange} />}\n                    name='remember'\n                    label={intl.formatMessage({ id: 'UserManagement.rememberMe' })}\n                />\n                <SubmitButton />\n                <Grid container justify='flex-end'>\n                    <Grid item xs>\n                        <Link to='/forgotPassword' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.forgotPassword' />\n                    </Grid>\n                    <Grid item>\n                        <Link to='/signUp' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.notRegistered' />\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <LoginMessage message={data?.message ?? ''} />\n                </Grid>\n            </form>\n        </div>\n    );\n};\n","import * as yup from 'yup';\nimport { IntlShape } from 'react-intl';\n\nexport interface FormValues {\n    email: string;\n    password: string;\n    remember?: boolean;\n}\n\nexport function getValidationSchema(intl: IntlShape): yup.SchemaOf<FormValues> {\n    return yup\n        .object({\n            email: yup\n                .string()\n                .email(intl.formatMessage({ id: 'UserManagement.validEmail' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredEmail' })),\n            password: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredPassword' })),\n            remember: yup.boolean()\n        })\n        .defined();\n}\n","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\n\nexport const useLoginStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            paper: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            },\n            form: {\n                width: '100%', // Fix IE 11 issue.\n                marginTop: theme.spacing(3)\n            },\n            backdrop: {\n                zIndex: theme.zIndex.drawer + 1,\n                color: '#fff'\n            }\n        })\n);\n\nexport const useLoginHeaderStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            avatar: {\n                margin: theme.spacing(1),\n                backgroundColor: theme.palette.secondary.main\n            }\n        })\n);\n\nexport const useLoginButtonStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            submit: {\n                margin: theme.spacing(3, 0, 2)\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useLoginHeaderStyles } from './LoginStyle';\nimport { Avatar, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { FormattedMessage } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const LoginHeader: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginHeaderStyles();\n    return (\n        <>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n                <FormattedMessage id='UserManagement.login' />\n            </Typography>\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\n\nexport type LoginApiReturn = {\n    error: boolean;\n    message: string;\n};\n\ntype Props = {\n    message?: string;\n};\nexport const LoginMessage: FunctionComponent<Props> = ({ message }) => {\n    return <div> {message} </div>;\n};\n","import { FunctionComponent } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { useLoginButtonStyles } from './LoginStyle';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SubmitButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginButtonStyles();\n    return (\n        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n            <FormattedMessage id='UserManagement.login' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common';\nimport { Container } from '@material-ui/core';\nimport { Login } from './Login';\n\nexport const LoginView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Container component='main' maxWidth='xs'>\n            <Login />\n        </Container>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\nimport { useAjax, useAjaxComponent, SimpleErrorMessage, Link, TextField } from '../../common';\nimport { FormValues, getValidationSchema, useSignUpStyles, SignUpHeader, SignupApiReturn, SignupMessage, SubmitButton } from '../register';\nimport { Grid } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n\n/* Modified from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-up */\n\nexport const SignUp: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const validationSchema = getValidationSchema(intl);\n    const formik = useFormik({\n        initialValues: validationSchema.cast({\n            email: '',\n            password: '',\n            confirmPassword: '',\n            firstName: '',\n            lastName: ''\n        }),\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            if (isLoading && formik.isSubmitting) return;\n            ajax(values as FormValues);\n        }\n    });\n\n    const { data, isLoading, error, ajax } = useAjax<SignupApiReturn, FormValues>('/UserManagement/register');\n    const { AjaxComponent } = useAjaxComponent<SignupApiReturn>({\n        SuccessComponent: SignupMessage,\n        ErrorComponent: SimpleErrorMessage,\n        data,\n        isLoading,\n        error\n    });\n\n    if (data !== undefined) {\n        const { id } = data;\n        if (id > 0) {\n            history.push('login');\n        }\n    }\n\n    /* Manage form data then pass it to the submit button */\n    return (\n        <div className={classes.paper}>\n            <SignUpHeader />\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoCompleteName='firstName'\n                            name='firstName'\n                            id='firstName'\n                            labelTranslatorId='UserManagement.firstName'\n                            autoFocus\n                            helperText={formik.touched.firstName && formik.errors.firstName}\n                            inputProps={{\n                                value: formik.values.firstName,\n                                onChange: formik.handleChange,\n                                error: formik.touched.firstName && Boolean(formik.errors.firstName)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id='lastName'\n                            labelTranslatorId='UserManagement.lastName'\n                            name='lastName'\n                            autoCompleteName='lname'\n                            helperText={formik.touched.lastName && formik.errors.lastName}\n                            inputProps={{\n                                value: formik.values.lastName,\n                                onChange: formik.handleChange,\n                                error: formik.touched.lastName && Boolean(formik.errors.lastName)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            id='email'\n                            labelTranslatorId='UserManagement.email'\n                            name='email'\n                            type='email'\n                            autoCompleteName='email'\n                            helperText={formik.touched.email && formik.errors.email}\n                            inputProps={{\n                                value: formik.values.email,\n                                onChange: formik.handleChange,\n                                error: formik.touched.email && Boolean(formik.errors.email)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            name='password'\n                            labelTranslatorId='UserManagement.password'\n                            type='password'\n                            id='password'\n                            autoCompleteName='password'\n                            helperText={formik.touched.password && formik.errors.password}\n                            inputProps={{\n                                value: formik.values.password,\n                                onChange: formik.handleChange,\n                                error: formik.touched.password && Boolean(formik.errors.password)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            name='confirmPassword'\n                            labelTranslatorId='UserManagement.confirmPassword'\n                            type='password'\n                            id='confirmPassword'\n                            autoCompleteName='confirmPassword'\n                            helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n                            inputProps={{\n                                value: formik.values.confirmPassword,\n                                onChange: formik.handleChange,\n                                error: formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <SubmitButton />\n                <Grid container justify='flex-end'>\n                    <Grid item>\n                        <Link to='/login' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.alreadyRegistered' />\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <AjaxComponent />\n                </Grid>\n            </form>\n        </div>\n    );\n};\n","import * as yup from 'yup';\nimport { IntlShape } from 'react-intl';\n\nexport interface FormValues {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n}\n\nexport function getValidationSchema(intl: IntlShape): yup.SchemaOf<FormValues> {\n    return yup\n        .object({\n            email: yup\n                .string()\n                .email(intl.formatMessage({ id: 'UserManagement.validEmail' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredEmail' })),\n            password: yup\n                .string()\n                .min(8, intl.formatMessage({ id: 'UserManagement.validPassword' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredPassword' })),\n            confirmPassword: yup\n                .string()\n                .oneOf([yup.ref('password'), null], intl.formatMessage({ id: 'UserManagement.validConfirmPassword' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredConfirmPassword' })),\n            firstName: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredFirstName' })),\n            lastName: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredLastName' }))\n        })\n        .defined();\n}\n","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\n\nexport const useSignUpStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            paper: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            },\n            form: {\n                width: '100%', // Fix IE 11 issue.\n                marginTop: theme.spacing(3)\n            }\n        })\n);\n\nexport const useSignUpHeaderStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            avatar: {\n                margin: theme.spacing(1),\n                backgroundColor: theme.palette.secondary.main\n            }\n        })\n);\n\nexport const useSignUpButtonStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            submit: {\n                margin: theme.spacing(3, 0, 2)\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useSignUpHeaderStyles } from './SignUpStyle';\nimport { Avatar, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { FormattedMessage } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SignUpHeader: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpHeaderStyles();\n    return (\n        <>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n                <FormattedMessage id='UserManagement.signup' />\n            </Typography>\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { FetchComponentProps } from '../../common';\nimport { FormattedMessage } from 'react-intl';\nexport type SignupApiReturn = {\n    id: string | number;\n    message?: string;\n};\nexport type SuccessProps = FetchComponentProps<SignupApiReturn>;\n\nexport const SignupMessage: FunctionComponent<SuccessProps> = ({ data }) => {\n    if (data !== undefined) {\n        if ('id' in data && data.id !== undefined) {\n            return <FormattedMessage id='UserManagement.signupSuccess' />;\n        } else if ('message' in data && data.message !== undefined) {\n            return <div> {data.message} </div>;\n        }\n    }\n    return <div />;\n};\n","import { FunctionComponent } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { useSignUpButtonStyles } from './SignUpStyle';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SubmitButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpButtonStyles();\n    return (\n        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n            <FormattedMessage id='UserManagement.signup' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common';\nimport { Container } from '@material-ui/core';\nimport { SignUp } from './SignUp';\n\nexport const SignUpView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Container component='main' maxWidth='xs'>\n            <SignUp />\n        </Container>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\nimport { TableData } from '../galleryTable';\nimport { useDeleteButton } from '.';\nimport { useIntl } from 'react-intl';\nimport { IconButton, ButtonGroup } from '@material-ui/core';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nexport const FileManagementButtonGroup: FunctionComponent<TableData> = (rowData) => {\n    const intl = useIntl();\n    const { fileName, fileID } = rowData;\n    const { deleted, DeleteButton } = useDeleteButton({ fileID });\n    return (\n        <ButtonGroup>\n            <IconButton\n                onClick={() => {\n                    alert(`Will trigger a download of the ${fileName} file`);\n                }}\n                aria-label={intl.formatMessage({\n                    id: 'FileManagement.download'\n                })}>\n                <CloudDownloadIcon />\n            </IconButton>\n            {!deleted && <DeleteButton />}\n        </ButtonGroup>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { updateTable } from '../gallery';\nimport { useAjax } from '../../common';\nimport { useIntl } from 'react-intl';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport type DeleteApiReturn = {\n    error: boolean;\n    message?: string;\n};\n\nexport type DeleteApiArguments = {\n    filePath?: string;\n    fileName?: string;\n    fileId?: number;\n};\n\ntype Props = {\n    fileID: number;\n};\n\ntype deleteHookReturn = {\n    deleted: boolean;\n    DeleteButton: FunctionComponent;\n};\n\nexport const useDeleteButton = (props: Props): deleteHookReturn => {\n    const intl = useIntl();\n    const { fileID } = props;\n    const { data, isLoading, ajax } = useAjax<DeleteApiReturn, DeleteApiArguments>(`/FileManagement/delete?fileId=${fileID}`);\n    const deleteFile = (): void => {\n        ajax();\n        updateTable();\n    };\n    const DeleteButton: FunctionComponent = () => (\n        <IconButton\n            onClick={deleteFile}\n            disabled={isLoading}\n            aria-label={intl.formatMessage({\n                id: 'FileManagement.delete'\n            })}>\n            <DeleteIcon />\n        </IconButton>\n    );\n\n    return { deleted: data?.error ?? false, DeleteButton };\n};\n","import { FunctionComponent, MouseEvent } from 'react';\nimport { FileManagementButtonGroup } from '.';\nimport { TableData } from '../galleryTable';\nimport { Checkbox, TableCell, TableRow } from '@material-ui/core';\nimport { DateTime } from 'luxon';\n\ninterface GalleryTableRowProps {\n    handleClick: (event: MouseEvent<HTMLTableHeaderCellElement | HTMLTableDataCellElement>, id: number) => void;\n    isItemSelected: boolean;\n    labelId: string;\n    row: TableData;\n}\n\n/* Source https://web.archive.org/web/20120507054320/http://codeaid.net/javascript/convert-size-in-bytes-to-human-readable-format-(javascript)*/\nfunction formatBytes(bytes: number, decimals = 2): string {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nfunction dateToString(dt: DateTime) {\n    return dt.toLocaleString(DateTime.DATETIME_FULL);\n}\n\n/* Create the table row  */\nexport const GalleryTableRow: FunctionComponent<GalleryTableRowProps> = ({ handleClick, isItemSelected, labelId, row }) => (\n    <TableRow hover role='checkbox' aria-checked={isItemSelected} tabIndex={-1} key={row.fileID} selected={isItemSelected}>\n        <TableCell padding='checkbox' onClick={(event) => handleClick(event, row.fileID)}>\n            <Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} />\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {row.fileName}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {formatBytes(row.fileSize)}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {row.filePath}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {dateToString(row.uploaded)}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            <FileManagementButtonGroup {...row} />\n        </TableCell>\n    </TableRow>\n);\n","import { useState, ChangeEvent, MouseEvent, FunctionComponent } from 'react';\nimport { Table, TableBody, TableCell, TableRow, TableContainer, TablePagination, Paper, FormControlLabel, Switch } from '@material-ui/core';\nimport { GalleryTableHead, getComparator, stableSort, Order, HeadCell, GalleryTableToolbar, useGalleryTableStyle } from '../galleryTable';\nimport { GalleryTableRow } from '../galleryTableRow';\nimport { useIntl } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { DateTime } from 'luxon';\nimport { FetchComponentProps } from '../../common';\nimport { FileApiReturnData, FileData } from '../gallery';\n\n/* TODO: figure out how to incorporate folders as well */\nexport interface TableData {\n    fileID: number;\n    fileName: string;\n    fileSize: number;\n    /* When the file was first uploaded */\n    uploaded: DateTime;\n    /* Folder */\n    filePath: string;\n    /* type of file*/\n    mime: string;\n    accessID: number;\n}\n\nfunction createData(\n    fileID: number,\n    fileName: string,\n    fileSize: number,\n    uploadedDtString: string,\n    filePath: string,\n    mime: string,\n    accessID: number\n): TableData {\n    const uploaded = DateTime.fromSQL(uploadedDtString);\n    return { fileID, fileName, fileSize, filePath, uploaded, mime, accessID };\n}\n\nconst headCells: HeadCell<TableData>[] = [\n    { id: 'fileName', numeric: false },\n    { id: 'fileSize', numeric: true },\n    { id: 'filePath', numeric: false },\n    { id: 'uploaded', numeric: false }\n];\n\nexport const GalleryTable: FunctionComponent<FetchComponentProps<FileApiReturnData>> = ({ data }) => {\n    /******************* Hooks*******************/\n    const classes: ClassNameMap = useGalleryTableStyle();\n    const intl = useIntl();\n\n    /******************* States *******************/\n    const [order, setOrder] = useState<Order>('asc');\n    /* By default sort by image name */\n    const [orderBy, setOrderBy] = useState<keyof TableData>('fileName');\n    const [selected, setSelected] = useState<number[]>([]);\n    const [page, setPage] = useState(0);\n    const [dense, setDense] = useState(false);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    /******************* Variables *******************/\n\n    const rows: TableData[] =\n        'error' in data\n            ? []\n            : data.map((fd: FileData) => {\n                  return createData(fd.fileID, fd.fileName, fd.fileSize, fd.uploaded, fd.filePath, fd.mime, fd.accessID);\n              });\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const handleRequestSort = (_event: MouseEvent<unknown>, property: keyof TableData) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            const newSelected = rows.map((n) => n.fileID);\n            setSelected(newSelected);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (_event: MouseEvent<unknown>, id: number) => {\n        /* NOTE: using a map over an array might increase performance */\n        const selectedIndex = selected.indexOf(id);\n        let newSelected: number[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (_event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event: ChangeEvent<HTMLInputElement>) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (id: number) => selected.indexOf(id) !== -1;\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <GalleryTableToolbar selected={selected} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size={dense ? 'small' : 'medium'}\n                        aria-label={intl.formatMessage({\n                            id: 'Gallery.Table.title'\n                        })}>\n                        <GalleryTableHead\n                            numSelected={selected.length}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            order={order}\n                            orderBy={orderBy}\n                            rowCount={rows.length}\n                            headCells={headCells}\n                            intl={intl}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row: TableData, index: number) => {\n                                    const isItemSelected = isSelected(row.fileID);\n                                    return (\n                                        <GalleryTableRow\n                                            row={row}\n                                            labelId={`gallery-${index}`}\n                                            isItemSelected={isItemSelected}\n                                            handleClick={handleClick}\n                                            key={row.fileID}\n                                        />\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component='div'\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label='Dense padding' />\n        </div>\n    );\n};\n","import { ChangeEvent, FunctionComponent, MouseEvent } from 'react';\nimport { Order, TableData, useTableHeadStyle } from '.';\nimport { Checkbox, TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport { IntlShape } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nexport interface HeadCell<T> {\n    numeric: boolean;\n    id: keyof T;\n}\n\ntype OnRequestSortParameter<T> = (event: MouseEvent<HTMLButtonElement>, property: keyof T) => void;\ntype OnSelectAllClickParameter = (event: ChangeEvent<HTMLInputElement>) => void;\n\nexport interface GalleryTableProps<T> {\n    numSelected: number;\n    onRequestSort: OnRequestSortParameter<T>;\n    onSelectAllClick: OnSelectAllClickParameter;\n    order: Order;\n    orderBy: string;\n    rowCount: number;\n    intl: IntlShape;\n    headCells: HeadCell<T>[];\n}\n\nfunction createSortHandler<T>(property: keyof T, onRequestSort: OnRequestSortParameter<T>) {\n    return (event: MouseEvent<HTMLButtonElement>): void => {\n        onRequestSort(event, property);\n    };\n}\n/* Handle toggling of sort button */\nexport const GalleryTableHead: FunctionComponent<GalleryTableProps<TableData>> = ({\n    numSelected,\n    onRequestSort,\n    onSelectAllClick,\n    order,\n    orderBy,\n    rowCount,\n    headCells,\n    intl\n}) => {\n    const classes: ClassNameMap = useTableHeadStyle();\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding='checkbox'>\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': intl.formatMessage({ id: 'Gallery.Table.checkboxLabel' }) }}\n                    />\n                </TableCell>\n                {headCells.map((headCell: HeadCell<TableData>) => (\n                    <TableCell key={headCell.id} align='left' padding='none' sortDirection={orderBy === headCell.id ? order : false}>\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler<TableData>(headCell.id, onRequestSort)}>\n                            {intl.formatMessage({ id: `Gallery.Table.${headCell.id}` })}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n","import { makeStyles, createStyles, Theme, lighten } from '@material-ui/core/styles';\n\nexport const useTableHeadStyle = makeStyles(() =>\n    createStyles({\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1\n        }\n    })\n);\n\nexport const useGalleryTableStyle = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            overflowY: 'auto',\n            overflowX: 'hidden'\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2)\n        },\n        table: {\n            minWidth: '100%'\n        }\n    })\n);\n\nexport const useToolbarStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1)\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                      color: theme.palette.secondary.main,\n                      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n                  }\n                : {\n                      color: theme.palette.text.primary,\n                      backgroundColor: theme.palette.secondary.dark\n                  },\n        title: {\n            flex: '1 1 100%'\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\nimport { useToolbarStyles } from '.';\nimport { IconButton, Tooltip, Toolbar, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport clsx from 'clsx';\nimport { FormattedMessage } from 'react-intl';\n\ninterface GalleryTableToolbarProps {\n    selected: number[];\n}\n\n/* TODO: Typography should have a formatted message child*/\nexport const GalleryTableToolbar: FunctionComponent<GalleryTableToolbarProps> = ({ selected }) => {\n    const classes: ClassNameMap = useToolbarStyles();\n    const numSelected = selected.length;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0\n            })}>\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color='inherit' variant='subtitle1' component='div'>\n                    <FormattedMessage id='Gallery.Table.selected' values={{ numSelected }} />\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant='h6' id='tableTitle' component='div'>\n                    <FormattedMessage id='Gallery.Table.title' />\n                </Typography>\n            )}\n            {numSelected > 0 && (\n                <Tooltip title='Delete'>\n                    <IconButton aria-label='delete'>\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n","/* From https://github.com/mui-org/material-ui/blob/master/docs/src/pages/components/tables/EnhancedTable.tsx */\nimport { TableData } from './GalleryTable';\nimport { DateTime } from 'luxon';\n\nexport type Order = 'asc' | 'desc';\n/* Function to handle comparison   */\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T): number {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n/* Function used to compare the elements to sort them  */\nexport function getComparator<Key extends keyof TableData>(\n    order: Order,\n    orderBy: Key\n): (a: { [key in Key]: number | string | DateTime }, b: { [key in Key]: number | string | DateTime }) => number {\n    return order === 'desc'\n        ? (a, b): number => descendingComparator(a, b, orderBy)\n        : (a, b): number => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort<T>(array: T[], comparator: (a: T, b: T) => number): T[] {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n","import { FunctionComponent } from 'react';\nimport { useGalleryButtonStyle, SubmitButton, ResetButton } from '.';\nimport { Dropzone, useAjax, useAjaxComponent } from '../../common';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { updateTable, useGallerySnackbar, GalleryExpectedFileInfo, OperationInfo } from '../gallery';\n\nexport type UploadReturnType = Record<string, OperationInfo>;\n\nexport type FormValues = {\n    files: File[];\n};\n\nexport const GalleryControlButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useGalleryButtonStyle();\n    const { GallerySnackbar, setOpen } = useGallerySnackbar();\n    const { data, isLoading, error, ajax } = useAjax<UploadReturnType, FormData>('/FileManagement/upload');\n    const { AjaxComponent } = useAjaxComponent<GalleryExpectedFileInfo>({\n        SuccessComponent: GallerySnackbar,\n        data: data !== undefined ? Object.entries(data) : undefined,\n        isLoading,\n        error\n    });\n\n    const validateFiles = (values: FormValues): File[] => {\n        /* Quick validation here so we don't waste time getting an error in the back-end\n         * We have to make sure file name are unique\n         */\n        const files: File[] = [];\n        const map = new Map<string, boolean>();\n        for (const file of values.files) {\n            if (!map.has(file.name)) {\n                map.set(file.name, true); // set any value to Map\n                files.push(file);\n            }\n        }\n        return files;\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            files: []\n        },\n        onSubmit: (values: FormValues) => {\n            if (values.files === undefined) return;\n            const files = validateFiles(values);\n            const formData = new FormData();\n            for (let key = 0; key < files.length; key++) {\n                formData.append('images[]', files[key]);\n            }\n            if (files.length > 0) {\n                ajax(formData);\n                formik.resetForm();\n                setOpen(true);\n                updateTable();\n            }\n        }\n    });\n\n    const onDropHandler = (acceptedFiles: File[]) => {\n        // do nothing if no files\n        if (acceptedFiles.length === 0) {\n            return;\n        }\n        const formikValues = formik.values.files as File[];\n        // on drop we add to the existing files\n        void formik.setFieldValue('files', formikValues === undefined ? acceptedFiles : (acceptedFiles ?? []).concat(formikValues));\n    };\n    return (\n        <>\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                {!isLoading && (\n                    <>\n                        <Dropzone onDropHandler={onDropHandler} files={formik.values.files ?? []} />\n                        <SubmitButton />\n                        <ResetButton resetForm={formik.resetForm} />\n                    </>\n                )}\n                <AjaxComponent />\n            </form>\n        </>\n    );\n};\n","import { SyntheticEvent, useState, FunctionComponent, useEffect } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { FetchComponentProps } from '../../common';\nimport { FormattedMessage } from 'react-intl';\n\nexport type OperationInfo = {\n    error: boolean;\n    message?: string;\n};\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\n/* The format of our end point with information about what files were uploaded*/\nexport type GalleryExpectedFileInfo = Array<[string, OperationInfo]>;\n\ninterface GallerySnackbarProps extends FetchComponentProps<GalleryExpectedFileInfo> {\n    handleClose: (_event?: SyntheticEvent, reason?: string) => void;\n    open: boolean;\n}\n\nexport type GalleryHookReturn = {\n    setOpen: (open: boolean) => void;\n    GallerySnackbar: FunctionComponent<FetchComponentProps<GalleryExpectedFileInfo>>;\n};\nexport const GallerySnackbar: FunctionComponent<GallerySnackbarProps> = ({ open, data, handleClose }) => {\n    /*NOTE: this should be used - might be better to just use a defaultFallback from FormattedMessage*/\n    const fallbackError = 'of an internal server error';\n    const [errorData, setErrorData] = useState<GalleryExpectedFileInfo>([]);\n    const [successCount, setSuccessCount] = useState(0);\n\n    /* Whenever our data gets changed we change our info */\n    useEffect(() => {\n        setErrorData(data.filter(([_filename, operationInfo]) => operationInfo.error));\n        setSuccessCount(data.filter(([_filename, operationInfo]) => !operationInfo.error).length);\n    }, [data]);\n\n    /* Don't react to empty requests. NOTE: it might make sense to use an info box to gently\n     * remind the user to upload files\n     */\n    if (data === undefined || data.length === 0) return <div />;\n\n    let alert: JSX.Element;\n\n    /* Shown if all our files are rejected */\n    if (successCount === 0) {\n        alert = (\n            <Alert severity='error'>\n                <FormattedMessage id='FileManagement.uploadedFailed' />{' '}\n            </Alert>\n        );\n    } else if (successCount === data.length) {\n        /* Show if all our files are accepted */\n        alert = (\n            <Alert severity='success'>\n                {' '}\n                <FormattedMessage id='FileManagement.uploadedSuccessfully' />\n            </Alert>\n        );\n    } else {\n        /* Message if we have a mix of upload and delete */\n        alert = (\n            <Alert severity='warning'>\n                <>\n                    <h2 id='gallery-alert-title'>\n                        {' '}\n                        <FormattedMessage id='FileManagement.someFileFailedTitle' />{' '}\n                    </h2>\n                    {errorData.map(([filename, operationInfo], index: number) => {\n                        return (\n                            <p key={`gallery-snackbar-description ${filename} ${index}`}>\n                                <b>\n                                    <FormattedMessage\n                                        id='FileManagement.uploadedFailureInfo'\n                                        values={{ filename, errorMessage: operationInfo.message ?? fallbackError }}\n                                    />{' '}\n                                </b>\n                            </p>\n                        );\n                    })}\n                </>\n            </Alert>\n        );\n    }\n\n    return (\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            {alert}\n        </Snackbar>\n    );\n};\n\nexport function useGallerySnackbar(): GalleryHookReturn {\n    const [open, setOpen] = useState(false);\n    const handleClose = (_event?: SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') return;\n        setOpen(false);\n    };\n    const GalleryInformation: FunctionComponent<FetchComponentProps<GalleryExpectedFileInfo>> = ({ data }) => (\n        <GallerySnackbar handleClose={handleClose} data={data} open={open} />\n    );\n\n    return {\n        setOpen,\n        GallerySnackbar: GalleryInformation\n    };\n}\n","import { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@material-ui/core';\n\nexport type ResetButtonProps = {\n    resetForm: () => void;\n};\nexport const ResetButton: FunctionComponent<ResetButtonProps> = ({ resetForm }) => (\n    <Button variant='contained' color='primary' onClick={resetForm}>\n        <FormattedMessage id='FileManagement.clear' />\n    </Button>\n);\n","import { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@material-ui/core';\n\nexport const SubmitButton: FunctionComponent = () => (\n    <Button variant='contained' type='submit' color='primary'>\n        <FormattedMessage id='FileManagement.upload' />\n    </Button>\n);\n","import { makeStyles, createStyles } from '@material-ui/core/styles';\n\n/* Style for the control button */\nexport const useGalleryButtonStyle = makeStyles(() =>\n    createStyles({\n        input: {\n            display: 'none'\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\nimport { useGalleryRootStyle } from '../gallery';\nimport { GalleryTable } from '../galleryTable';\nimport { GalleryControlButton } from '../galleryUpload';\nimport { useAjaxComponent, useSwrAjax } from '../../common';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\n/* Arguments that the API takes */\ntype FileApiArguments = {\n    filePath?: string;\n};\n\nexport type FileData = {\n    fileID: number;\n    memberID: number;\n    fileName: string;\n    fileSize: number;\n    uploaded: string;\n    filePath: string;\n    mime: string;\n    accessID: number;\n};\nexport type FileApiReturnData = Array<FileData>;\n\nexport const Gallery: FunctionComponent = () => {\n    const classes: ClassNameMap = useGalleryRootStyle();\n    /* Different folder will have different files */\n    const curFolder = '';\n\n    const { data, isLoading, error } = useSwrAjax<FileApiReturnData, FileApiArguments>('FileManagement/folderImages', {\n        filePath: curFolder\n    });\n    const { AjaxComponent } = useAjaxComponent<FileApiReturnData>({\n        SuccessComponent: GalleryTable,\n        data,\n        isLoading,\n        error\n    });\n    return (\n        <div className={classes.root}>\n            <AjaxComponent />\n            <GalleryControlButton />\n        </div>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport { AXIOS_ENDPOINT } from './apiConstants';\nimport { AjaxType, ErrorType, ReturnType } from './useAjax';\nimport useSWR from 'swr';\n\ntype useAjaxReturn<T, Y> = Omit<AjaxType<T, Y>, 'ajax'>;\nexport const useSwrAjax = <T, Y>(endpoint: string, args?: Y): useAjaxReturn<T, Y> => {\n    const fetcher = (url: string) =>\n        AXIOS_ENDPOINT.get<T>(url, { params: args }).then((response: AxiosResponse<ReturnType<T>>) => response.data);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { data, error: swrError } = useSWR(endpoint, fetcher);\n    const [error, setError] = useState<ErrorType>(undefined as ErrorType);\n    useEffect(() => {\n        if (swrError && 'message' in swrError) {\n            setError({ error: true, message: (swrError as Error).message });\n        } else if (data && 'error' in data && data.error) {\n            setError(data as ErrorType);\n        }\n    }, [data, swrError]);\n\n    return {\n        data: (data as T) ?? undefined,\n        isLoading: error === undefined && data === undefined,\n        error\n    };\n};\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport const useGalleryRootStyle = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1)\n            }\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common/errorHandling';\nimport { Gallery } from './Gallery';\n\nexport const GalleryView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Gallery />\n    </ErrorFallback>\n);\n","import { mutate as swrMutate } from 'swr';\n\nexport const updateTable = (): void => void swrMutate('FileManagement/folderImages');\n","import { FunctionComponent } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { HomeView } from './home';\nimport { LoginView } from './login';\nimport { SignUpView } from './register';\nimport { GalleryView } from './gallery';\n/* Import the pages of the website */\nimport { NotFound } from '../common';\n/* Import to control the color scheme like dark mode */\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { pink, green } from '@material-ui/core/colors';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: pink[900]\n        },\n        secondary: {\n            main: green[500]\n        },\n        type: 'dark'\n    }\n});\n\nexport const App: FunctionComponent = () => (\n    <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <HashRouter hashType='noslash'>\n            <Switch>\n                {/*\n                <Route exact path='/forgotPassword'>\n                    <ForgotPasswordView />\n                </Route>\n                */}\n                <Route path='/gallery'>\n                    <GalleryView />\n                </Route>\n                <Route exact path='/login'>\n                    <LoginView />\n                </Route>\n                <Route exact path='/signup'>\n                    <SignUpView />\n                </Route>\n                <Route exact path='/'>\n                    <HomeView />\n                </Route>\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </HashRouter>\n    </ThemeProvider>\n);\n","import { FunctionComponent, StrictMode } from 'react';\nimport { App } from './components';\n/* Import for languages */\nimport { IntlProvider } from 'react-intl';\nimport messagesEn from './translations/en.json';\n/* Import website wide css */\nimport './index.css';\nimport ReactDOM from 'react-dom';\n\n/* For getting back data */\nconst language = (navigator.languages && navigator.languages[0]) || navigator.language;\n/* Since we only have English as a language */\nconst message = messagesEn;\n\nconst WrappedApp: FunctionComponent = () => (\n    <StrictMode>\n        <IntlProvider locale={language} messages={message}>\n            <App />\n        </IntlProvider>\n    </StrictMode>\n);\n\n// Renders the application\nReactDOM.render(<WrappedApp />, document.getElementById('root'));\n"],"sourceRoot":""}