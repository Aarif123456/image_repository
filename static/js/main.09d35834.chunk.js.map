{"version":3,"sources":["components/galleryUpload/GalleryUpload.tsx","components/galleryUpload/GalleryResetButton.tsx","components/galleryUpload/GallerySubmitButton.tsx","components/galleryUpload/GalleryUploadStyle.tsx","components/gallery/Gallery.tsx","components/gallery/GallerySnackbar.tsx","components/gallery/GalleryStyle.tsx","components/gallery/GalleryView.tsx","components/gallery/updateFileMutator.ts","common/dataRetrieval/AjaxComponent.tsx","common/dataRetrieval/apiConstants.ts","common/dataRetrieval/ProgressCircle.tsx","common/internationalizedComponents/TextField.tsx","common/internationalizedComponents/Link.tsx","common/internationalizedComponents/InternationalizedMessageBox.tsx","common/internationalizedComponents/Thumbs.tsx","common/internationalizedComponents/Dropzone.tsx","common/dataRetrieval/RetrieveErrorBox.tsx","common/dataRetrieval/SimpleErrorMessage.tsx","common/dataRetrieval/swrFetch.tsx","common/dataRetrieval/useAjax.tsx","common/MessageBox.tsx","components/galleryTable/EmptyRow.tsx","components/galleryTable/GalleryTableHead.tsx","components/galleryTable/GalleryTableStyle.tsx","components/galleryTable/GalleryTableToolbar.tsx","components/galleryTable/TableData.ts","components/galleryTable/TablePagination.tsx","components/galleryTable/TableSorter.ts","components/galleryTableRow/DownloadButton.tsx","components/galleryTableRow/FileManagementButtonGroup.tsx","components/galleryTableRow/DeleteButton.tsx","components/galleryTableRow/GalleryTableRow.tsx","components/galleryTable/GalleryTable.tsx","components/galleryTable/index.ts","components/home/HomeView.tsx","components/home/Home.tsx","resources/space.jpg","components/home/HomeStyle.tsx","components/home/SignupButton.tsx","components/home/LoginButton.tsx","components/login/Login.tsx","components/login/FormStructure.ts","components/login/LoginStyle.tsx","components/login/LoginHeader.tsx","components/login/LoginMessage.tsx","components/login/LoginProgressCircle.tsx","components/login/LoginSubmitButton.tsx","components/login/LoginView.tsx","components/register/SignUp.tsx","components/register/FormStructure.ts","components/register/SignUpStyle.tsx","components/register/SignUpHeader.tsx","components/register/SignupMessage.tsx","components/register/SignUpSubmitButton.tsx","components/register/SignUpView.tsx","components/App.tsx","index.tsx","common/errorHandling/ErrorFallback.tsx","common/errorHandling/NotFound.tsx"],"names":["GalleryControlButton","classes","useGalleryButtonStyle","useGallerySnackbar","GallerySnackbar","setOpen","useAjax","data","isLoading","error","ajax","AjaxComponent","useAjaxComponent","SuccessComponent","undefined","Object","entries","formik","useFormik","initialValues","files","onSubmit","values","map","Map","file","has","name","set","push","validateFiles","formData","FormData","key","length","append","resetForm","updateTable","className","form","handleSubmit","noValidate","onDropHandler","acceptedFiles","formikValues","setFieldValue","concat","ResetButton","Button","variant","color","onClick","id","SubmitButton","type","makeStyles","createStyles","input","display","Gallery","useGalleryRootStyle","useSwrAjax","filePath","GalleryTable","root","Alert","props","elevation","alert","open","handleClose","useState","errorData","setErrorData","successCount","setSuccessCount","useEffect","filter","severity","index","filename","operationInfo","errorMessage","message","Snackbar","autoHideDuration","onClose","_event","reason","theme","margin","spacing","GalleryView","swrMutate","ErrorComponent","RetrieveErrorBox","LoadingComponent","ProgressCircle","intl","useIntl","val","formatMessage","API","AXIOS_ENDPOINT","axios","create","withCredentials","baseURL","useStyles","progress","inline","size","CircularProgress","TextField","autoCompleteName","labelTranslatorId","inputProps","autoFocus","helperText","autoComplete","required","fullWidth","label","InputProps","Link","to","linkProps","component","RouterLink","bolder","chunks","emphasizer","InternationalizedMessageBox","defaultMessage","description","breakingLine","b","em","i","Thumbs","imageFile","imageTitle","imageUrl","setImageUrl","reader","FileReader","addEventListener","result","readAsDataURL","src","alt","height","width","dropzoneStyle","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","acceptStyle","rejectStyle","Dropzone","useDropzone","accept","onDrop","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","SimpleErrorMessage","endpoint","args","useSWR","url","get","params","then","response","swrError","setError","setLoading","setData","post","catch","e","ajaxCall","default","padding","backgroundColor","warning","getStylesForType","MessageBox","children","Paper","clsx","EmptyRow","emptyRows","dense","colSpan","headCells","numeric","createSortHandler","property","onRequestSort","event","GalleryTableHead","numSelected","onSelectAllClick","order","orderBy","rowCount","useTableHeadStyle","indeterminate","checked","onChange","headCell","align","sortDirection","active","direction","visuallyHidden","border","clip","overflow","position","top","useGalleryTableStyle","overflowY","overflowX","paper","marginBottom","table","minWidth","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","primary","dark","title","flex","GalleryTableToolbar","selected","aria-label","join","createData","fileID","fileName","fileSize","uploadedDtString","mime","accessID","uploaded","DateTime","fromSQL","useTablePagination","count","rowsPerPage","setRowsPerPage","page","setPage","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","Math","min","startIndex","endIndex","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","descendingComparator","a","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","DownloadButton","IconButton","document","createElement","href","setAttribute","click","FileManagementButtonGroup","rowData","deleteFile","deleted","DeleteButton","disabled","useDeleteButton","ButtonGroup","formatBytes","bytes","decimals","k","dm","sizes","floor","log","parseFloat","pow","toFixed","GalleryTableRow","dt","handleClick","isItemSelected","labelId","row","TableRow","hover","role","aria-checked","tabIndex","TableCell","Checkbox","toLocaleString","DATETIME_FULL","setOrder","setOrderBy","setSelected","setDense","rows","fd","selectedIndex","indexOf","newSelected","slice","TableContainer","Table","aria-labelledby","n","TableBody","FormControlLabel","control","Switch","HomeView","useBackgroundStyle","backgroundContainer","Home","useHomeStyles","Grid","container","alignItems","justify","mainGrid","item","xs","orientation","mainButtons","minHeight","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","SignUpButton","history","useHistory","LoginButton","Login","useLoginStyles","validationSchema","yup","email","password","remember","defined","getValidationSchema","cast","touched","errors","handleChange","Boolean","marginTop","flexDirection","useLoginLoadingStyles","backdrop","zIndex","drawer","useLoginHeaderStyles","avatar","useLoginButtonStyles","submit","LoginHeader","Avatar","Typography","LoginMessage","LoginProgressCircle","Backdrop","LoginView","Container","maxWidth","SignUp","useSignUpStyles","confirmPassword","oneOf","firstName","lastName","isSubmitting","SignupMessage","sm","useSignUpHeaderStyles","useSignUpButtonStyles","SignUpHeader","SignUpView","darkTheme","createMuiTheme","pink","green","App","ThemeProvider","CssBaseline","hashType","path","exact","language","navigator","languages","messagesEn","WrappedApp","locale","messages","ReactDOM","render","getElementById","FallbackComponent","myErrorHandler","_error","info","console","componentStack","ErrorFallback","onError","NotFound"],"mappings":"+TAaaA,EAA0C,WAAO,IAAD,EACnDC,EAAwBC,IAC9B,EAAqCC,IAA7BC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QACzB,EAAyCC,YAAoC,0BAArEC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,KACxBC,EAAkBC,YAA0C,CAChEC,iBAAkBT,EAClBG,UAAeO,IAATP,EAAqBQ,OAAOC,QAAQT,QAAQO,EAClDN,YACAC,UAJIE,cAsBFM,EAASC,YAAU,CACrBC,cAAe,CACXC,MAAO,IAEXC,SAAU,SAACC,GACP,QAAqBR,IAAjBQ,EAAOF,MAAX,CAGA,IAFA,IAAMA,EArBQ,SAACE,GAInB,IAJkD,EAI5CF,EAAgB,GAChBG,EAAM,IAAIC,IALkC,cAM/BF,EAAOF,OANwB,IAMlD,2BAAiC,CAAC,IAAvBK,EAAsB,QACxBF,EAAIG,IAAID,EAAKE,QACdJ,EAAIK,IAAIH,EAAKE,MAAM,GACnBP,EAAMS,KAAKJ,KAT+B,8BAYlD,OAAOL,EASWU,CAAcR,GACtBS,EAAW,IAAIC,SACZC,EAAM,EAAGA,EAAMb,EAAMc,OAAQD,IAClCF,EAASI,OAAO,WAAYf,EAAMa,IAElCb,EAAMc,OAAS,IACfxB,EAAKqB,GACLd,EAAOmB,YACP/B,GAAQ,GACRgC,SAcZ,OACI,mCACI,uBAAMC,UAAWrC,EAAQsC,KAAMlB,SAAUJ,EAAOuB,aAAcC,YAAU,EAAxE,WACMjC,GACE,qCACI,cAAC,IAAD,CAAUkC,cAdR,SAACC,GAEnB,GAA6B,IAAzBA,EAAcT,OAAlB,CAGA,IAAMU,EAAe3B,EAAOK,OAAOF,MAE9BH,EAAO4B,cAAc,aAA0B/B,IAAjB8B,EAA6BD,GAAgB,OAACA,QAAD,IAACA,IAAiB,IAAIG,OAAOF,MAOrDxB,MAAK,UAAEH,EAAOK,OAAOF,aAAhB,QAAyB,KACtE,cAAC,EAAD,IACA,cAAC,EAAD,CAAagB,UAAWnB,EAAOmB,eAGvC,cAACzB,EAAD,U,kBCvEHoC,EAAmD,SAAC,GAAD,IAAGX,EAAH,EAAGA,UAAH,OAC5D,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASf,EAArD,SACI,cAAC,IAAD,CAAkBgB,GAAG,4BCLhBC,EAAkC,kBAC3C,cAACL,EAAA,EAAD,CAAQC,QAAQ,YAAYK,KAAK,SAASJ,MAAM,UAAhD,SACI,cAAC,IAAD,CAAkBE,GAAG,6B,kBCHhBlD,EAAwBqD,aAAW,kBAC5CC,YAAa,CACTC,MAAO,CACHC,QAAS,aCkBRC,EAA6B,WACtC,IAAM1D,EAAwB2D,IAI9B,EAAmCC,YAAgD,8BAA+B,CAC9GC,SAHc,KAEVvD,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MAGjBE,EAAkBC,YAAoC,CAC1DC,iBAAkBkD,eAClBxD,OACAC,YACAC,UAJIE,cAMR,OACI,sBAAK2B,UAAWrC,EAAQ+D,KAAxB,UACI,cAACrD,EAAD,IACA,cAAC,EAAD,Q,yCC9BZ,SAASsD,EAAMC,GACX,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGlB,QAAQ,UAAaiB,IAejD,IAAM9D,EAA2D,SAAC,GAAiC,IAiBlGgE,EAjBmEC,EAA8B,EAA9BA,KAAM9D,EAAwB,EAAxBA,KAAM+D,EAAkB,EAAlBA,YAGnF,EAAkCC,mBAAkC,IAApE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAWA,OARAC,qBAAU,WACNH,EAAalE,EAAKsE,QAAO,oDAA8CpE,UACvEkE,EAAgBpE,EAAKsE,QAAO,oDAA+CpE,SAAOyB,UACnF,CAAC3B,SAKSO,IAATP,GAAsC,IAAhBA,EAAK2B,OAAqB,yBAMhDkC,EADiB,IAAjBM,EAEI,eAAC,EAAD,CAAOI,SAAS,QAAhB,UACI,cAAC,IAAD,CAAkB1B,GAAG,kCAAmC,OAGzDsB,IAAiBnE,EAAK2B,OAGzB,eAAC,EAAD,CAAO4C,SAAS,UAAhB,UACK,IACD,cAAC,IAAD,CAAkB1B,GAAG,2CAMzB,cAAC,EAAD,CAAO0B,SAAS,UAAhB,SACI,qCACI,qBAAI1B,GAAG,sBAAP,UACK,IACD,cAAC,IAAD,CAAkBA,GAAG,uCAAwC,OAEhEoB,EAAUjD,KAAI,WAA4BwD,GAAmB,IAAD,qBAA5CC,EAA4C,KAAlCC,EAAkC,KACzD,OACI,4BACI,8BACI,cAAC,IAAD,CACI7B,GAAG,qCACH9B,OAAQ,CAAE0D,WAAUE,aAAY,UAAED,EAAcE,eAAhB,QA/C9C,iCAgDa,QALX,uCAAwCH,EAAxC,YAAoDD,YAgBxE,cAACK,EAAA,EAAD,CAAUf,KAAMA,EAAMgB,iBAAkB,IAAMC,QAAShB,EAAvD,SACKF,MAKN,SAASjE,IACZ,MAAwBoE,oBAAS,GAAjC,mBAAOF,EAAP,KAAahE,EAAb,KACMiE,EAAc,SAACiB,EAAyBC,GAC3B,cAAXA,GACJnF,GAAQ,IAMZ,MAAO,CACHA,UACAD,gBANwF,SAAC,GAAD,IAAGG,EAAH,EAAGA,KAAH,OACxF,cAAC,EAAD,CAAiB+D,YAAaA,EAAa/D,KAAMA,EAAM8D,KAAMA,MCnG9D,IAAMT,EAAsBL,aAAW,SAACkC,GAAD,OAC1CjC,YAAa,CACTQ,KAAM,CACF,QAAS,CACL0B,OAAQD,EAAME,QAAQ,U,QCDzBC,EAAiC,kBAC1C,cAAC,IAAD,UACI,cAAC,EAAD,O,SCLKvD,EAAc,WAAiBwD,YAAU,iC,gdCiB/C,SAASjF,EAAoBsD,GAChC,IAAQrD,EAAmHqD,EAAnHrD,iBAAR,EAA2HqD,EAAjG4B,sBAA1B,MAA2CC,EAA3C,IAA2H7B,EAA9D8B,wBAA7D,MAAgFC,EAAhF,EAAgG1F,EAA2B2D,EAA3B3D,KAAMC,EAAqB0D,EAArB1D,UAAWC,EAAUyD,EAAVzD,MAC3GyF,EAAOC,cA6Bb,MAAO,CACHxF,cA7BqC,WAErC,UAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAOA,MACP,OAAO,cAACqF,EAAD,CAAgBZ,aAAY,OAAEzE,QAAF,IAAEA,OAAF,EAAEA,EAAO0E,UAEhD,GAAI3E,EACA,OAAO,cAACwF,EAAD,IAEX,QAAalF,IAATP,EACA,OAAO,wBAOX,IACI,OAAO,cAACM,EAAD,CAAkBN,KAAMA,IACjC,MAAOE,GACL,IAAIyE,EAAe,gBACnB,QAAyBpE,IAApBL,EAA+B,CAAC,IAAD,EAC1B2F,EAAwB,CAAElB,aAAY,UAAGzE,EAAgB0E,eAAnB,QAA8B,IAC1ED,EAAegB,EAAKG,cAAc,CAAEjD,GAAI,yBAA2BgD,GAEvE,OAAO,cAACN,EAAD,CAAgBZ,aAAcA,O,aClC1C,IAAMoB,EAHM,gEAKNC,E,OAAgCC,EAAMC,OAAO,CACtDC,iBAAiB,EACjBC,QAASL,I,kBCPPM,EAAYrD,YAAwC,CACtDsD,SAAU,CACNnD,QAAS,qBAAGoD,OAA+B,UAAY,SACvDpB,OAAQ,qBAAGoB,OAA+B,IAAM,WAI3Cb,EAA2C,SAAC,GAAsB,IAApBa,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACzD9G,EAAU2G,EAAU,CAAEE,WAE5B,OAAO,cAACE,EAAA,EAAD,CAAkB1E,UAAWrC,EAAQ4G,SAAUE,KAAMA,GAAc,M,iBCJjEE,EAAoD,SAAC,GAS3D,IARH7D,EAQE,EARFA,GACAzB,EAOE,EAPFA,KACAuF,EAME,EANFA,iBACAC,EAKE,EALFA,kBACAC,EAIE,EAJFA,WACAC,EAGE,EAHFA,UACA/D,EAEE,EAFFA,KACAgE,EACE,EADFA,WAEMpB,EAAOC,cACb,OACI,mCACI,cAAC,IAAD,CACI/C,GAAIA,EACJmE,aAAcL,EACdvF,KAAMA,EACNsB,QAAQ,WACRuE,UAAQ,EACRC,WAAS,EACTC,MAAOxB,EAAKG,cAAc,CAAEjD,GAAI+D,IAChCE,UAAWA,EACX/D,UAAexC,IAATwC,EAAqBA,EAAO,OAClCgE,WAAYA,EACZK,WAAU,eACHP,Q,0BC9BVQ,EAAqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,kBAAmBW,EAA1B,EAA0BA,UAA1B,OAC9C,mCACKD,GACG,cAAC,IAAD,2BAAkBC,GAAlB,IAA6BC,UAAWC,IAAYH,GAAIA,EAAxD,SACI,cAAC,IAAD,CAAkBzE,GAAI+D,UCHzBc,EAA4B,SAACC,GAAD,OAAY,4BAAIA,KAC5CC,EAAgC,SAACD,GAAD,OAAY,6BAAKA,KAEjDE,EAAkF,SAAC,GAAD,IAC3F9E,EAD2F,EAC3FA,KACAhB,EAF2F,EAE3FA,UACA4C,EAH2F,EAG3FA,aACA9B,EAJ2F,EAI3FA,GACAiF,EAL2F,EAK3FA,eACAC,EAN2F,EAM3FA,YAN2F,OAQ3F,cAAC,EAAD,CAAYhF,KAAMA,EAAMhB,UAAWA,EAAnC,SACI,cAAC,IAAD,CACIc,GAAIA,EACJiF,eAAgBA,EAChBC,YAAaA,EACbhH,OAAQ,CACJiH,aAAc,uBACdC,EAAGP,EACHQ,GAAIN,EACJO,EAAGP,EACHjD,aAAY,OAAEA,QAAF,IAAEA,IAAgB,gC,wBC1BjCyD,EAAwC,SAAC,GAAsC,IAApC5D,EAAmC,EAAnCA,MAAO6D,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACtE,EAAgCtE,mBAAiB,IAAjD,mBAAOuE,EAAP,KAAiBC,EAAjB,KACMC,EAAS,IAAIC,WAUnB,OATAD,EAAOE,iBACH,QACA,WAEIH,EAAYC,EAAOG,WAEvB,GAEJH,EAAOI,cAAcR,GACd,qBAAKS,IAAKP,EAAiCQ,IAAKT,EAAYU,OAAQ,IAAKC,MAAO,KAAhF,gBAAkCzE,KCbvC0E,EAAgB,CAClBD,MAAO,OACPD,OAAQ,OACRG,YAAa,EACbC,YAAa,qBACbC,YAAa,SACbC,aAAc,GAGZC,EAAc,CAChBH,YAAa,WAGXI,EAAc,CAChBJ,YAAa,WAGXK,EAAc,CAChBL,YAAa,WAOJM,EAA6C,SAAC,GAA8B,IAA5BvH,EAA2B,EAA3BA,cAAetB,EAAY,EAAZA,MACxE,EAAkF8I,YAAY,CAC1FC,OAAQ,UACRC,OAAQ1H,IAFJ2H,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,aAI3DC,EAAQC,mBACV,8BAAC,uCACMlB,GACCc,EAAeT,EAAc,IAC7BU,EAAeT,EAAc,IAC7BU,EAAeT,EAAc,MAErC,CAACO,EAAcE,EAAcD,IAGjC,OACI,gDAASH,EAAa,CAAE/H,UAAW,WAAYoI,WAA/C,cACI,qCAAWJ,MACX,4BACI,cAAC,IAAD,CAAkBlH,GAAG,0BAExBmH,GACG,4BACI,cAAC,IAAD,CAAkBnH,GAAG,8BAG5BqH,GACG,4BACI,cAAC,IAAD,CAAkBrH,GAAG,8BAGH,KAAzB,OAAChC,QAAD,IAACA,IAAS,IAAIc,QACX,4BACI,cAAC,IAAD,CAAkBkB,GAAG,kCAG5B,OAAChC,QAAD,IAACA,IAAS,IAAIG,KAAI,SAACE,EAAYiH,GAAb,OACf,cAAC,EAAD,CAA2B3D,MAAO2D,EAAGE,UAAWnH,EAAMoH,WAAU,gBAAWH,IAA3E,gBAAsBA,OAE1B,6BACI,cAAC,IAAD,CAAkBtF,GAAG,mCClExB2C,EAA6D,SAAC,GAAD,IAAGzD,EAAH,EAAGA,UAAW4C,EAAd,EAAcA,aAAcmD,EAA5B,EAA4BA,eAAgBC,EAA5C,EAA4CA,YAA5C,OACtE,cAAC,EAAD,CACIhF,KAAK,QACLF,GAAG,sBACHd,UAAWA,EACX4C,aAAcA,EACdmD,eAAgBA,EAChBC,YAAaA,KCRRsC,EAA0D,SAAC,GAAsB,IAApB1F,EAAmB,EAAnBA,aACtE,YAAqBpE,IAAjBoE,EACO,oCAAOA,EAAP,OAEJ,yB,SCAErB,EAAa,SAAOgH,EAAkBC,GAAmC,IAAD,EAIjF,EAAkCC,YAAOF,GAHzB,SAACG,GAAD,OACZzE,EAAe0E,IAAOD,EAAK,CAAEE,OAAQJ,IAAQK,MAAK,SAACC,GAAD,OAA4CA,EAAS7K,WAEnGA,EAAR,EAAQA,KAAa8K,EAArB,EAAc5K,MACd,EAA0B8D,wBAAoBzD,GAA9C,mBAAOL,EAAP,KAAc6K,EAAd,KASA,OARA1G,qBAAU,WACFyG,GAAY,YAAaA,EACzBC,EAAS,CAAE7K,OAAO,EAAM0E,QAAUkG,EAAmBlG,UAC9C5E,GAAQ,UAAWA,GAAQA,EAAKE,OACvC6K,EAAS/K,KAEd,CAACA,EAAM8K,IAEH,CACH9K,KAAI,UAAGA,SAAH,aAAiBO,EACrBN,eAAqBM,IAAVL,QAAgCK,IAATP,EAClCE,UCgBD,SAASH,EAAcuK,GAC1B,MAA0BtG,wBAAoBzD,GAA9C,mBAAOL,EAAP,KAAc6K,EAAd,KACA,EAAgC/G,oBAAS,GAAzC,mBAAO/D,EAAP,KAAkB+K,EAAlB,KACA,EAAwBhH,qBAAxB,mBAAOhE,EAAP,KAAaiL,EAAb,KAGA,MAAO,CACH/K,QACAD,YACAD,OACAG,KANS,SAACoK,GAAD,OA9BV,SACHD,EACAU,EACAC,EACAF,EACAR,GAEAS,GAAW,GACXhF,EAAekF,KAAKZ,EAAUC,GACzBK,MAAK,SAACC,GACH,IAAMjC,EAAwBiC,EAAS7K,KACvCgL,GAAW,GACXC,EAAQrC,GACJA,GAAU,UAAWA,GAAUA,EAAO1I,OACtC6K,EAASnC,MAGhBuC,OAAM,SAACjL,GACJ,QAAyBK,IAApBL,EAA+B,CAAC,IAAD,EAC1BkL,EAAe,CAAElL,OAAO,EAAM0E,QAAO,iBAAG1E,QAAH,IAAGA,OAAH,EAAGA,EAAiB0E,eAApB,QAA+B,iBAC1EmG,EAASK,GACTJ,GAAW,OASIK,CAAef,EAAUU,EAAYC,EAASF,EAAUR,K,4CC/BjFlE,EAAYrD,YAAW,CACzBsI,QAAS,CACLC,QAAS,QAEbrL,MAAO,CACHsL,gBAAiB,UACjB7I,MAAO,WAEX8I,QAAS,CACLD,gBAAiB,UACjB7I,MAAO,aAIT+I,EAAmB,SAAChM,EAAuCqD,GAC7D,OAAQA,GACJ,IAAK,QACD,OAAOrD,EAAQQ,MACnB,IAAK,UACD,OAAOR,EAAQ+L,UAIdE,EAAuC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAU7J,EAAsB,EAAtBA,UAAWgB,EAAW,EAAXA,KAClErD,EAAU2G,IAChB,OAAO,cAACwF,EAAA,EAAD,CAAO9J,UAAW+J,YAAKpM,EAAQ4L,QAASI,EAAiBhM,EAASqD,GAAOhB,GAAzE,SAAsF6J,M,iCCrCjG,+DAGaG,EAAqC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAd,OAC9C,cAAC,IAAD,CAAU9B,MAAO,CAAEnB,QAASiD,EAAQ,GAAK,IAAMD,GAA/C,SACI,cAAC,IAAD,CAAWE,QAAS,Q,iCCL5B,kGAIMC,EAAmC,CACrC,CAAEtJ,GAAI,WAAYuJ,SAAS,GAC3B,CAAEvJ,GAAI,WAAYuJ,SAAS,GAC3B,CAAEvJ,GAAI,WAAYuJ,SAAS,GAC3B,CAAEvJ,GAAI,WAAYuJ,SAAS,IAG/B,SAASC,EAAqBC,EAAmBC,GAC7C,OAAO,SAACC,GACJD,EAAcC,EAAOF,IAItB,IAAMG,EAAoE,SAAC,GAQ3E,IAPHC,EAOE,EAPFA,YACAH,EAME,EANFA,cACAI,EAKE,EALFA,iBACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,SACAnH,EACE,EADFA,KAEMjG,EAAwBqN,8BAC9B,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAWxB,QAAQ,WAAnB,SACI,cAAC,IAAD,CACIyB,cAAeN,EAAc,GAAKA,EAAcI,EAChDG,QAASH,EAAW,GAAKJ,IAAgBI,EACzCI,SAAUP,EACV9F,WAAY,CAAE,aAAclB,EAAKG,cAAc,CAAEjD,GAAI,qCAG5DsJ,EAAUnL,KAAI,SAACmM,GAAD,OACX,cAAC,IAAD,CAA6BC,MAAM,OAAO7B,QAAQ,OAAO8B,cAAeR,IAAYM,EAAStK,IAAK+J,EAAlG,SACI,eAAC,IAAD,CACIU,OAAQT,IAAYM,EAAStK,GAC7B0K,UAAWV,IAAYM,EAAStK,GAAK+J,EAAQ,MAC7ChK,QAASyJ,EAA6Bc,EAAStK,GAAI0J,GAHvD,UAIK5G,EAAKG,cAAc,CAAEjD,GAAG,iBAAD,OAAmBsK,EAAStK,MACnDgK,IAAYM,EAAStK,GAClB,sBAAMd,UAAWrC,EAAQ8N,eAAzB,SACe,SAAVZ,EAAmB,oBAAsB,qBAE9C,SAVIO,EAAStK,c,iCCxC7C,oIAEakK,EAAoB/J,aAAW,kBACxCC,YAAa,CACTuK,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACN1E,OAAQ,EACR7D,QAAS,EACTwI,SAAU,SACVpC,QAAS,EACTqC,SAAU,WACVC,IAAK,GACL5E,MAAO,QAKN6E,EAAuB9K,aAAW,SAACkC,GAAD,OAC3CjC,YAAa,CACTQ,KAAM,CACFwF,MAAO,OACP8E,UAAW,OACXC,UAAW,UAEfC,MAAO,CACHhF,MAAO,OACPiF,aAAchJ,EAAME,QAAQ,IAEhC+I,MAAO,CACHC,SAAU,aAKTC,EAAmBrL,aAAW,SAACkC,GAAD,OACvCjC,YAAa,CACTQ,KAAM,CACF6K,YAAapJ,EAAME,QAAQ,GAC3BmJ,aAAcrJ,EAAME,QAAQ,IAEhCoJ,UAC2B,UAAvBtJ,EAAMuJ,QAAQ1L,KACR,CACIJ,MAAOuC,EAAMuJ,QAAQC,UAAUC,KAC/BnD,gBAAiBoD,YAAQ1J,EAAMuJ,QAAQC,UAAUG,MAAO,MAE5D,CACIlM,MAAOuC,EAAMuJ,QAAQK,KAAKC,QAC1BvD,gBAAiBtG,EAAMuJ,QAAQC,UAAUM,MAEvDC,MAAO,CACHC,KAAM,kB,oKCxCLC,EAAmE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzE1P,EAAwB2O,6BACxB3B,EAAc0C,EAASzN,OAE7B,OACI,eAAC,IAAD,CACII,UAAW+J,YAAKpM,EAAQ+D,KAAT,eACV/D,EAAQ8O,UAAY9B,EAAc,IAF3C,UAIKA,EAAc,EACX,cAAC,IAAD,CAAY3K,UAAWrC,EAAQuP,MAAOtM,MAAM,UAAUD,QAAQ,YAAY8E,UAAU,MAApF,SACI,cAAC,IAAD,CAAkB3E,GAAG,yBAAyB9B,OAAQ,CAAE2L,mBAG5D,cAAC,IAAD,CAAY3K,UAAWrC,EAAQuP,MAAOvM,QAAQ,KAAKG,GAAG,aAAa2E,UAAU,MAA7E,SACI,cAAC,IAAD,CAAkB3E,GAAG,0BAG5B6J,EAAc,GACX,cAAC,IAAD,CAASuC,MAAM,SAAf,SACI,cAAC,IAAD,CACII,aAAW,SACXzM,QAAS,WACLiB,MAAM,oDAAD,OAAqDuL,EAASE,OAA9D,OAHb,SAKI,cAAC,IAAD,a,iCCrCxB,+CAgBO,SAASC,EACZC,EACAC,EACAC,EACAC,EACApM,EACAqM,EACAC,GAGA,MAAO,CAAEL,SAAQC,WAAUC,WAAUnM,WAAUuM,SAD9BC,WAASC,QAAQL,GACuBC,OAAMC,c,sGCtBtDI,EAAqB,SAACC,GAC/B,MAAsClM,mBAAS,GAA/C,mBAAOmM,EAAP,KAAoBC,EAApB,KACA,EAAwBpM,mBAAS,GAAjC,mBAAOqM,EAAP,KAAaC,EAAb,KACMC,EAAmB,SAACvL,EAAiBwL,GACvCF,EAAQE,IAGNC,EAA0B,SAACjE,GAC7B4D,EAAeM,SAASlE,EAAMmE,OAAOC,MAAO,KAC5CN,EAAQ,IAcZ,MAAO,CACHtE,UAAWmE,EAAcU,KAAKC,IAAIX,EAAaD,EAAQG,EAAOF,GAC9DY,WAAYV,EAAOF,EACnBa,SAAUX,EAAOF,EAAcA,EAC/Bc,gBAfuC,kBACvC,cAAC,IAAD,CACIC,mBAAoB,CAAC,EAAG,GAAI,IAC5B1J,UAAU,MACV0I,MAAOA,EACPC,YAAaA,EACbE,KAAMA,EACNc,aAAcZ,EACda,oBAAqBX,Q,iCClBjC,SAASY,EAAwBC,EAAMrJ,EAAM4E,GACzC,OAAI5E,EAAE4E,GAAWyE,EAAEzE,IACP,EAER5E,EAAE4E,GAAWyE,EAAEzE,GACR,EAEJ,EAIJ,SAAS0E,EACZ3E,EACAC,GAEA,MAAiB,SAAVD,EACD,SAAC0E,EAAGrJ,GAAJ,OAAkBoJ,EAAqBC,EAAGrJ,EAAG4E,IAC7C,SAACyE,EAAGrJ,GAAJ,OAAmBoJ,EAAqBC,EAAGrJ,EAAG4E,IAGjD,SAAS2E,EAAcC,EAAYC,GACtC,IAAMC,EAAiBF,EAAMzQ,KAAI,SAAC4Q,EAAIpN,GAAL,MAAe,CAACoN,EAAIpN,MAMrD,OALAmN,EAAeE,MAAK,SAACP,EAAGrJ,GACpB,IAAM2E,EAAQ8E,EAAWJ,EAAE,GAAIrJ,EAAE,IACjC,OAAc,IAAV2E,EAAoBA,EACjB0E,EAAE,GAAKrJ,EAAE,MAEb0J,EAAe3Q,KAAI,SAAC4Q,GAAD,OAAQA,EAAG,MAjCzC,qE,sPCiBaE,EAA2C,SAAC,GAA0B,IAAxBtC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACzD9J,EAAOC,cAOb,OACI,cAACmM,EAAA,EAAD,CACInP,QARa,WACjB,IAAM0O,EAAIU,SAASC,cAAc,KACjCX,EAAEY,KAAF,UAAYnM,IAAZ,sDAA6DyJ,GAC7D8B,EAAEa,aAAa,WAAY1C,GAC3B6B,EAAEc,SAKE/C,aAAY1J,EAAKG,cAAc,CAC3BjD,GAAI,4BAHZ,SAKI,cAAC,IAAD,O,SC1BCwP,EAA0D,SAACC,GACpE,IAAQ9C,EAAqB8C,EAArB9C,OAAQC,EAAa6C,EAAb7C,SAChB,ECoB2B,SAAC9L,GAAoC,IAAD,EACzDgC,EAAOC,cACL4J,EAAW7L,EAAX6L,OACR,EAAkCzP,YAAO,wCAAuEyP,IAAxGxP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWE,EAAzB,EAAyBA,KACnBoS,EAAa,WACfpS,IACA2B,eAaJ,MAAO,CAAE0Q,QAAO,iBAAExS,QAAF,IAAEA,OAAF,EAAEA,EAAME,aAAR,SAAwBuS,aAXA,kBACpC,cAACV,EAAA,EAAD,CACInP,QAAS2P,EACTG,SAAUzS,EACVoP,aAAY1J,EAAKG,cAAc,CAC3BjD,GAAI,0BAJZ,SAMI,cAAC,IAAD,QDnC0B8P,CAAgB,CAAEnD,WAA5CgD,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aACjB,OACI,eAACG,EAAA,EAAD,YACMJ,GAAW,cAACC,EAAD,IACb,cAAC,EAAD,CAAgBjD,OAAQA,EAAQC,SAAUA,Q,4CEGtD,SAASoD,EAAYC,GAAsC,IAAvBC,EAAsB,uDAAX,EAC3C,GAAc,IAAVD,EAAa,MAAO,UACxB,IAAME,EAAI,KACJC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5D/K,EAAI0I,KAAKsC,MAAMtC,KAAKuC,IAAIN,GAASjC,KAAKuC,IAAIJ,IAEhD,MAAM,GAAN,OAAUK,YAAYP,EAAQjC,KAAKyC,IAAIN,EAAG7K,IAAIoL,QAAQN,IAAtD,YAA8DC,EAAM/K,IAQjE,IAAMqL,EAA2D,SAAC,GAAD,IALlDC,EAKqDC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,IAAzC,OACpE,eAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,eAAcN,EAAgBO,UAAW,EAAoB9E,SAAUuE,EAAvG,UACI,cAACQ,EAAA,EAAD,CAAW5I,QAAQ,WAAW3I,QAAS,SAAC4J,GAAD,OAAWkH,EAAYlH,EAAOqH,EAAIrE,SAAzE,SACI,cAAC4E,EAAA,EAAD,CAAUnH,QAAS0G,EAAgB9M,WAAY,CAAE,kBAAmB+M,OAExE,cAACO,EAAA,EAAD,CAAW/G,MAAM,OAAO7B,QAAQ,OAAhC,SACKsI,EAAIpE,WAET,cAAC0E,EAAA,EAAD,CAAW/G,MAAM,OAAO7B,QAAQ,OAAhC,SACKsH,EAAYgB,EAAInE,YAErB,cAACyE,EAAA,EAAD,CAAW/G,MAAM,OAAO7B,QAAQ,OAAhC,SACKsI,EAAItQ,WAET,cAAC4Q,EAAA,EAAD,CAAW/G,MAAM,OAAO7B,QAAQ,OAAhC,UAnBckI,EAoBII,EAAI/D,SAnBnB2D,EAAGY,eAAetE,WAASuE,kBAqB9B,cAACH,EAAA,EAAD,CAAW/G,MAAM,OAAO7B,QAAQ,OAAhC,SACI,cAAC,EAAD,eAA+BsI,QAjB0CA,EAAIrE,SCX5EhM,EAA0E,SAAC,GAAc,IAAZxD,EAAW,EAAXA,KAEhFN,EAAwBoO,iCACxBnI,EAAOC,cAGb,EAA0B5B,mBAAgB,OAA1C,mBAAO4I,EAAP,KAAc2H,EAAd,KAEA,EAA8BvQ,mBAA0B,YAAxD,mBAAO6I,EAAP,KAAgB2H,EAAhB,KACA,EAAgCxQ,mBAAmB,IAAnD,mBAAOoL,EAAP,KAAiBqF,EAAjB,KACA,EAA0BzQ,oBAAS,GAAnC,mBAAOiI,EAAP,KAAcyI,EAAd,KAIMC,EACF,UAAW3U,EACL,GACAA,EAAKgB,KAAI,SAAC4T,GACN,OAAOrF,qBAAWqF,EAAGpF,OAAQoF,EAAGnF,SAAUmF,EAAGlF,SAAUkF,EAAG9E,SAAU8E,EAAGrR,SAAUqR,EAAGhF,KAAMgF,EAAG/E,aAkBrG6D,EAAc,SAAC1O,EAA6BnC,GAE9C,IAAMgS,EAAgBzF,EAAS0F,QAAQjS,GACnCkS,EAAwB,IAEL,IAAnBF,EACAE,EAAcA,EAAYxS,OAAO6M,EAAUvM,GAClB,IAAlBgS,EACPE,EAAcA,EAAYxS,OAAO6M,EAAS4F,MAAM,IACzCH,IAAkBzF,EAASzN,OAAS,EAC3CoT,EAAcA,EAAYxS,OAAO6M,EAAS4F,MAAM,GAAI,IAC7CH,EAAgB,IACvBE,EAAcA,EAAYxS,OAAO6M,EAAS4F,MAAM,EAAGH,GAAgBzF,EAAS4F,MAAMH,EAAgB,KAGtGJ,EAAYM,IAShB,EAA6D9E,6BAAmB0E,EAAKhT,QAA7EqK,EAAR,EAAQA,UAAW+E,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAAUC,EAAzC,EAAyCA,gBAEzC,OACI,sBAAKlP,UAAWrC,EAAQ+D,KAAxB,UACI,eAACoI,EAAA,EAAD,CAAO9J,UAAWrC,EAAQuO,MAA1B,UACI,cAAC,sBAAD,CAAqBmB,SAAUA,IAC/B,cAAC6F,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACInT,UAAWrC,EAAQyO,MACnBgH,kBAAgB,aAChB3O,KAAMyF,EAAQ,QAAU,SACxBoD,aAAY1J,EAAKG,cAAc,CAC3BjD,GAAI,wBALZ,UAOI,cAAC,mBAAD,CACI6J,YAAa0C,EAASzN,OACtBgL,iBAjDK,SAACH,GAC1B,GAAIA,EAAMmE,OAAO1D,QAAjB,CACI,IAAM8H,EAAcJ,EAAK3T,KAAI,SAACoU,GAAD,OAAOA,EAAE5F,UACtCiF,EAAYM,QAGhBN,EAAY,KA4CQlI,cAxDE,SAACvH,EAA6BsH,GAEpDiI,EADc1H,IAAYP,GAAsB,QAAVM,EACrB,OAAS,OAC1B4H,EAAWlI,IAsDSM,MAAOA,EACPC,QAASA,EACTC,SAAU6H,EAAKhT,OACfgE,KAAMA,IAEV,eAAC0P,EAAA,EAAD,WACK7D,qBAAWmD,EAAMpD,wBAAc3E,EAAOC,IAClCmI,MAAMjE,EAAYC,GAClBhQ,KAAI,SAAC6S,EAAgBrP,GAAjB,OACD,cAAC,EAAD,CACIqP,IAAKA,EACLD,QAAO,kBAAapP,GACpBmP,gBAhChB9Q,EAgC2CgR,EAAIrE,QAhCN,IAA1BJ,EAAS0F,QAAQjS,IAiChB6Q,YAAaA,GACRG,EAAIrE,QAlC1B,IAAC3M,KAqCKmJ,EAAY,GAAK,cAAC,WAAD,CAAUA,UAAWA,EAAWC,MAAOA,YAIrE,cAACgF,EAAD,OAEJ,cAACqE,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAQvI,QAAShB,EAAOiB,SAhDnB,SAACV,GACvBkI,EAASlI,EAAMmE,OAAO1D,YAgDd9F,MAAOxB,EAAKG,cAAc,CAAEjD,GAAI,uC,wuFC3HhD,gpB,wGCMa4S,EAA8B,WAEvC,IAAM/V,EAAwBgW,IAC9B,OACI,cAAC,IAAD,UACI,qBAAK3T,UAAWrC,EAAQiW,oBAAxB,SACI,cAAC,EAAD,S,kBCPHC,EAA0B,WACnC,IAAMlW,EAAwBmW,IAC9B,OACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAC3Q,QAAS,EAAGmI,UAAU,MAAMyI,WAAW,SAASC,QAAQ,SAASlU,UAAWrC,EAAQwW,SAApG,SACI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,EAAf,SACI,eAACxD,EAAA,EAAD,CACIyD,YAAY,WACZ1T,MAAM,UACND,QAAQ,YACRwE,WAAS,EACTmI,aAAW,qCACXtN,UAAWrC,EAAQ4W,YANvB,UAOI,cAAC,EAAD,IACA,cAAC,EAAD,Y,kBClBL,MAA0B,kCCG5BT,EAAgB7S,aACzB,kBACIC,YAAa,CACTiT,SAAU,CACNK,UAAW,SAEfD,YAAa,CACTlI,SAAU,YAKbsH,EAAqB1S,aAC9B,kBACIC,YAAa,CACT0S,oBAAqB,CACjBa,gBAAgB,OAAD,OAASA,EAAT,KACfC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClB1N,MAAO,QACPD,OAAQ,c,0BCnBX4N,EAAkC,SAACjT,GAC5C,IAAMkT,EAAUC,cAIhB,OACI,eAACrU,EAAA,EAAD,yBAAQG,QAJW,WACnBiU,EAAQvV,KAAK,aAGwBqC,GAArC,cACK,IACD,cAAC,IAAD,CAAkBd,GAAG,+BCRpBkU,EAAiC,SAACpT,GAC3C,IAAMkT,EAAUC,cAIhB,OACI,cAACrU,EAAA,EAAD,yBAAQG,QAJU,WAClBiU,EAAQvV,KAAK,YAGuBqC,GAApC,aACI,cAAC,IAAD,CAAkBd,GAAG,6B,uDCOpBmU,EAA2B,WAAO,IAAD,EACpCtX,EAAwBuX,IACxBtR,EAAOC,cACPiR,EAAUC,cACVI,ECdH,SAA6BvR,GAChC,OAAOwR,IACK,CACJC,MAAOD,MAEFC,MAAMzR,EAAKG,cAAc,CAAEjD,GAAI,+BAC/BoE,SAAStB,EAAKG,cAAc,CAAEjD,GAAI,kCACvCwU,SAAUF,MAAalQ,SAAStB,EAAKG,cAAc,CAAEjD,GAAI,qCACzDyU,SAAUH,QAEbI,UDIoBC,CAAoB7R,GAEvCjF,EAASC,YAAU,CACrBC,cAAesW,EAAiBO,KAAK,CACjCL,MAAO,GACPC,SAAU,GACVC,UAAU,IAEdJ,mBACApW,SAAU,SAACC,GACPZ,EAAKY,MAGb,EAAkChB,YAAoC,yBAA9DC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWE,EAAzB,EAAyBA,UAEZI,IAATP,IACkBA,EAAVE,OAEJ2W,EAAQvV,KAAK,aAIrB,OAAIrB,EACO,cAAC,EAAD,IAKP,sBAAK8B,UAAWrC,EAAQuO,MAAxB,UACI,cAAC,EAAD,IACA,uBAAMlM,UAAWrC,EAAQsC,KAAMlB,SAAUJ,EAAOuB,aAAcC,YAAU,EAAxE,UACI,cAAC,IAAD,CACIW,GAAG,QACH+D,kBAAkB,uBAClBxF,KAAK,QACL2B,KAAK,QACL4D,iBAAiB,QACjBI,WAAYrG,EAAOgX,QAAQN,OAAS1W,EAAOiX,OAAOP,MAClDvQ,WAAY,CACR+J,MAAOlQ,EAAOK,OAAOqW,MACrBlK,SAAUxM,EAAOkX,aACjB1X,MAAOQ,EAAOgX,QAAQN,OAASS,QAAQnX,EAAOiX,OAAOP,UAG7D,cAAC,IAAD,CACIhW,KAAK,WACLwF,kBAAkB,0BAClB7D,KAAK,WACLF,GAAG,WACH8D,iBAAiB,WACjBI,WAAYrG,EAAOgX,QAAQL,UAAY3W,EAAOiX,OAAON,SACrDxQ,WAAY,CACR+J,MAAOlQ,EAAOK,OAAOsW,SACrBnK,SAAUxM,EAAOkX,aACjB1X,MAAOQ,EAAOgX,QAAQL,UAAYQ,QAAQnX,EAAOiX,OAAON,aAGhE,cAAC/B,EAAA,EAAD,CACIC,QAAS,cAACnB,EAAA,EAAD,CAAUxD,MAAOlQ,EAAOK,OAAOuW,SAAU3U,MAAM,UAAUuK,SAAUxM,EAAOkX,eACnFxW,KAAK,WACL+F,MAAOxB,EAAKG,cAAc,CAAEjD,GAAI,gCAEpC,cAAC,EAAD,IACA,eAACiT,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,WAAxB,UACI,cAACH,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,EAAb,SACI,cAAC,IAAD,CAAM9O,GAAG,kBAAkBC,UAAW,CAAE7E,QAAS,SAAWkE,kBAAkB,oCAElF,cAACkP,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAAC,IAAD,CAAM7O,GAAG,UAAUC,UAAW,CAAE7E,QAAS,SAAWkE,kBAAkB,sCAG9E,cAACkP,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,aAAxB,SACI,cAAC,EAAD,CAAcrR,QAAO,iBAAE5E,QAAF,IAAEA,OAAF,EAAEA,EAAM4E,eAAR,QAAmB,cE7F/CqS,EAAiBjU,aAC1B,SAACkC,GAAD,OACIjC,YAAa,CACTgL,MAAO,CACH6J,UAAW5S,EAAME,QAAQ,GACzBjC,QAAS,OACT4U,cAAe,SACf/B,WAAY,UAEhBhU,KAAM,CACFiH,MAAO,OACP6O,UAAW5S,EAAME,QAAQ,SAK5B4S,EAAwBhV,aACjC,SAACkC,GAAD,OACIjC,YAAa,CACTgV,SAAU,CACNC,OAAQhT,EAAMgT,OAAOC,OAAS,EAC9BxV,MAAO,aAIVyV,EAAuBpV,aAChC,SAACkC,GAAD,OACIjC,YAAa,CACToV,OAAQ,CACJlT,OAAQD,EAAME,QAAQ,GACtBoG,gBAAiBtG,EAAMuJ,QAAQC,UAAUC,WAK5C2J,EAAuBtV,aAChC,SAACkC,GAAD,OACIjC,YAAa,CACTsV,OAAQ,CACJpT,OAAQD,EAAME,QAAQ,EAAG,EAAG,S,oCClC/BoT,EAAiC,WAC1C,IAAM9Y,EAAwB0Y,IAC9B,OACI,qCACI,cAACK,EAAA,EAAD,CAAQ1W,UAAWrC,EAAQ2Y,OAA3B,SACI,cAAC,IAAD,MAEJ,cAACK,EAAA,EAAD,CAAYlR,UAAU,KAAK9E,QAAQ,KAAnC,SACI,cAAC,IAAD,CAAkBG,GAAG,+BCLxB8V,EAAyC,SAAC,GAAiB,IAAf/T,EAAc,EAAdA,QACrD,OAAO,oCAAOA,EAAP,Q,SCLEgU,EAAyC,WAClD,IAAMlZ,EAAwBsY,IAC9B,OACI,cAACa,EAAA,EAAD,CAAU9W,UAAWrC,EAAQuY,SAAUnU,MAAM,EAA7C,SACI,cAAC,IAAD,OCJChB,EAAkC,WAC3C,IAAMpD,EAAwB4Y,IAC9B,OACI,cAAC7V,EAAA,EAAD,CAAQM,KAAK,SAASmE,WAAS,EAACxE,QAAQ,YAAYC,MAAM,UAAUZ,UAAWrC,EAAQ6Y,OAAvF,SACI,cAAC,IAAD,CAAkB1V,GAAG,4B,SCJpBiW,EAA+B,kBACxC,cAAC,IAAD,UACI,cAACC,EAAA,EAAD,CAAWvR,UAAU,OAAOwR,SAAS,KAArC,SACI,cAAC,EAAD,SCEL,IAAMC,EAA4B,WACrC,IAAMvZ,EAAwBwZ,IACxBvT,EAAOC,cACPiR,EAAUC,cACVI,ECJH,SAA6BvR,GAChC,OAAOwR,IACK,CACJC,MAAOD,MAEFC,MAAMzR,EAAKG,cAAc,CAAEjD,GAAI,+BAC/BoE,SAAStB,EAAKG,cAAc,CAAEjD,GAAI,kCACvCwU,SAAUF,MAELrG,IAAI,EAAGnL,EAAKG,cAAc,CAAEjD,GAAI,kCAChCoE,SAAStB,EAAKG,cAAc,CAAEjD,GAAI,qCACvCsW,gBAAiBhC,MAEZiC,MAAM,CAACjC,IAAQ,YAAa,MAAOxR,EAAKG,cAAc,CAAEjD,GAAI,yCAC5DoE,SAAStB,EAAKG,cAAc,CAAEjD,GAAI,4CACvCwW,UAAWlC,MAAalQ,SAAStB,EAAKG,cAAc,CAAEjD,GAAI,sCAC1DyW,SAAUnC,MAAalQ,SAAStB,EAAKG,cAAc,CAAEjD,GAAI,uCAE5D0U,UDdoBC,CAAoB7R,GACvCjF,EAASC,YAAU,CACrBC,cAAesW,EAAiBO,KAAK,CACjCL,MAAO,GACPC,SAAU,GACV8B,gBAAiB,GACjBE,UAAW,GACXC,SAAU,KAEdpC,iBAAkBA,EAClBpW,SAAU,SAACC,GACHd,GAAaS,EAAO6Y,cACxBpZ,EAAKY,MAIb,EAAyChB,YAAqC,4BAAtEC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,KACxBC,EAAkBC,YAAkC,CACxDC,iBAAkBkZ,EAClBjU,eAAgB8E,IAChBrK,OACAC,YACAC,UALIE,mBAQKG,IAATP,IACeA,EAAP6C,GACC,GACLgU,EAAQvV,KAAK,UAKrB,OACI,sBAAKS,UAAWrC,EAAQuO,MAAxB,UACI,cAAC,EAAD,IACA,uBAAMlM,UAAWrC,EAAQsC,KAAMlB,SAAUJ,EAAOuB,aAAcC,YAAU,EAAxE,UACI,eAAC4T,EAAA,EAAD,CAAMC,WAAS,EAAC3Q,QAAS,EAAzB,UACI,cAAC0Q,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIqD,GAAI,EAAvB,SACI,cAAC,IAAD,CACI9S,iBAAiB,YACjBvF,KAAK,YACLyB,GAAG,YACH+D,kBAAkB,2BAClBE,WAAS,EACTC,WAAYrG,EAAOgX,QAAQ2B,WAAa3Y,EAAOiX,OAAO0B,UACtDxS,WAAY,CACR+J,MAAOlQ,EAAOK,OAAOsY,UACrBnM,SAAUxM,EAAOkX,aACjB1X,MAAOQ,EAAOgX,QAAQ2B,WAAaxB,QAAQnX,EAAOiX,OAAO0B,gBAIrE,cAACvD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIqD,GAAI,EAAvB,SACI,cAAC,IAAD,CACI5W,GAAG,WACH+D,kBAAkB,0BAClBxF,KAAK,WACLuF,iBAAiB,QACjBI,WAAYrG,EAAOgX,QAAQ4B,UAAY5Y,EAAOiX,OAAO2B,SACrDzS,WAAY,CACR+J,MAAOlQ,EAAOK,OAAOuY,SACrBpM,SAAUxM,EAAOkX,aACjB1X,MAAOQ,EAAOgX,QAAQ4B,UAAYzB,QAAQnX,EAAOiX,OAAO2B,eAIpE,cAACxD,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACIvT,GAAG,QACH+D,kBAAkB,uBAClBxF,KAAK,QACL2B,KAAK,QACL4D,iBAAiB,QACjBI,WAAYrG,EAAOgX,QAAQN,OAAS1W,EAAOiX,OAAOP,MAClDvQ,WAAY,CACR+J,MAAOlQ,EAAOK,OAAOqW,MACrBlK,SAAUxM,EAAOkX,aACjB1X,MAAOQ,EAAOgX,QAAQN,OAASS,QAAQnX,EAAOiX,OAAOP,YAIjE,cAACtB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACIhV,KAAK,WACLwF,kBAAkB,0BAClB7D,KAAK,WACLF,GAAG,WACH8D,iBAAiB,WACjBI,WAAYrG,EAAOgX,QAAQL,UAAY3W,EAAOiX,OAAON,SACrDxQ,WAAY,CACR+J,MAAOlQ,EAAOK,OAAOsW,SACrBnK,SAAUxM,EAAOkX,aACjB1X,MAAOQ,EAAOgX,QAAQL,UAAYQ,QAAQnX,EAAOiX,OAAON,eAIpE,cAACvB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACIhV,KAAK,kBACLwF,kBAAkB,iCAClB7D,KAAK,WACLF,GAAG,kBACH8D,iBAAiB,kBACjBI,WAAYrG,EAAOgX,QAAQyB,iBAAmBzY,EAAOiX,OAAOwB,gBAC5DtS,WAAY,CACR+J,MAAOlQ,EAAOK,OAAOoY,gBACrBjM,SAAUxM,EAAOkX,aACjB1X,MAAOQ,EAAOgX,QAAQyB,iBAAmBtB,QAAQnX,EAAOiX,OAAOwB,yBAK/E,cAAC,EAAD,IACA,cAACrD,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,WAAxB,SACI,cAACH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAAC,IAAD,CAAM7O,GAAG,SAASC,UAAW,CAAE7E,QAAS,SAAWkE,kBAAkB,yCAG7E,cAACkP,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,aAAxB,SACI,cAAC7V,EAAD,aErIP8Y,EAAkBlW,aAC3B,SAACkC,GAAD,OACIjC,YAAa,CACTgL,MAAO,CACH6J,UAAW5S,EAAME,QAAQ,GACzBjC,QAAS,OACT4U,cAAe,SACf/B,WAAY,UAEhBhU,KAAM,CACFiH,MAAO,OACP6O,UAAW5S,EAAME,QAAQ,SAK5BsU,EAAwB1W,aACjC,SAACkC,GAAD,OACIjC,YAAa,CACToV,OAAQ,CACJlT,OAAQD,EAAME,QAAQ,GACtBoG,gBAAiBtG,EAAMuJ,QAAQC,UAAUC,WAK5CgL,EAAwB3W,aACjC,SAACkC,GAAD,OACIjC,YAAa,CACTsV,OAAQ,CACJpT,OAAQD,EAAME,QAAQ,EAAG,EAAG,SCzB/BwU,EAAkC,WAC3C,IAAMla,EAAwBga,IAC9B,OACI,qCACI,cAACjB,EAAA,EAAD,CAAQ1W,UAAWrC,EAAQ2Y,OAA3B,SACI,cAAC,IAAD,MAEJ,cAACK,EAAA,EAAD,CAAYlR,UAAU,KAAK9E,QAAQ,KAAnC,SACI,cAAC,IAAD,CAAkBG,GAAG,gCCNxB2W,EAAiD,SAAC,GAAc,IAAZxZ,EAAW,EAAXA,KAC7D,QAAaO,IAATP,EAAoB,CACpB,GAAI,OAAQA,QAAoBO,IAAZP,EAAK6C,GACrB,OAAO,cAAC,IAAD,CAAkBA,GAAG,iCACzB,GAAI,YAAa7C,QAAyBO,IAAjBP,EAAK4E,QACjC,OAAO,oCAAO5E,EAAK4E,QAAZ,OAGf,OAAO,yBCXE9B,EAAkC,WAC3C,IAAMpD,EAAwBia,IAC9B,OACI,cAAClX,EAAA,EAAD,CAAQM,KAAK,SAASmE,WAAS,EAACxE,QAAQ,YAAYC,MAAM,UAAUZ,UAAWrC,EAAQ6Y,OAAvF,SACI,cAAC,IAAD,CAAkB1V,GAAG,6BCJpBgX,EAAgC,kBACzC,cAAC,IAAD,UACI,cAACd,EAAA,EAAD,CAAWvR,UAAU,OAAOwR,SAAS,KAArC,SACI,cAAC,EAAD,S,0DCINc,GAAYC,YAAe,CAC7BtL,QAAS,CACLM,QAAS,CACLJ,KAAMqL,KAAK,MAEftL,UAAW,CACPC,KAAMsL,KAAM,MAEhBlX,KAAM,UAIDmX,GAAyB,kBAClC,eAACC,GAAA,EAAD,CAAejV,MAAO4U,GAAtB,UACI,cAACM,GAAA,EAAD,IACA,cAAC,IAAD,CAAYC,SAAS,UAArB,SACI,eAAC,IAAD,WAMI,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,SAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,UAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,UACI,cAAC,IAAD,e,iDCtCdE,GAAYC,UAAUC,WAAaD,UAAUC,UAAU,IAAOD,UAAUD,SAExE5V,GAAU+V,GAEVC,GAAgC,kBAClC,cAAC,aAAD,UACI,cAAC,KAAD,CAAcC,OAAQL,GAAUM,SAAUlW,GAA1C,SACI,cAAC,GAAD,SAMZmW,KAASC,OAAO,cAAC,GAAD,IAAgBhJ,SAASiJ,eAAe,U,gICjBlDC,EAAsD,SAAC,GAAD,IAAGhb,EAAH,EAAGA,MAAH,OACxD,eAAC,IAAD,CAAY6C,KAAK,QAAjB,UACI,sCADJ,oDACiE,4BAAI7C,EAAM0E,UACvE,uBACA,uBAHJ,mFAQEuW,EAAiB,SAACC,EAAeC,GACnCC,QAAQpb,MAAR,yBAAgCmb,EAAKE,kBAG5BC,EAAmC,SAAC,GAAD,IAAG5P,EAAH,EAAGA,SAAH,OAC5C,cAAC,gBAAD,CAAesP,kBAAmBA,EAAmBO,QAASN,EAA9D,SACKvP,K,kBCfI8P,EAA8B,kBACvC,cAAC,EAAD,UACI,eAAC,IAAD,CAAY3Y,KAAK,QAAjB,UACI,cAAC2V,EAAA,EAAD,CAAYhW,QAAQ,KAApB,SACI,cAAC,IAAD,CAAkBG,GAAG,yBAEzB,cAAC6V,EAAA,EAAD,CAAYhW,QAAQ,KAApB,SACI,cAAC,IAAD,CAAkBG,GAAG,wBAEzB,cAAC6V,EAAA,EAAD,CAAYhW,QAAQ,QAApB,SACI,cAAC,IAAD,CAAkBG,GAAG,kC","file":"static/js/main.09d35834.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\nimport { useGalleryButtonStyle, SubmitButton, ResetButton } from '.';\nimport { Dropzone, useAjax, useAjaxComponent } from '../../common';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { updateTable, useGallerySnackbar, GalleryExpectedFileInfo, OperationInfo } from '../gallery';\n\nexport type UploadReturnType = Record<string, OperationInfo>;\n\nexport type FormValues = {\n    files: File[];\n};\n\nexport const GalleryControlButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useGalleryButtonStyle();\n    const { GallerySnackbar, setOpen } = useGallerySnackbar();\n    const { data, isLoading, error, ajax } = useAjax<UploadReturnType, FormData>('/FileManagement/upload');\n    const { AjaxComponent } = useAjaxComponent<GalleryExpectedFileInfo>({\n        SuccessComponent: GallerySnackbar,\n        data: data !== undefined ? Object.entries(data) : undefined,\n        isLoading,\n        error\n    });\n\n    const validateFiles = (values: FormValues): File[] => {\n        /* Quick validation here so we don't waste time getting an error in the back-end\n         * We have to make sure file name are unique\n         */\n        const files: File[] = [];\n        const map = new Map<string, boolean>();\n        for (const file of values.files) {\n            if (!map.has(file.name)) {\n                map.set(file.name, true); // set any value to Map\n                files.push(file);\n            }\n        }\n        return files;\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            files: []\n        },\n        onSubmit: (values: FormValues) => {\n            if (values.files === undefined) return;\n            const files = validateFiles(values);\n            const formData = new FormData();\n            for (let key = 0; key < files.length; key++) {\n                formData.append('images[]', files[key]);\n            }\n            if (files.length > 0) {\n                ajax(formData);\n                formik.resetForm();\n                setOpen(true);\n                updateTable();\n            }\n        }\n    });\n\n    const onDropHandler = (acceptedFiles: File[]) => {\n        // do nothing if no files\n        if (acceptedFiles.length === 0) {\n            return;\n        }\n        const formikValues = formik.values.files as File[];\n        // on drop we add to the existing files\n        void formik.setFieldValue('files', formikValues === undefined ? acceptedFiles : (acceptedFiles ?? []).concat(formikValues));\n    };\n    return (\n        <>\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                {!isLoading && (\n                    <>\n                        <Dropzone onDropHandler={onDropHandler} files={formik.values.files ?? []} />\n                        <SubmitButton />\n                        <ResetButton resetForm={formik.resetForm} />\n                    </>\n                )}\n                <AjaxComponent />\n            </form>\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@material-ui/core';\n\nexport type ResetButtonProps = {\n    resetForm: () => void;\n};\nexport const ResetButton: FunctionComponent<ResetButtonProps> = ({ resetForm }) => (\n    <Button variant='contained' color='primary' onClick={resetForm}>\n        <FormattedMessage id='FileManagement.clear' />\n    </Button>\n);\n","import { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '@material-ui/core';\n\nexport const SubmitButton: FunctionComponent = () => (\n    <Button variant='contained' type='submit' color='primary'>\n        <FormattedMessage id='FileManagement.upload' />\n    </Button>\n);\n","import { makeStyles, createStyles } from '@material-ui/core/styles';\n\n/* Style for the control button */\nexport const useGalleryButtonStyle = makeStyles(() =>\n    createStyles({\n        input: {\n            display: 'none'\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\nimport { useGalleryRootStyle } from '../gallery';\nimport { GalleryTable } from '../galleryTable';\nimport { GalleryControlButton } from '../galleryUpload';\nimport { useAjaxComponent, useSwrAjax } from '../../common';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\n/* Arguments that the API takes */\ntype FileApiArguments = {\n    filePath?: string;\n};\n\nexport type FileData = {\n    fileID: number;\n    memberID: number;\n    fileName: string;\n    fileSize: number;\n    uploaded: string;\n    filePath: string;\n    mime: string;\n    accessID: number;\n};\nexport type FileApiReturnData = Array<FileData>;\n\nexport const Gallery: FunctionComponent = () => {\n    const classes: ClassNameMap = useGalleryRootStyle();\n    /* Different folder will have different files */\n    const curFolder = '';\n\n    const { data, isLoading, error } = useSwrAjax<FileApiReturnData, FileApiArguments>('FileManagement/folderImages', {\n        filePath: curFolder\n    });\n    const { AjaxComponent } = useAjaxComponent<FileApiReturnData>({\n        SuccessComponent: GalleryTable,\n        data,\n        isLoading,\n        error\n    });\n    return (\n        <div className={classes.root}>\n            <AjaxComponent />\n            <GalleryControlButton />\n        </div>\n    );\n};\n","import { SyntheticEvent, useState, FunctionComponent, useEffect } from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { FetchComponentProps } from '../../common';\nimport { FormattedMessage } from 'react-intl';\n\nexport type OperationInfo = {\n    error: boolean;\n    message?: string;\n};\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\n/* The format of our end point with information about what files were uploaded*/\nexport type GalleryExpectedFileInfo = Array<[string, OperationInfo]>;\n\ninterface GallerySnackbarProps extends FetchComponentProps<GalleryExpectedFileInfo> {\n    handleClose: (_event?: SyntheticEvent, reason?: string) => void;\n    open: boolean;\n}\n\nexport type GalleryHookReturn = {\n    setOpen: (open: boolean) => void;\n    GallerySnackbar: FunctionComponent<FetchComponentProps<GalleryExpectedFileInfo>>;\n};\nexport const GallerySnackbar: FunctionComponent<GallerySnackbarProps> = ({ open, data, handleClose }) => {\n    /*NOTE: this should be used - might be better to just use a defaultFallback from FormattedMessage*/\n    const fallbackError = 'of an internal server error';\n    const [errorData, setErrorData] = useState<GalleryExpectedFileInfo>([]);\n    const [successCount, setSuccessCount] = useState(0);\n\n    /* Whenever our data gets changed we change our info */\n    useEffect(() => {\n        setErrorData(data.filter(([_filename, operationInfo]) => operationInfo.error));\n        setSuccessCount(data.filter(([_filename, operationInfo]) => !operationInfo.error).length);\n    }, [data]);\n\n    /* Don't react to empty requests. NOTE: it might make sense to use an info box to gently\n     * remind the user to upload files\n     */\n    if (data === undefined || data.length === 0) return <div />;\n\n    let alert: JSX.Element;\n\n    /* Shown if all our files are rejected */\n    if (successCount === 0) {\n        alert = (\n            <Alert severity='error'>\n                <FormattedMessage id='FileManagement.uploadedFailed' />{' '}\n            </Alert>\n        );\n    } else if (successCount === data.length) {\n        /* Show if all our files are accepted */\n        alert = (\n            <Alert severity='success'>\n                {' '}\n                <FormattedMessage id='FileManagement.uploadedSuccessfully' />\n            </Alert>\n        );\n    } else {\n        /* Message if we have a mix of upload and delete */\n        alert = (\n            <Alert severity='warning'>\n                <>\n                    <h2 id='gallery-alert-title'>\n                        {' '}\n                        <FormattedMessage id='FileManagement.someFileFailedTitle' />{' '}\n                    </h2>\n                    {errorData.map(([filename, operationInfo], index: number) => {\n                        return (\n                            <p key={`gallery-snackbar-description ${filename} ${index}`}>\n                                <b>\n                                    <FormattedMessage\n                                        id='FileManagement.uploadedFailureInfo'\n                                        values={{ filename, errorMessage: operationInfo.message ?? fallbackError }}\n                                    />{' '}\n                                </b>\n                            </p>\n                        );\n                    })}\n                </>\n            </Alert>\n        );\n    }\n\n    return (\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            {alert}\n        </Snackbar>\n    );\n};\n\nexport function useGallerySnackbar(): GalleryHookReturn {\n    const [open, setOpen] = useState(false);\n    const handleClose = (_event?: SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') return;\n        setOpen(false);\n    };\n    const GalleryInformation: FunctionComponent<FetchComponentProps<GalleryExpectedFileInfo>> = ({ data }) => (\n        <GallerySnackbar handleClose={handleClose} data={data} open={open} />\n    );\n\n    return {\n        setOpen,\n        GallerySnackbar: GalleryInformation\n    };\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nexport const useGalleryRootStyle = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1)\n            }\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common/errorHandling';\nimport { Gallery } from './Gallery';\n\nexport const GalleryView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Gallery />\n    </ErrorFallback>\n);\n","import { mutate as swrMutate } from 'swr';\n\nexport const updateTable = (): void => void swrMutate('FileManagement/folderImages');\n","import { FunctionComponent, ReactNode } from 'react';\nimport { useIntl } from 'react-intl';\nimport { RetrieveErrorBox, ProgressCircle, AjaxType } from '../dataRetrieval';\n\nexport type ErrorMessageType = { errorMessage?: string };\nexport type FetchComponentProps<T> = {\n    data: T;\n};\n\ninterface Props<T> extends Omit<AjaxType<T, unknown>, 'ajax'> {\n    SuccessComponent: FunctionComponent<FetchComponentProps<T>>;\n    LoadingComponent?: FunctionComponent;\n    ErrorComponent?: FunctionComponent<ErrorMessageType>;\n}\n\ninterface AjaxComponentReturn {\n    AjaxComponent: FunctionComponent;\n}\n\nexport function useAjaxComponent<T>(props: Props<T> & { children?: ReactNode }): AjaxComponentReturn {\n    const { SuccessComponent, ErrorComponent = RetrieveErrorBox, LoadingComponent = ProgressCircle, data, isLoading, error } = props;\n    const intl = useIntl();\n    const AjaxComponent: FunctionComponent = () => {\n        /*If component is not ready to call then we just return a placeholder */\n        if (error?.error) {\n            return <ErrorComponent errorMessage={error?.message} />;\n        }\n        if (isLoading) {\n            return <LoadingComponent />;\n        }\n        if (data === undefined) {\n            return <div />;\n        }\n\n        /* After going through all the possible reasons we can have an error, '\n         * we finally try to render the component with the information we\n         * retrieved from our end point\n         */\n        try {\n            return <SuccessComponent data={data} />;\n        } catch (error) {\n            let errorMessage = 'Unknown error';\n            if ((error as Error) !== undefined) {\n                const val: ErrorMessageType = { errorMessage: (error as Error).message ?? '' };\n                errorMessage = intl.formatMessage({ id: 'Error.processingError' }, val);\n            }\n            return <ErrorComponent errorMessage={errorMessage} />;\n        }\n    };\n\n    return {\n        AjaxComponent\n    };\n}\n","import axios, { AxiosInstance } from 'axios';\n\nfunction getAPI() {\n    switch (process.env.NODE_ENV) {\n        case 'development':\n            return 'https://arif115.myweb.cs.uwindsor.ca/imagerepository/beta/src/api/';\n        case 'test':\n            return 'http://localhost:4000/src/api/';\n        case 'production':\n            return 'https://arif115.myweb.cs.uwindsor.ca/imagerepository/src/api/';\n    }\n}\nexport const API = getAPI();\n\nexport const AXIOS_ENDPOINT: AxiosInstance = axios.create({\n    withCredentials: true,\n    baseURL: API\n});\n","import { FunctionComponent } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { Theme, makeStyles } from '@material-ui/core/styles';\n\ninterface Props {\n    inline?: boolean;\n    size?: number;\n}\n\nconst useStyles = makeStyles<Theme, { inline?: boolean }>({\n    progress: {\n        display: ({ inline }): string => (inline ? 'default' : 'block'),\n        margin: ({ inline }): string => (inline ? '0' : 'auto')\n    }\n});\n\nexport const ProgressCircle: FunctionComponent<Props> = ({ inline, size }) => {\n    const classes = useStyles({ inline });\n\n    return <CircularProgress className={classes.progress} size={size ? size : 40} />;\n};\n","import { FunctionComponent } from 'react';\nimport { TextField as MaterialTextField, InputBaseProps as InputProps } from '@material-ui/core';\nimport { useIntl } from 'react-intl';\n\nexport type TextInputFieldProps = {\n    id: string;\n    name: string;\n    autoCompleteName: string;\n    labelTranslatorId: string;\n    autoFocus?: boolean;\n    type?: string;\n    helperText?: string | false;\n    inputProps?: InputProps;\n};\n\nexport const TextField: FunctionComponent<TextInputFieldProps> = ({\n    id,\n    name,\n    autoCompleteName,\n    labelTranslatorId,\n    inputProps,\n    autoFocus,\n    type,\n    helperText\n}) => {\n    const intl = useIntl();\n    return (\n        <>\n            <MaterialTextField\n                id={id}\n                autoComplete={autoCompleteName}\n                name={name}\n                variant='outlined'\n                required\n                fullWidth\n                label={intl.formatMessage({ id: labelTranslatorId })}\n                autoFocus={autoFocus}\n                type={type !== undefined ? type : 'text'}\n                helperText={helperText}\n                InputProps={{\n                    ...inputProps\n                }}\n            />\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link as MaterialLink, LinkProps as MaterialLinkProps } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport type LinkProps = {\n    to: string;\n    labelTranslatorId: string;\n    linkProps?: MaterialLinkProps;\n};\nexport const Link: FunctionComponent<LinkProps> = ({ to, labelTranslatorId, linkProps }) => (\n    <>\n        {to && (\n            <MaterialLink {...linkProps} component={RouterLink} to={to}>\n                <FormattedMessage id={labelTranslatorId} />\n            </MaterialLink>\n        )}\n    </>\n);\n","import { FunctionComponent } from 'react';\nimport { MessageBox, MessageBoxTypes } from '..';\nimport { MessageDescriptor, FormattedMessage } from 'react-intl';\n\nexport interface InternationalizedMessageBoxProp extends MessageDescriptor {\n    errorMessage?: string;\n    className?: string;\n    type: MessageBoxTypes;\n}\n\n/* Used to italicize and bold */\nexport const bolder: FunctionComponent = (chunks) => <b>{chunks}</b>;\nexport const emphasizer: FunctionComponent = (chunks) => <em>{chunks}</em>;\n\nexport const InternationalizedMessageBox: FunctionComponent<InternationalizedMessageBoxProp> = ({\n    type,\n    className,\n    errorMessage,\n    id,\n    defaultMessage,\n    description\n}) => (\n    <MessageBox type={type} className={className}>\n        <FormattedMessage\n            id={id}\n            defaultMessage={defaultMessage}\n            description={description}\n            values={{\n                breakingLine: <br />,\n                b: bolder,\n                em: emphasizer,\n                i: emphasizer,\n                errorMessage: errorMessage ?? 'Something went wrong :('\n            }}\n        />\n    </MessageBox>\n);\n","import { FunctionComponent, useState } from 'react';\nexport type ThumbProps = {\n    index: number;\n    imageFile: File;\n    imageTitle: string;\n};\nexport const Thumbs: FunctionComponent<ThumbProps> = ({ index, imageFile, imageTitle }) => {\n    const [imageUrl, setImageUrl] = useState<string>('');\n    const reader = new FileReader();\n    reader.addEventListener(\n        'load',\n        () => {\n            // convert image file to base64 string\n            setImageUrl(reader.result as string);\n        },\n        false\n    );\n    reader.readAsDataURL(imageFile);\n    return <img src={imageUrl} key={`image.${index}`} alt={imageTitle} height={200} width={200} />;\n};\n","import { FunctionComponent, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Thumbs } from './Thumbs';\nimport { FormattedMessage } from 'react-intl';\n\nconst dropzoneStyle = {\n    width: '100%',\n    height: 'auto',\n    borderWidth: 2,\n    borderColor: 'rgb(102, 102, 102)',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\n\nexport type DropzoneProps = {\n    onDropHandler: (acceptedFiles: File[]) => void;\n    files?: File[];\n};\nexport const Dropzone: FunctionComponent<DropzoneProps> = ({ onDropHandler, files }) => {\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n        accept: 'image/*',\n        onDrop: onDropHandler\n    });\n    const style = useMemo(\n        () => ({\n            ...dropzoneStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {})\n        }),\n        [isDragActive, isDragReject, isDragAccept]\n    );\n\n    return (\n        <div {...getRootProps({ className: 'dropzone', style })}>\n            <input {...getInputProps()} />\n            <p>\n                <FormattedMessage id='DragZone.dragPrompt' />\n            </p>\n            {isDragActive && (\n                <p>\n                    <FormattedMessage id='DragZone.acceptedPrompt' />\n                </p>\n            )}\n            {isDragReject && (\n                <p>\n                    <FormattedMessage id='DragZone.rejectedPrompt' />\n                </p>\n            )}\n            {(files ?? []).length === 0 && (\n                <p>\n                    <FormattedMessage id='DragZone.initialDragPrompt' />\n                </p>\n            )}\n            {(files ?? []).map((file: File, i: number) => (\n                <Thumbs key={`Image.${i}`} index={i} imageFile={file} imageTitle={`Title.${i}`} />\n            ))}\n            <em>\n                <FormattedMessage id='DragZone.fileTypePrompt' />\n            </em>\n        </div>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { InternationalizedMessageBox, InternationalizedMessageBoxProp } from '../internationalizedComponents';\n\nexport type RetrieveErrorBoxProps = Omit<InternationalizedMessageBoxProp, 'type' | 'id'>;\nexport const RetrieveErrorBox: FunctionComponent<RetrieveErrorBoxProps> = ({ className, errorMessage, defaultMessage, description }) => (\n    <InternationalizedMessageBox\n        type='error'\n        id='Error.retrieveError'\n        className={className}\n        errorMessage={errorMessage}\n        defaultMessage={defaultMessage}\n        description={description}\n    />\n);\n","import { FunctionComponent } from 'react';\nimport { ErrorMessageType } from './AjaxComponent';\n\nexport const SimpleErrorMessage: FunctionComponent<ErrorMessageType> = ({ errorMessage }) => {\n    if (errorMessage !== undefined) {\n        return <div> {errorMessage} </div>;\n    }\n    return <div />;\n};\n","import { useEffect, useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport { AXIOS_ENDPOINT } from './apiConstants';\nimport { AjaxType, ErrorType, ReturnType } from './useAjax';\nimport useSWR from 'swr';\n\ntype useAjaxReturn<T, Y> = Omit<AjaxType<T, Y>, 'ajax'>;\nexport const useSwrAjax = <T, Y>(endpoint: string, args?: Y): useAjaxReturn<T, Y> => {\n    const fetcher = (url: string) =>\n        AXIOS_ENDPOINT.get<T>(url, { params: args }).then((response: AxiosResponse<ReturnType<T>>) => response.data);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { data, error: swrError } = useSWR(endpoint, fetcher);\n    const [error, setError] = useState<ErrorType>(undefined as ErrorType);\n    useEffect(() => {\n        if (swrError && 'message' in swrError) {\n            setError({ error: true, message: (swrError as Error).message });\n        } else if (data && 'error' in data && data.error) {\n            setError(data as ErrorType);\n        }\n    }, [data, swrError]);\n\n    return {\n        data: (data as T) ?? undefined,\n        isLoading: error === undefined && data === undefined,\n        error\n    };\n};\n","import { useState } from 'react';\nimport { AxiosResponse } from 'axios';\nimport { AXIOS_ENDPOINT } from './apiConstants';\n\nexport type ErrorType = { error: boolean; message?: string } | undefined;\nexport type AjaxType<T, Y> = {\n    error: ErrorType;\n    isLoading: boolean;\n    data: T | undefined;\n    ajax: (args?: Y) => void;\n};\nexport type Setters<T> = (x: T) => void;\nexport type ReturnType<T> = T | ErrorType;\n\nexport function ajaxCall<T, Y>(\n    endpoint: string,\n    setLoading: Setters<boolean>,\n    setData: Setters<T>,\n    setError: Setters<ErrorType>,\n    args?: Y\n): void {\n    setLoading(true);\n    AXIOS_ENDPOINT.post(endpoint, args)\n        .then((response: AxiosResponse<ReturnType<T>>) => {\n            const result: ReturnType<T> = response.data;\n            setLoading(false);\n            setData(result as T);\n            if (result && 'error' in result && result.error) {\n                setError(result as ErrorType);\n            }\n        })\n        .catch((error): void => {\n            if ((error as Error) !== undefined) {\n                const e: ErrorType = { error: true, message: (error as Error)?.message ?? 'Unknown error' };\n                setError(e);\n                setLoading(false);\n            }\n        });\n}\n\nexport function useAjax<T, Y>(endpoint: string): AjaxType<T, Y> {\n    const [error, setError] = useState<ErrorType>(undefined as ErrorType);\n    const [isLoading, setLoading] = useState(false);\n    const [data, setData] = useState<T>();\n    const ajax = (args?: Y) => ajaxCall<T, Y>(endpoint, setLoading, setData, setError, args);\n\n    return {\n        error,\n        isLoading,\n        data,\n        ajax\n    };\n}\n","import { FunctionComponent } from 'react';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nexport type MessageBoxTypes = 'warning' | 'error';\n\ninterface Props {\n    className?: string;\n    type: MessageBoxTypes;\n}\n\nconst useStyles = makeStyles({\n    default: {\n        padding: '15px'\n    },\n    error: {\n        backgroundColor: '#f2dede',\n        color: '#a94442'\n    },\n    warning: {\n        backgroundColor: '#fcf8e3',\n        color: '#8a6d3b'\n    }\n});\n\nconst getStylesForType = (classes: ReturnType<typeof useStyles>, type: MessageBoxTypes): string => {\n    switch (type) {\n        case 'error':\n            return classes.error;\n        case 'warning':\n            return classes.warning;\n    }\n};\n\nexport const MessageBox: FunctionComponent<Props> = ({ children, className, type }) => {\n    const classes = useStyles();\n    return <Paper className={clsx(classes.default, getStylesForType(classes, type), className)}>{children}</Paper>;\n};\n","import { FunctionComponent } from 'react';\nimport { TableRow, TableCell } from '@material-ui/core';\n\ntype Props = { emptyRows: number; dense: boolean };\nexport const EmptyRow: FunctionComponent<Props> = ({ emptyRows, dense }) => (\n    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n        <TableCell colSpan={6} />\n    </TableRow>\n);\n","import { FunctionComponent, MouseEvent } from 'react';\nimport { TableData, useTableHeadStyle, OnRequestSortParameter, GalleryTableProps, HeadCell } from '.';\nimport { Checkbox, TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst headCells: HeadCell<TableData>[] = [\n    { id: 'fileName', numeric: false },\n    { id: 'fileSize', numeric: true },\n    { id: 'filePath', numeric: false },\n    { id: 'uploaded', numeric: false }\n];\n\nfunction createSortHandler<T>(property: keyof T, onRequestSort: OnRequestSortParameter<T>) {\n    return (event: MouseEvent<HTMLButtonElement>): void => {\n        onRequestSort(event, property);\n    };\n}\n/* Handle toggling of sort button */\nexport const GalleryTableHead: FunctionComponent<GalleryTableProps<TableData>> = ({\n    numSelected,\n    onRequestSort,\n    onSelectAllClick,\n    order,\n    orderBy,\n    rowCount,\n    intl\n}) => {\n    const classes: ClassNameMap = useTableHeadStyle();\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding='checkbox'>\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': intl.formatMessage({ id: 'Gallery.Table.checkboxLabel' }) }}\n                    />\n                </TableCell>\n                {headCells.map((headCell: HeadCell<TableData>) => (\n                    <TableCell key={headCell.id} align='left' padding='none' sortDirection={orderBy === headCell.id ? order : false}>\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler<TableData>(headCell.id, onRequestSort)}>\n                            {intl.formatMessage({ id: `Gallery.Table.${headCell.id}` })}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n","import { makeStyles, createStyles, Theme, lighten } from '@material-ui/core/styles';\n\nexport const useTableHeadStyle = makeStyles(() =>\n    createStyles({\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1\n        }\n    })\n);\n\nexport const useGalleryTableStyle = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            overflowY: 'auto',\n            overflowX: 'hidden'\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2)\n        },\n        table: {\n            minWidth: '100%'\n        }\n    })\n);\n\nexport const useToolbarStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1)\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                      color: theme.palette.secondary.main,\n                      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n                  }\n                : {\n                      color: theme.palette.text.primary,\n                      backgroundColor: theme.palette.secondary.dark\n                  },\n        title: {\n            flex: '1 1 100%'\n        }\n    })\n);\n","import { FunctionComponent } from 'react';\nimport { useToolbarStyles } from '.';\nimport { IconButton, Tooltip, Toolbar, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport clsx from 'clsx';\nimport { FormattedMessage } from 'react-intl';\n\ninterface GalleryTableToolbarProps {\n    selected: number[];\n}\n\nexport const GalleryTableToolbar: FunctionComponent<GalleryTableToolbarProps> = ({ selected }) => {\n    const classes: ClassNameMap = useToolbarStyles();\n    const numSelected = selected.length;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0\n            })}>\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color='inherit' variant='subtitle1' component='div'>\n                    <FormattedMessage id='Gallery.Table.selected' values={{ numSelected }} />\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant='h6' id='tableTitle' component='div'>\n                    <FormattedMessage id='Gallery.Table.title' />\n                </Typography>\n            )}\n            {numSelected > 0 && (\n                <Tooltip title='Delete'>\n                    <IconButton\n                        aria-label='delete'\n                        onClick={() => {\n                            alert(`Will delete of the files with the following IDs: ${selected.join()} `);\n                        }}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n","import { DateTime } from 'luxon';\n\n/* TODO: figure out how to incorporate folders as well */\nexport interface TableData {\n    fileID: number;\n    fileName: string;\n    fileSize: number;\n    /* When the file was first uploaded */\n    uploaded: DateTime;\n    /* Folder */\n    filePath: string;\n    /* type of file*/\n    mime: string;\n    accessID: number;\n}\n\nexport function createData(\n    fileID: number,\n    fileName: string,\n    fileSize: number,\n    uploadedDtString: string,\n    filePath: string,\n    mime: string,\n    accessID: number\n): TableData {\n    const uploaded = DateTime.fromSQL(uploadedDtString);\n    return { fileID, fileName, fileSize, filePath, uploaded, mime, accessID };\n}\n","import { useState, ChangeEvent, FunctionComponent } from 'react';\nimport { TablePagination as MaterialPagination } from '@material-ui/core';\n\ntype ReturnType = { emptyRows: number; startIndex: number; endIndex: number; TablePagination: FunctionComponent };\nexport const useTablePagination = (count: number): ReturnType => {\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [page, setPage] = useState(0);\n    const handleChangePage = (_event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const TablePagination: FunctionComponent = () => (\n        <MaterialPagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component='div'\n            count={count}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    );\n    return {\n        emptyRows: rowsPerPage - Math.min(rowsPerPage, count - page * rowsPerPage),\n        startIndex: page * rowsPerPage,\n        endIndex: page * rowsPerPage + rowsPerPage,\n        TablePagination\n    };\n};\n","/* From https://github.com/mui-org/material-ui/blob/master/docs/src/pages/components/tables/EnhancedTable.tsx */\nimport { TableData } from './TableData';\nimport { DateTime } from 'luxon';\n\nexport type Order = 'asc' | 'desc';\n/* Function to handle comparison   */\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T): number {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n/* Function used to compare the elements to sort them  */\nexport function getComparator<Key extends keyof TableData>(\n    order: Order,\n    orderBy: Key\n): (a: { [key in Key]: number | string | DateTime }, b: { [key in Key]: number | string | DateTime }) => number {\n    return order === 'desc'\n        ? (a, b): number => descendingComparator(a, b, orderBy)\n        : (a, b): number => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort<T>(array: T[], comparator: (a: T, b: T) => number): T[] {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n","import { FunctionComponent } from 'react';\nimport { API } from '../../common';\nimport { useIntl } from 'react-intl';\nimport { IconButton } from '@material-ui/core';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nexport type DownloadApiArguments = {\n    filePath?: string;\n    fileName?: string;\n    fileId?: number;\n};\n\ntype Props = {\n    fileID: number;\n    fileName: string;\n};\n\nexport const DownloadButton: FunctionComponent<Props> = ({ fileID, fileName }) => {\n    const intl = useIntl();\n    const downloadFile = (): void => {\n        const a = document.createElement('a');\n        a.href = `${API}/FileManagement/image?download=true&fileId=${fileID}`;\n        a.setAttribute('download', fileName);\n        a.click();\n    };\n    return (\n        <IconButton\n            onClick={downloadFile}\n            aria-label={intl.formatMessage({\n                id: 'FileManagement.download'\n            })}>\n            <CloudDownloadIcon />\n        </IconButton>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { TableData } from '../galleryTable';\nimport { useDeleteButton, DownloadButton } from '.';\nimport { ButtonGroup } from '@material-ui/core';\n\nexport const FileManagementButtonGroup: FunctionComponent<TableData> = (rowData) => {\n    const { fileID, fileName } = rowData;\n    const { deleted, DeleteButton } = useDeleteButton({ fileID });\n    return (\n        <ButtonGroup>\n            {!deleted && <DeleteButton />}\n            <DownloadButton fileID={fileID} fileName={fileName} />\n        </ButtonGroup>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { updateTable } from '../gallery';\nimport { useAjax } from '../../common';\nimport { useIntl } from 'react-intl';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport type DeleteApiReturn = {\n    error: boolean;\n    message?: string;\n};\n\nexport type DeleteApiArguments = {\n    filePath?: string;\n    fileName?: string;\n    fileId?: number;\n};\n\ntype Props = {\n    fileID: number;\n};\n\ntype deleteHookReturn = {\n    deleted: boolean;\n    DeleteButton: FunctionComponent;\n};\n\nexport const useDeleteButton = (props: Props): deleteHookReturn => {\n    const intl = useIntl();\n    const { fileID } = props;\n    const { data, isLoading, ajax } = useAjax<DeleteApiReturn, DeleteApiArguments>(`/FileManagement/delete?fileId=${fileID}`);\n    const deleteFile = (): void => {\n        ajax();\n        updateTable();\n    };\n    const DeleteButton: FunctionComponent = () => (\n        <IconButton\n            onClick={deleteFile}\n            disabled={isLoading}\n            aria-label={intl.formatMessage({\n                id: 'FileManagement.delete'\n            })}>\n            <DeleteIcon />\n        </IconButton>\n    );\n\n    return { deleted: data?.error ?? false, DeleteButton };\n};\n","import { FunctionComponent, MouseEvent } from 'react';\nimport { FileManagementButtonGroup } from '.';\nimport { TableData } from '../galleryTable';\nimport { Checkbox, TableCell, TableRow } from '@material-ui/core';\nimport { DateTime } from 'luxon';\n\ninterface GalleryTableRowProps {\n    handleClick: (event: MouseEvent<HTMLTableHeaderCellElement | HTMLTableDataCellElement>, id: number) => void;\n    isItemSelected: boolean;\n    labelId: string;\n    row: TableData;\n}\n\n/* Source https://web.archive.org/web/20120507054320/http://codeaid.net/javascript/convert-size-in-bytes-to-human-readable-format-(javascript)*/\nfunction formatBytes(bytes: number, decimals = 2): string {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nfunction dateToString(dt: DateTime) {\n    return dt.toLocaleString(DateTime.DATETIME_FULL);\n}\n\n/* Create the table row  */\nexport const GalleryTableRow: FunctionComponent<GalleryTableRowProps> = ({ handleClick, isItemSelected, labelId, row }) => (\n    <TableRow hover role='checkbox' aria-checked={isItemSelected} tabIndex={-1} key={row.fileID} selected={isItemSelected}>\n        <TableCell padding='checkbox' onClick={(event) => handleClick(event, row.fileID)}>\n            <Checkbox checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} />\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {row.fileName}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {formatBytes(row.fileSize)}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {row.filePath}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            {dateToString(row.uploaded)}\n        </TableCell>\n        <TableCell align='left' padding='none'>\n            <FileManagementButtonGroup {...row} />\n        </TableCell>\n    </TableRow>\n);\n","import { useState, ChangeEvent, MouseEvent, FunctionComponent } from 'react';\nimport { Table, TableBody, TableContainer, Paper, FormControlLabel, Switch } from '@material-ui/core';\nimport {\n    createData,\n    EmptyRow,\n    GalleryTableHead,\n    getComparator,\n    stableSort,\n    Order,\n    GalleryTableToolbar,\n    TableData,\n    useGalleryTableStyle,\n    useTablePagination\n} from '../galleryTable';\nimport { GalleryTableRow } from '../galleryTableRow';\nimport { useIntl } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { FetchComponentProps } from '../../common';\nimport { FileApiReturnData, FileData } from '../gallery';\n\nexport const GalleryTable: FunctionComponent<FetchComponentProps<FileApiReturnData>> = ({ data }) => {\n    /******************* Hooks*******************/\n    const classes: ClassNameMap = useGalleryTableStyle();\n    const intl = useIntl();\n\n    /******************* States *******************/\n    const [order, setOrder] = useState<Order>('asc');\n    /* By default sort by image name */\n    const [orderBy, setOrderBy] = useState<keyof TableData>('fileName');\n    const [selected, setSelected] = useState<number[]>([]);\n    const [dense, setDense] = useState(false);\n\n    /******************* Variables *******************/\n\n    const rows: TableData[] =\n        'error' in data\n            ? []\n            : data.map((fd: FileData) => {\n                  return createData(fd.fileID, fd.fileName, fd.fileSize, fd.uploaded, fd.filePath, fd.mime, fd.accessID);\n              });\n\n    const handleRequestSort = (_event: MouseEvent<unknown>, property: keyof TableData) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            const newSelected = rows.map((n) => n.fileID);\n            setSelected(newSelected);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (_event: MouseEvent<unknown>, id: number) => {\n        /* NOTE: using a map over an array might increase performance */\n        const selectedIndex = selected.indexOf(id);\n        let newSelected: number[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangeDense = (event: ChangeEvent<HTMLInputElement>) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (id: number) => selected.indexOf(id) !== -1;\n\n    const { emptyRows, startIndex, endIndex, TablePagination } = useTablePagination(rows.length);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <GalleryTableToolbar selected={selected} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby='tableTitle'\n                        size={dense ? 'small' : 'medium'}\n                        aria-label={intl.formatMessage({\n                            id: 'Gallery.Table.title'\n                        })}>\n                        <GalleryTableHead\n                            numSelected={selected.length}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            order={order}\n                            orderBy={orderBy}\n                            rowCount={rows.length}\n                            intl={intl}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(startIndex, endIndex)\n                                .map((row: TableData, index: number) => (\n                                    <GalleryTableRow\n                                        row={row}\n                                        labelId={`gallery-${index}`}\n                                        isItemSelected={isSelected(row.fileID)}\n                                        handleClick={handleClick}\n                                        key={row.fileID}\n                                    />\n                                ))}\n                            {emptyRows > 0 && <EmptyRow emptyRows={emptyRows} dense={dense} />}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label={intl.formatMessage({ id: 'Gallery.Table.paddingSwitch' })}\n            />\n        </div>\n    );\n};\n","export * from './EmptyRow';\nexport * from './GalleryTable';\nexport * from './GalleryTableHead';\nexport * from './GalleryTableStyle';\nexport * from './GalleryTableToolbar';\nexport * from './TableData';\nexport * from './TablePagination';\nexport * from './TableSorter';\nexport * from './GalleryTableHeadTypes';\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common/errorHandling';\nimport { Home, useBackgroundStyle } from '../home';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const HomeView: FunctionComponent = () => {\n    /* Load main background */\n    const classes: ClassNameMap = useBackgroundStyle();\n    return (\n        <ErrorFallback>\n            <div className={classes.backgroundContainer}>\n                <Home />\n            </div>\n        </ErrorFallback>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { useHomeStyles, LoginButton, SignUpButton } from '../home';\nimport { Grid, ButtonGroup } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const Home: FunctionComponent = () => {\n    const classes: ClassNameMap = useHomeStyles();\n    return (\n        <Grid container spacing={0} direction='row' alignItems='center' justify='center' className={classes.mainGrid}>\n            <Grid item xs={3}>\n                <ButtonGroup\n                    orientation='vertical'\n                    color='primary'\n                    variant='contained'\n                    fullWidth\n                    aria-label='vertical landing page button group'\n                    className={classes.mainButtons}>\n                    <LoginButton />\n                    <SignUpButton />\n                </ButtonGroup>\n            </Grid>\n        </Grid>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/space.32812815.jpg\";","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\nimport backgroundImage from '../../resources/space.jpg';\n\nexport const useHomeStyles = makeStyles(\n    (): StyleRules =>\n        createStyles({\n            mainGrid: {\n                minHeight: '100vh'\n            },\n            mainButtons: {\n                minWidth: '30%'\n            }\n        })\n);\n\nexport const useBackgroundStyle = makeStyles(\n    (): StyleRules =>\n        createStyles({\n            backgroundContainer: {\n                backgroundImage: `url(${backgroundImage})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n                width: '100vw',\n                height: '100vh'\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport const SignUpButton: FunctionComponent = (props) => {\n    const history = useHistory();\n    const goToSignupPage = (): void => {\n        history.push('/signup');\n    };\n    return (\n        <Button onClick={goToSignupPage} {...props}>\n            {' '}\n            <FormattedMessage id='UserManagement.signup' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\nexport const LoginButton: FunctionComponent = (props) => {\n    const history = useHistory();\n    const goToLoginPage = (): void => {\n        history.push('/login');\n    };\n    return (\n        <Button onClick={goToLoginPage} {...props}>\n            <FormattedMessage id='UserManagement.login' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { Link, TextField, useAjax } from '../../common';\nimport {\n    FormValues,\n    getValidationSchema,\n    useLoginStyles,\n    SubmitButton,\n    LoginHeader,\n    LoginApiReturn,\n    LoginMessage,\n    LoginProgressCircle\n} from '../login';\nimport { Checkbox, FormControlLabel, Grid } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n/* Modified from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in */\n\nexport const Login: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const validationSchema = getValidationSchema(intl);\n\n    const formik = useFormik({\n        initialValues: validationSchema.cast({\n            email: '',\n            password: '',\n            remember: false\n        }),\n        validationSchema,\n        onSubmit: (values) => {\n            ajax(values as FormValues);\n        }\n    });\n    const { data, isLoading, ajax } = useAjax<LoginApiReturn, FormValues>('/UserManagement/login');\n\n    if (data !== undefined) {\n        const { error } = data;\n        if (!error) {\n            history.push('/gallery');\n        }\n    }\n\n    if (isLoading) {\n        return <LoginProgressCircle />;\n    }\n\n    /* Manage form data then pass it to the submit button */\n    return (\n        <div className={classes.paper}>\n            <LoginHeader />\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                <TextField\n                    id='email'\n                    labelTranslatorId='UserManagement.email'\n                    name='email'\n                    type='email'\n                    autoCompleteName='email'\n                    helperText={formik.touched.email && formik.errors.email}\n                    inputProps={{\n                        value: formik.values.email,\n                        onChange: formik.handleChange,\n                        error: formik.touched.email && Boolean(formik.errors.email)\n                    }}\n                />\n                <TextField\n                    name='password'\n                    labelTranslatorId='UserManagement.password'\n                    type='password'\n                    id='password'\n                    autoCompleteName='password'\n                    helperText={formik.touched.password && formik.errors.password}\n                    inputProps={{\n                        value: formik.values.password,\n                        onChange: formik.handleChange,\n                        error: formik.touched.password && Boolean(formik.errors.password)\n                    }}\n                />\n                <FormControlLabel\n                    control={<Checkbox value={formik.values.remember} color='primary' onChange={formik.handleChange} />}\n                    name='remember'\n                    label={intl.formatMessage({ id: 'UserManagement.rememberMe' })}\n                />\n                <SubmitButton />\n                <Grid container justify='flex-end'>\n                    <Grid item xs>\n                        <Link to='/forgotPassword' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.forgotPassword' />\n                    </Grid>\n                    <Grid item>\n                        <Link to='/signUp' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.notRegistered' />\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <LoginMessage message={data?.message ?? ''} />\n                </Grid>\n            </form>\n        </div>\n    );\n};\n","import * as yup from 'yup';\nimport { IntlShape } from 'react-intl';\n\nexport interface FormValues {\n    email: string;\n    password: string;\n    remember?: boolean;\n}\n\nexport function getValidationSchema(intl: IntlShape): yup.SchemaOf<FormValues> {\n    return yup\n        .object({\n            email: yup\n                .string()\n                .email(intl.formatMessage({ id: 'UserManagement.validEmail' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredEmail' })),\n            password: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredPassword' })),\n            remember: yup.boolean()\n        })\n        .defined();\n}\n","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\n\nexport const useLoginStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            paper: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            },\n            form: {\n                width: '100%', // Fix IE 11 issue.\n                marginTop: theme.spacing(3)\n            }\n        })\n);\n\nexport const useLoginLoadingStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            backdrop: {\n                zIndex: theme.zIndex.drawer + 1,\n                color: '#fff'\n            }\n        })\n);\nexport const useLoginHeaderStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            avatar: {\n                margin: theme.spacing(1),\n                backgroundColor: theme.palette.secondary.main\n            }\n        })\n);\n\nexport const useLoginButtonStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            submit: {\n                margin: theme.spacing(3, 0, 2)\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useLoginHeaderStyles } from './LoginStyle';\nimport { Avatar, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { FormattedMessage } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const LoginHeader: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginHeaderStyles();\n    return (\n        <>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n                <FormattedMessage id='UserManagement.login' />\n            </Typography>\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\n\nexport type LoginApiReturn = {\n    error: boolean;\n    message: string;\n};\n\ntype Props = {\n    message?: string;\n};\nexport const LoginMessage: FunctionComponent<Props> = ({ message }) => {\n    return <div> {message} </div>;\n};\n","import { FunctionComponent } from 'react';\nimport { Backdrop } from '@material-ui/core';\nimport { ProgressCircle } from '../../common';\nimport { useLoginLoadingStyles } from './LoginStyle';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const LoginProgressCircle: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginLoadingStyles();\n    return (\n        <Backdrop className={classes.backdrop} open={true}>\n            <ProgressCircle />\n        </Backdrop>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { useLoginButtonStyles } from './LoginStyle';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SubmitButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useLoginButtonStyles();\n    return (\n        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n            <FormattedMessage id='UserManagement.login' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common';\nimport { Container } from '@material-ui/core';\nimport { Login } from './Login';\n\nexport const LoginView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Container component='main' maxWidth='xs'>\n            <Login />\n        </Container>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\nimport { useAjax, useAjaxComponent, SimpleErrorMessage, Link, TextField } from '../../common';\nimport { FormValues, getValidationSchema, useSignUpStyles, SignUpHeader, SignupApiReturn, SignupMessage, SubmitButton } from '../register';\nimport { Grid } from '@material-ui/core';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { useFormik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n\n/* Modified from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-up */\n\nexport const SignUp: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const validationSchema = getValidationSchema(intl);\n    const formik = useFormik({\n        initialValues: validationSchema.cast({\n            email: '',\n            password: '',\n            confirmPassword: '',\n            firstName: '',\n            lastName: ''\n        }),\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            if (isLoading && formik.isSubmitting) return;\n            ajax(values as FormValues);\n        }\n    });\n\n    const { data, isLoading, error, ajax } = useAjax<SignupApiReturn, FormValues>('/UserManagement/register');\n    const { AjaxComponent } = useAjaxComponent<SignupApiReturn>({\n        SuccessComponent: SignupMessage,\n        ErrorComponent: SimpleErrorMessage,\n        data,\n        isLoading,\n        error\n    });\n\n    if (data !== undefined) {\n        const { id } = data;\n        if (id > 0) {\n            history.push('login');\n        }\n    }\n\n    /* Manage form data then pass it to the submit button */\n    return (\n        <div className={classes.paper}>\n            <SignUpHeader />\n            <form className={classes.form} onSubmit={formik.handleSubmit} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoCompleteName='firstName'\n                            name='firstName'\n                            id='firstName'\n                            labelTranslatorId='UserManagement.firstName'\n                            autoFocus\n                            helperText={formik.touched.firstName && formik.errors.firstName}\n                            inputProps={{\n                                value: formik.values.firstName,\n                                onChange: formik.handleChange,\n                                error: formik.touched.firstName && Boolean(formik.errors.firstName)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            id='lastName'\n                            labelTranslatorId='UserManagement.lastName'\n                            name='lastName'\n                            autoCompleteName='lname'\n                            helperText={formik.touched.lastName && formik.errors.lastName}\n                            inputProps={{\n                                value: formik.values.lastName,\n                                onChange: formik.handleChange,\n                                error: formik.touched.lastName && Boolean(formik.errors.lastName)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            id='email'\n                            labelTranslatorId='UserManagement.email'\n                            name='email'\n                            type='email'\n                            autoCompleteName='email'\n                            helperText={formik.touched.email && formik.errors.email}\n                            inputProps={{\n                                value: formik.values.email,\n                                onChange: formik.handleChange,\n                                error: formik.touched.email && Boolean(formik.errors.email)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            name='password'\n                            labelTranslatorId='UserManagement.password'\n                            type='password'\n                            id='password'\n                            autoCompleteName='password'\n                            helperText={formik.touched.password && formik.errors.password}\n                            inputProps={{\n                                value: formik.values.password,\n                                onChange: formik.handleChange,\n                                error: formik.touched.password && Boolean(formik.errors.password)\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            name='confirmPassword'\n                            labelTranslatorId='UserManagement.confirmPassword'\n                            type='password'\n                            id='confirmPassword'\n                            autoCompleteName='confirmPassword'\n                            helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n                            inputProps={{\n                                value: formik.values.confirmPassword,\n                                onChange: formik.handleChange,\n                                error: formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <SubmitButton />\n                <Grid container justify='flex-end'>\n                    <Grid item>\n                        <Link to='/login' linkProps={{ variant: 'body2' }} labelTranslatorId='UserManagement.alreadyRegistered' />\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <AjaxComponent />\n                </Grid>\n            </form>\n        </div>\n    );\n};\n","import * as yup from 'yup';\nimport { IntlShape } from 'react-intl';\n\nexport interface FormValues {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n}\n\nexport function getValidationSchema(intl: IntlShape): yup.SchemaOf<FormValues> {\n    return yup\n        .object({\n            email: yup\n                .string()\n                .email(intl.formatMessage({ id: 'UserManagement.validEmail' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredEmail' })),\n            password: yup\n                .string()\n                .min(8, intl.formatMessage({ id: 'UserManagement.validPassword' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredPassword' })),\n            confirmPassword: yup\n                .string()\n                .oneOf([yup.ref('password'), null], intl.formatMessage({ id: 'UserManagement.validConfirmPassword' }))\n                .required(intl.formatMessage({ id: 'UserManagement.requiredConfirmPassword' })),\n            firstName: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredFirstName' })),\n            lastName: yup.string().required(intl.formatMessage({ id: 'UserManagement.requiredLastName' }))\n        })\n        .defined();\n}\n","import { makeStyles, createStyles, StyleRules } from '@material-ui/core/styles';\n\nexport const useSignUpStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            paper: {\n                marginTop: theme.spacing(8),\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            },\n            form: {\n                width: '100%', // Fix IE 11 issue.\n                marginTop: theme.spacing(3)\n            }\n        })\n);\n\nexport const useSignUpHeaderStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            avatar: {\n                margin: theme.spacing(1),\n                backgroundColor: theme.palette.secondary.main\n            }\n        })\n);\n\nexport const useSignUpButtonStyles = makeStyles(\n    (theme): StyleRules =>\n        createStyles({\n            submit: {\n                margin: theme.spacing(3, 0, 2)\n            }\n        })\n);\n","import { FunctionComponent } from 'react';\nimport { useSignUpHeaderStyles } from './SignUpStyle';\nimport { Avatar, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { FormattedMessage } from 'react-intl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SignUpHeader: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpHeaderStyles();\n    return (\n        <>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n                <FormattedMessage id='UserManagement.signup' />\n            </Typography>\n        </>\n    );\n};\n","import { FunctionComponent } from 'react';\nimport { FetchComponentProps } from '../../common';\nimport { FormattedMessage } from 'react-intl';\nexport type SignupApiReturn = {\n    id: string | number;\n    message?: string;\n};\nexport type SuccessProps = FetchComponentProps<SignupApiReturn>;\n\nexport const SignupMessage: FunctionComponent<SuccessProps> = ({ data }) => {\n    if (data !== undefined) {\n        if ('id' in data && data.id !== undefined) {\n            return <FormattedMessage id='UserManagement.signupSuccess' />;\n        } else if ('message' in data && data.message !== undefined) {\n            return <div> {data.message} </div>;\n        }\n    }\n    return <div />;\n};\n","import { FunctionComponent } from 'react';\nimport { Button } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { useSignUpButtonStyles } from './SignUpStyle';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport const SubmitButton: FunctionComponent = () => {\n    const classes: ClassNameMap = useSignUpButtonStyles();\n    return (\n        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n            <FormattedMessage id='UserManagement.signup' />\n        </Button>\n    );\n};\n","import { FunctionComponent } from 'react';\n/* Handle error in program */\nimport { ErrorFallback } from '../../common';\nimport { Container } from '@material-ui/core';\nimport { SignUp } from './SignUp';\n\nexport const SignUpView: FunctionComponent = () => (\n    <ErrorFallback>\n        <Container component='main' maxWidth='xs'>\n            <SignUp />\n        </Container>\n    </ErrorFallback>\n);\n","import { FunctionComponent } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { HomeView } from './home';\nimport { LoginView } from './login';\nimport { SignUpView } from './register';\nimport { GalleryView } from './gallery';\n/* Import the pages of the website */\nimport { NotFound } from '../common';\n/* Import to control the color scheme like dark mode */\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { pink, green } from '@material-ui/core/colors';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: pink[900]\n        },\n        secondary: {\n            main: green[500]\n        },\n        type: 'dark'\n    }\n});\n\nexport const App: FunctionComponent = () => (\n    <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <HashRouter hashType='noslash'>\n            <Switch>\n                {/*\n                <Route exact path='/forgotPassword'>\n                    <ForgotPasswordView />\n                </Route>\n                */}\n                <Route path='/gallery'>\n                    <GalleryView />\n                </Route>\n                <Route exact path='/login'>\n                    <LoginView />\n                </Route>\n                <Route exact path='/signup'>\n                    <SignUpView />\n                </Route>\n                <Route exact path='/'>\n                    <HomeView />\n                </Route>\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </HashRouter>\n    </ThemeProvider>\n);\n","import { FunctionComponent, StrictMode } from 'react';\nimport { App } from './components';\n/* Import for languages */\nimport { IntlProvider } from 'react-intl';\nimport messagesEn from './translations/en.json';\n/* Import website wide css */\nimport './index.css';\nimport ReactDOM from 'react-dom';\n\n/* For getting back data */\nconst language = (navigator.languages && navigator.languages[0]) || navigator.language;\n/* Since we only have English as a language */\nconst message = messagesEn;\n\nconst WrappedApp: FunctionComponent = () => (\n    <StrictMode>\n        <IntlProvider locale={language} messages={message}>\n            <App />\n        </IntlProvider>\n    </StrictMode>\n);\n\n// Renders the application\nReactDOM.render(<WrappedApp />, document.getElementById('root'));\n","import { FunctionComponent } from 'react';\n\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary';\n\nimport { MessageBox } from '..';\n\nconst FallbackComponent: FunctionComponent<FallbackProps> = ({ error }) => (\n    <MessageBox type='error'>\n        <b>Error</b>: An error occurred while rendering a component: <i>{error.message}</i>\n        <br />\n        <br />\n        Try refreshing the page, and please contact our team if this issue persists.\n    </MessageBox>\n);\n\nconst myErrorHandler = (_error: Error, info: { componentStack: string }) => {\n    console.error(`ComponentStack:${info.componentStack}`);\n};\n\nexport const ErrorFallback: FunctionComponent = ({ children }) => (\n    <ErrorBoundary FallbackComponent={FallbackComponent} onError={myErrorHandler}>\n        {children}\n    </ErrorBoundary>\n);\n","import { FunctionComponent } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { ErrorFallback } from './ErrorFallback';\nimport { MessageBox } from '..';\nimport { FormattedMessage } from 'react-intl';\n\nexport const NotFound: FunctionComponent = () => (\n    <ErrorFallback>\n        <MessageBox type='error'>\n            <Typography variant='h5'>\n                <FormattedMessage id='Error.404.greeting' />\n            </Typography>\n            <Typography variant='h6'>\n                <FormattedMessage id='Error.404.message' />\n            </Typography>\n            <Typography variant='body2'>\n                <FormattedMessage id='Error.404.errorBody' />\n            </Typography>\n        </MessageBox>\n    </ErrorFallback>\n);\n"],"sourceRoot":""}